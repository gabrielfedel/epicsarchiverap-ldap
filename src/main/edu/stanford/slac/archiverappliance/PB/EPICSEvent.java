// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: EPICSEvent.proto

package edu.stanford.slac.archiverappliance.PB;

public final class EPICSEvent {
  private EPICSEvent() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public enum PayloadType
      implements com.google.protobuf.ProtocolMessageEnum {
    SCALAR_STRING(0, 0),
    SCALAR_SHORT(1, 1),
    SCALAR_FLOAT(2, 2),
    SCALAR_ENUM(3, 3),
    SCALAR_BYTE(4, 4),
    SCALAR_INT(5, 5),
    SCALAR_DOUBLE(6, 6),
    WAVEFORM_STRING(7, 7),
    WAVEFORM_SHORT(8, 8),
    WAVEFORM_FLOAT(9, 9),
    WAVEFORM_ENUM(10, 10),
    WAVEFORM_BYTE(11, 11),
    WAVEFORM_INT(12, 12),
    WAVEFORM_DOUBLE(13, 13),
    V4_GENERIC_BYTES(14, 14),
    ;
    
    public static final int SCALAR_STRING_VALUE = 0;
    public static final int SCALAR_SHORT_VALUE = 1;
    public static final int SCALAR_FLOAT_VALUE = 2;
    public static final int SCALAR_ENUM_VALUE = 3;
    public static final int SCALAR_BYTE_VALUE = 4;
    public static final int SCALAR_INT_VALUE = 5;
    public static final int SCALAR_DOUBLE_VALUE = 6;
    public static final int WAVEFORM_STRING_VALUE = 7;
    public static final int WAVEFORM_SHORT_VALUE = 8;
    public static final int WAVEFORM_FLOAT_VALUE = 9;
    public static final int WAVEFORM_ENUM_VALUE = 10;
    public static final int WAVEFORM_BYTE_VALUE = 11;
    public static final int WAVEFORM_INT_VALUE = 12;
    public static final int WAVEFORM_DOUBLE_VALUE = 13;
    public static final int V4_GENERIC_BYTES_VALUE = 14;
    
    
    public final int getNumber() { return value; }
    
    public static PayloadType valueOf(int value) {
      switch (value) {
        case 0: return SCALAR_STRING;
        case 1: return SCALAR_SHORT;
        case 2: return SCALAR_FLOAT;
        case 3: return SCALAR_ENUM;
        case 4: return SCALAR_BYTE;
        case 5: return SCALAR_INT;
        case 6: return SCALAR_DOUBLE;
        case 7: return WAVEFORM_STRING;
        case 8: return WAVEFORM_SHORT;
        case 9: return WAVEFORM_FLOAT;
        case 10: return WAVEFORM_ENUM;
        case 11: return WAVEFORM_BYTE;
        case 12: return WAVEFORM_INT;
        case 13: return WAVEFORM_DOUBLE;
        case 14: return V4_GENERIC_BYTES;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<PayloadType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<PayloadType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PayloadType>() {
            public PayloadType findValueByNumber(int number) {
              return PayloadType.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return edu.stanford.slac.archiverappliance.PB.EPICSEvent.getDescriptor().getEnumTypes().get(0);
    }
    
    private static final PayloadType[] VALUES = {
      SCALAR_STRING, SCALAR_SHORT, SCALAR_FLOAT, SCALAR_ENUM, SCALAR_BYTE, SCALAR_INT, SCALAR_DOUBLE, WAVEFORM_STRING, WAVEFORM_SHORT, WAVEFORM_FLOAT, WAVEFORM_ENUM, WAVEFORM_BYTE, WAVEFORM_INT, WAVEFORM_DOUBLE, V4_GENERIC_BYTES, 
    };
    
    public static PayloadType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private PayloadType(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:EPICS.PayloadType)
  }
  
  public interface FieldValueOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required string name = 1;
    boolean hasName();
    String getName();
    
    // required string val = 2;
    boolean hasVal();
    String getVal();
  }
  public static final class FieldValue extends
      com.google.protobuf.GeneratedMessage
      implements FieldValueOrBuilder {
    // Use FieldValue.newBuilder() to construct.
    private FieldValue(Builder builder) {
      super(builder);
    }
    private FieldValue(boolean noInit) {}
    
    private static final FieldValue defaultInstance;
    public static FieldValue getDefaultInstance() {
      return defaultInstance;
    }
    
    public FieldValue getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_FieldValue_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_FieldValue_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          name_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required string val = 2;
    public static final int VAL_FIELD_NUMBER = 2;
    private java.lang.Object val_;
    public boolean hasVal() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getVal() {
      java.lang.Object ref = val_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          val_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getValBytes() {
      java.lang.Object ref = val_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        val_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      name_ = "";
      val_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVal()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getValBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getValBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_FieldValue_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_FieldValue_fieldAccessorTable;
      }
      
      // Construct using edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        val_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.getDescriptor();
      }
      
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue getDefaultInstanceForType() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.getDefaultInstance();
      }
      
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue build() {
        edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue buildPartial() {
        edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue result = new edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.val_ = val_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue) {
          return mergeFrom((edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue other) {
        if (other == edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasVal()) {
          setVal(other.getVal());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasName()) {
          
          return false;
        }
        if (!hasVal()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              name_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              val_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string name = 1;
      private java.lang.Object name_ = "";
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      void setName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
      }
      
      // required string val = 2;
      private java.lang.Object val_ = "";
      public boolean hasVal() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getVal() {
        java.lang.Object ref = val_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          val_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setVal(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        val_ = value;
        onChanged();
        return this;
      }
      public Builder clearVal() {
        bitField0_ = (bitField0_ & ~0x00000002);
        val_ = getDefaultInstance().getVal();
        onChanged();
        return this;
      }
      void setVal(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        val_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:EPICS.FieldValue)
    }
    
    static {
      defaultInstance = new FieldValue(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:EPICS.FieldValue)
  }
  
  public interface ScalarStringOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required uint32 secondsintoyear = 1;
    boolean hasSecondsintoyear();
    int getSecondsintoyear();
    
    // required uint32 nano = 2;
    boolean hasNano();
    int getNano();
    
    // required string val = 3;
    boolean hasVal();
    String getVal();
    
    // optional int32 severity = 4 [default = 0];
    boolean hasSeverity();
    int getSeverity();
    
    // optional int32 status = 5 [default = 0];
    boolean hasStatus();
    int getStatus();
    
    // optional uint32 repeatcount = 6;
    boolean hasRepeatcount();
    int getRepeatcount();
    
    // repeated .EPICS.FieldValue fieldvalues = 7;
    java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> 
        getFieldvaluesList();
    edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue getFieldvalues(int index);
    int getFieldvaluesCount();
    java.util.List<? extends edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> 
        getFieldvaluesOrBuilderList();
    edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder getFieldvaluesOrBuilder(
        int index);
    
    // optional bool fieldactualchange = 8;
    boolean hasFieldactualchange();
    boolean getFieldactualchange();
  }
  public static final class ScalarString extends
      com.google.protobuf.GeneratedMessage
      implements ScalarStringOrBuilder {
    // Use ScalarString.newBuilder() to construct.
    private ScalarString(Builder builder) {
      super(builder);
    }
    private ScalarString(boolean noInit) {}
    
    private static final ScalarString defaultInstance;
    public static ScalarString getDefaultInstance() {
      return defaultInstance;
    }
    
    public ScalarString getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_ScalarString_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_ScalarString_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required uint32 secondsintoyear = 1;
    public static final int SECONDSINTOYEAR_FIELD_NUMBER = 1;
    private int secondsintoyear_;
    public boolean hasSecondsintoyear() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getSecondsintoyear() {
      return secondsintoyear_;
    }
    
    // required uint32 nano = 2;
    public static final int NANO_FIELD_NUMBER = 2;
    private int nano_;
    public boolean hasNano() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getNano() {
      return nano_;
    }
    
    // required string val = 3;
    public static final int VAL_FIELD_NUMBER = 3;
    private java.lang.Object val_;
    public boolean hasVal() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getVal() {
      java.lang.Object ref = val_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          val_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getValBytes() {
      java.lang.Object ref = val_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        val_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional int32 severity = 4 [default = 0];
    public static final int SEVERITY_FIELD_NUMBER = 4;
    private int severity_;
    public boolean hasSeverity() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getSeverity() {
      return severity_;
    }
    
    // optional int32 status = 5 [default = 0];
    public static final int STATUS_FIELD_NUMBER = 5;
    private int status_;
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getStatus() {
      return status_;
    }
    
    // optional uint32 repeatcount = 6;
    public static final int REPEATCOUNT_FIELD_NUMBER = 6;
    private int repeatcount_;
    public boolean hasRepeatcount() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getRepeatcount() {
      return repeatcount_;
    }
    
    // repeated .EPICS.FieldValue fieldvalues = 7;
    public static final int FIELDVALUES_FIELD_NUMBER = 7;
    private java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> fieldvalues_;
    public java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> getFieldvaluesList() {
      return fieldvalues_;
    }
    public java.util.List<? extends edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> 
        getFieldvaluesOrBuilderList() {
      return fieldvalues_;
    }
    public int getFieldvaluesCount() {
      return fieldvalues_.size();
    }
    public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue getFieldvalues(int index) {
      return fieldvalues_.get(index);
    }
    public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder getFieldvaluesOrBuilder(
        int index) {
      return fieldvalues_.get(index);
    }
    
    // optional bool fieldactualchange = 8;
    public static final int FIELDACTUALCHANGE_FIELD_NUMBER = 8;
    private boolean fieldactualchange_;
    public boolean hasFieldactualchange() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public boolean getFieldactualchange() {
      return fieldactualchange_;
    }
    
    private void initFields() {
      secondsintoyear_ = 0;
      nano_ = 0;
      val_ = "";
      severity_ = 0;
      status_ = 0;
      repeatcount_ = 0;
      fieldvalues_ = java.util.Collections.emptyList();
      fieldactualchange_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasSecondsintoyear()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNano()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVal()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getFieldvaluesCount(); i++) {
        if (!getFieldvalues(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, secondsintoyear_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, nano_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getValBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, severity_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, status_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, repeatcount_);
      }
      for (int i = 0; i < fieldvalues_.size(); i++) {
        output.writeMessage(7, fieldvalues_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(8, fieldactualchange_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, secondsintoyear_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, nano_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getValBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, severity_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, status_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, repeatcount_);
      }
      for (int i = 0; i < fieldvalues_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, fieldvalues_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, fieldactualchange_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarString parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarString parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarString parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarString parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarString parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarString parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarString parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarString parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarString parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarString parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarString prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarStringOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_ScalarString_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_ScalarString_fieldAccessorTable;
      }
      
      // Construct using edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarString.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFieldvaluesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        secondsintoyear_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        nano_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        val_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        severity_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        repeatcount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        if (fieldvaluesBuilder_ == null) {
          fieldvalues_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          fieldvaluesBuilder_.clear();
        }
        fieldactualchange_ = false;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarString.getDescriptor();
      }
      
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarString getDefaultInstanceForType() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarString.getDefaultInstance();
      }
      
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarString build() {
        edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarString result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarString buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarString result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarString buildPartial() {
        edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarString result = new edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarString(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.secondsintoyear_ = secondsintoyear_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.nano_ = nano_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.val_ = val_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.severity_ = severity_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.repeatcount_ = repeatcount_;
        if (fieldvaluesBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            fieldvalues_ = java.util.Collections.unmodifiableList(fieldvalues_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.fieldvalues_ = fieldvalues_;
        } else {
          result.fieldvalues_ = fieldvaluesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.fieldactualchange_ = fieldactualchange_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarString) {
          return mergeFrom((edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarString)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarString other) {
        if (other == edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarString.getDefaultInstance()) return this;
        if (other.hasSecondsintoyear()) {
          setSecondsintoyear(other.getSecondsintoyear());
        }
        if (other.hasNano()) {
          setNano(other.getNano());
        }
        if (other.hasVal()) {
          setVal(other.getVal());
        }
        if (other.hasSeverity()) {
          setSeverity(other.getSeverity());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasRepeatcount()) {
          setRepeatcount(other.getRepeatcount());
        }
        if (fieldvaluesBuilder_ == null) {
          if (!other.fieldvalues_.isEmpty()) {
            if (fieldvalues_.isEmpty()) {
              fieldvalues_ = other.fieldvalues_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureFieldvaluesIsMutable();
              fieldvalues_.addAll(other.fieldvalues_);
            }
            onChanged();
          }
        } else {
          if (!other.fieldvalues_.isEmpty()) {
            if (fieldvaluesBuilder_.isEmpty()) {
              fieldvaluesBuilder_.dispose();
              fieldvaluesBuilder_ = null;
              fieldvalues_ = other.fieldvalues_;
              bitField0_ = (bitField0_ & ~0x00000040);
              fieldvaluesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFieldvaluesFieldBuilder() : null;
            } else {
              fieldvaluesBuilder_.addAllMessages(other.fieldvalues_);
            }
          }
        }
        if (other.hasFieldactualchange()) {
          setFieldactualchange(other.getFieldactualchange());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasSecondsintoyear()) {
          
          return false;
        }
        if (!hasNano()) {
          
          return false;
        }
        if (!hasVal()) {
          
          return false;
        }
        for (int i = 0; i < getFieldvaluesCount(); i++) {
          if (!getFieldvalues(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              secondsintoyear_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              nano_ = input.readUInt32();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              val_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              severity_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              status_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              repeatcount_ = input.readUInt32();
              break;
            }
            case 58: {
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder subBuilder = edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addFieldvalues(subBuilder.buildPartial());
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              fieldactualchange_ = input.readBool();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required uint32 secondsintoyear = 1;
      private int secondsintoyear_ ;
      public boolean hasSecondsintoyear() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getSecondsintoyear() {
        return secondsintoyear_;
      }
      public Builder setSecondsintoyear(int value) {
        bitField0_ |= 0x00000001;
        secondsintoyear_ = value;
        onChanged();
        return this;
      }
      public Builder clearSecondsintoyear() {
        bitField0_ = (bitField0_ & ~0x00000001);
        secondsintoyear_ = 0;
        onChanged();
        return this;
      }
      
      // required uint32 nano = 2;
      private int nano_ ;
      public boolean hasNano() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getNano() {
        return nano_;
      }
      public Builder setNano(int value) {
        bitField0_ |= 0x00000002;
        nano_ = value;
        onChanged();
        return this;
      }
      public Builder clearNano() {
        bitField0_ = (bitField0_ & ~0x00000002);
        nano_ = 0;
        onChanged();
        return this;
      }
      
      // required string val = 3;
      private java.lang.Object val_ = "";
      public boolean hasVal() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getVal() {
        java.lang.Object ref = val_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          val_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setVal(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        val_ = value;
        onChanged();
        return this;
      }
      public Builder clearVal() {
        bitField0_ = (bitField0_ & ~0x00000004);
        val_ = getDefaultInstance().getVal();
        onChanged();
        return this;
      }
      void setVal(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        val_ = value;
        onChanged();
      }
      
      // optional int32 severity = 4 [default = 0];
      private int severity_ ;
      public boolean hasSeverity() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getSeverity() {
        return severity_;
      }
      public Builder setSeverity(int value) {
        bitField0_ |= 0x00000008;
        severity_ = value;
        onChanged();
        return this;
      }
      public Builder clearSeverity() {
        bitField0_ = (bitField0_ & ~0x00000008);
        severity_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 status = 5 [default = 0];
      private int status_ ;
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getStatus() {
        return status_;
      }
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000010;
        status_ = value;
        onChanged();
        return this;
      }
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000010);
        status_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 repeatcount = 6;
      private int repeatcount_ ;
      public boolean hasRepeatcount() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getRepeatcount() {
        return repeatcount_;
      }
      public Builder setRepeatcount(int value) {
        bitField0_ |= 0x00000020;
        repeatcount_ = value;
        onChanged();
        return this;
      }
      public Builder clearRepeatcount() {
        bitField0_ = (bitField0_ & ~0x00000020);
        repeatcount_ = 0;
        onChanged();
        return this;
      }
      
      // repeated .EPICS.FieldValue fieldvalues = 7;
      private java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> fieldvalues_ =
        java.util.Collections.emptyList();
      private void ensureFieldvaluesIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          fieldvalues_ = new java.util.ArrayList<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue>(fieldvalues_);
          bitField0_ |= 0x00000040;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> fieldvaluesBuilder_;
      
      public java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> getFieldvaluesList() {
        if (fieldvaluesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fieldvalues_);
        } else {
          return fieldvaluesBuilder_.getMessageList();
        }
      }
      public int getFieldvaluesCount() {
        if (fieldvaluesBuilder_ == null) {
          return fieldvalues_.size();
        } else {
          return fieldvaluesBuilder_.getCount();
        }
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue getFieldvalues(int index) {
        if (fieldvaluesBuilder_ == null) {
          return fieldvalues_.get(index);
        } else {
          return fieldvaluesBuilder_.getMessage(index);
        }
      }
      public Builder setFieldvalues(
          int index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue value) {
        if (fieldvaluesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldvaluesIsMutable();
          fieldvalues_.set(index, value);
          onChanged();
        } else {
          fieldvaluesBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setFieldvalues(
          int index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder builderForValue) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          fieldvalues_.set(index, builderForValue.build());
          onChanged();
        } else {
          fieldvaluesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addFieldvalues(edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue value) {
        if (fieldvaluesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldvaluesIsMutable();
          fieldvalues_.add(value);
          onChanged();
        } else {
          fieldvaluesBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addFieldvalues(
          int index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue value) {
        if (fieldvaluesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldvaluesIsMutable();
          fieldvalues_.add(index, value);
          onChanged();
        } else {
          fieldvaluesBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addFieldvalues(
          edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder builderForValue) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          fieldvalues_.add(builderForValue.build());
          onChanged();
        } else {
          fieldvaluesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addFieldvalues(
          int index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder builderForValue) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          fieldvalues_.add(index, builderForValue.build());
          onChanged();
        } else {
          fieldvaluesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllFieldvalues(
          java.lang.Iterable<? extends edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> values) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          super.addAll(values, fieldvalues_);
          onChanged();
        } else {
          fieldvaluesBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearFieldvalues() {
        if (fieldvaluesBuilder_ == null) {
          fieldvalues_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          fieldvaluesBuilder_.clear();
        }
        return this;
      }
      public Builder removeFieldvalues(int index) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          fieldvalues_.remove(index);
          onChanged();
        } else {
          fieldvaluesBuilder_.remove(index);
        }
        return this;
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder getFieldvaluesBuilder(
          int index) {
        return getFieldvaluesFieldBuilder().getBuilder(index);
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder getFieldvaluesOrBuilder(
          int index) {
        if (fieldvaluesBuilder_ == null) {
          return fieldvalues_.get(index);  } else {
          return fieldvaluesBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> 
           getFieldvaluesOrBuilderList() {
        if (fieldvaluesBuilder_ != null) {
          return fieldvaluesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fieldvalues_);
        }
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder addFieldvaluesBuilder() {
        return getFieldvaluesFieldBuilder().addBuilder(
            edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.getDefaultInstance());
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder addFieldvaluesBuilder(
          int index) {
        return getFieldvaluesFieldBuilder().addBuilder(
            index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.getDefaultInstance());
      }
      public java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder> 
           getFieldvaluesBuilderList() {
        return getFieldvaluesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> 
          getFieldvaluesFieldBuilder() {
        if (fieldvaluesBuilder_ == null) {
          fieldvaluesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder>(
                  fieldvalues_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          fieldvalues_ = null;
        }
        return fieldvaluesBuilder_;
      }
      
      // optional bool fieldactualchange = 8;
      private boolean fieldactualchange_ ;
      public boolean hasFieldactualchange() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public boolean getFieldactualchange() {
        return fieldactualchange_;
      }
      public Builder setFieldactualchange(boolean value) {
        bitField0_ |= 0x00000080;
        fieldactualchange_ = value;
        onChanged();
        return this;
      }
      public Builder clearFieldactualchange() {
        bitField0_ = (bitField0_ & ~0x00000080);
        fieldactualchange_ = false;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:EPICS.ScalarString)
    }
    
    static {
      defaultInstance = new ScalarString(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:EPICS.ScalarString)
  }
  
  public interface ScalarByteOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required uint32 secondsintoyear = 1;
    boolean hasSecondsintoyear();
    int getSecondsintoyear();
    
    // required uint32 nano = 2;
    boolean hasNano();
    int getNano();
    
    // required bytes val = 3;
    boolean hasVal();
    com.google.protobuf.ByteString getVal();
    
    // optional int32 severity = 4 [default = 0];
    boolean hasSeverity();
    int getSeverity();
    
    // optional int32 status = 5 [default = 0];
    boolean hasStatus();
    int getStatus();
    
    // optional uint32 repeatcount = 6;
    boolean hasRepeatcount();
    int getRepeatcount();
    
    // repeated .EPICS.FieldValue fieldvalues = 7;
    java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> 
        getFieldvaluesList();
    edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue getFieldvalues(int index);
    int getFieldvaluesCount();
    java.util.List<? extends edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> 
        getFieldvaluesOrBuilderList();
    edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder getFieldvaluesOrBuilder(
        int index);
    
    // optional bool fieldactualchange = 8;
    boolean hasFieldactualchange();
    boolean getFieldactualchange();
  }
  public static final class ScalarByte extends
      com.google.protobuf.GeneratedMessage
      implements ScalarByteOrBuilder {
    // Use ScalarByte.newBuilder() to construct.
    private ScalarByte(Builder builder) {
      super(builder);
    }
    private ScalarByte(boolean noInit) {}
    
    private static final ScalarByte defaultInstance;
    public static ScalarByte getDefaultInstance() {
      return defaultInstance;
    }
    
    public ScalarByte getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_ScalarByte_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_ScalarByte_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required uint32 secondsintoyear = 1;
    public static final int SECONDSINTOYEAR_FIELD_NUMBER = 1;
    private int secondsintoyear_;
    public boolean hasSecondsintoyear() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getSecondsintoyear() {
      return secondsintoyear_;
    }
    
    // required uint32 nano = 2;
    public static final int NANO_FIELD_NUMBER = 2;
    private int nano_;
    public boolean hasNano() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getNano() {
      return nano_;
    }
    
    // required bytes val = 3;
    public static final int VAL_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString val_;
    public boolean hasVal() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public com.google.protobuf.ByteString getVal() {
      return val_;
    }
    
    // optional int32 severity = 4 [default = 0];
    public static final int SEVERITY_FIELD_NUMBER = 4;
    private int severity_;
    public boolean hasSeverity() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getSeverity() {
      return severity_;
    }
    
    // optional int32 status = 5 [default = 0];
    public static final int STATUS_FIELD_NUMBER = 5;
    private int status_;
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getStatus() {
      return status_;
    }
    
    // optional uint32 repeatcount = 6;
    public static final int REPEATCOUNT_FIELD_NUMBER = 6;
    private int repeatcount_;
    public boolean hasRepeatcount() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getRepeatcount() {
      return repeatcount_;
    }
    
    // repeated .EPICS.FieldValue fieldvalues = 7;
    public static final int FIELDVALUES_FIELD_NUMBER = 7;
    private java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> fieldvalues_;
    public java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> getFieldvaluesList() {
      return fieldvalues_;
    }
    public java.util.List<? extends edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> 
        getFieldvaluesOrBuilderList() {
      return fieldvalues_;
    }
    public int getFieldvaluesCount() {
      return fieldvalues_.size();
    }
    public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue getFieldvalues(int index) {
      return fieldvalues_.get(index);
    }
    public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder getFieldvaluesOrBuilder(
        int index) {
      return fieldvalues_.get(index);
    }
    
    // optional bool fieldactualchange = 8;
    public static final int FIELDACTUALCHANGE_FIELD_NUMBER = 8;
    private boolean fieldactualchange_;
    public boolean hasFieldactualchange() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public boolean getFieldactualchange() {
      return fieldactualchange_;
    }
    
    private void initFields() {
      secondsintoyear_ = 0;
      nano_ = 0;
      val_ = com.google.protobuf.ByteString.EMPTY;
      severity_ = 0;
      status_ = 0;
      repeatcount_ = 0;
      fieldvalues_ = java.util.Collections.emptyList();
      fieldactualchange_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasSecondsintoyear()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNano()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVal()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getFieldvaluesCount(); i++) {
        if (!getFieldvalues(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, secondsintoyear_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, nano_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, val_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, severity_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, status_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, repeatcount_);
      }
      for (int i = 0; i < fieldvalues_.size(); i++) {
        output.writeMessage(7, fieldvalues_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(8, fieldactualchange_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, secondsintoyear_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, nano_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, val_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, severity_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, status_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, repeatcount_);
      }
      for (int i = 0; i < fieldvalues_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, fieldvalues_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, fieldactualchange_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarByte parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarByte parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarByte parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarByte parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarByte parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarByte parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarByte parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarByte parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarByte parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarByte parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarByte prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarByteOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_ScalarByte_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_ScalarByte_fieldAccessorTable;
      }
      
      // Construct using edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarByte.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFieldvaluesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        secondsintoyear_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        nano_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        val_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        severity_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        repeatcount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        if (fieldvaluesBuilder_ == null) {
          fieldvalues_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          fieldvaluesBuilder_.clear();
        }
        fieldactualchange_ = false;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarByte.getDescriptor();
      }
      
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarByte getDefaultInstanceForType() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarByte.getDefaultInstance();
      }
      
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarByte build() {
        edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarByte result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarByte buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarByte result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarByte buildPartial() {
        edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarByte result = new edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarByte(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.secondsintoyear_ = secondsintoyear_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.nano_ = nano_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.val_ = val_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.severity_ = severity_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.repeatcount_ = repeatcount_;
        if (fieldvaluesBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            fieldvalues_ = java.util.Collections.unmodifiableList(fieldvalues_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.fieldvalues_ = fieldvalues_;
        } else {
          result.fieldvalues_ = fieldvaluesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.fieldactualchange_ = fieldactualchange_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarByte) {
          return mergeFrom((edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarByte)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarByte other) {
        if (other == edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarByte.getDefaultInstance()) return this;
        if (other.hasSecondsintoyear()) {
          setSecondsintoyear(other.getSecondsintoyear());
        }
        if (other.hasNano()) {
          setNano(other.getNano());
        }
        if (other.hasVal()) {
          setVal(other.getVal());
        }
        if (other.hasSeverity()) {
          setSeverity(other.getSeverity());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasRepeatcount()) {
          setRepeatcount(other.getRepeatcount());
        }
        if (fieldvaluesBuilder_ == null) {
          if (!other.fieldvalues_.isEmpty()) {
            if (fieldvalues_.isEmpty()) {
              fieldvalues_ = other.fieldvalues_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureFieldvaluesIsMutable();
              fieldvalues_.addAll(other.fieldvalues_);
            }
            onChanged();
          }
        } else {
          if (!other.fieldvalues_.isEmpty()) {
            if (fieldvaluesBuilder_.isEmpty()) {
              fieldvaluesBuilder_.dispose();
              fieldvaluesBuilder_ = null;
              fieldvalues_ = other.fieldvalues_;
              bitField0_ = (bitField0_ & ~0x00000040);
              fieldvaluesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFieldvaluesFieldBuilder() : null;
            } else {
              fieldvaluesBuilder_.addAllMessages(other.fieldvalues_);
            }
          }
        }
        if (other.hasFieldactualchange()) {
          setFieldactualchange(other.getFieldactualchange());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasSecondsintoyear()) {
          
          return false;
        }
        if (!hasNano()) {
          
          return false;
        }
        if (!hasVal()) {
          
          return false;
        }
        for (int i = 0; i < getFieldvaluesCount(); i++) {
          if (!getFieldvalues(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              secondsintoyear_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              nano_ = input.readUInt32();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              val_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              severity_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              status_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              repeatcount_ = input.readUInt32();
              break;
            }
            case 58: {
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder subBuilder = edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addFieldvalues(subBuilder.buildPartial());
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              fieldactualchange_ = input.readBool();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required uint32 secondsintoyear = 1;
      private int secondsintoyear_ ;
      public boolean hasSecondsintoyear() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getSecondsintoyear() {
        return secondsintoyear_;
      }
      public Builder setSecondsintoyear(int value) {
        bitField0_ |= 0x00000001;
        secondsintoyear_ = value;
        onChanged();
        return this;
      }
      public Builder clearSecondsintoyear() {
        bitField0_ = (bitField0_ & ~0x00000001);
        secondsintoyear_ = 0;
        onChanged();
        return this;
      }
      
      // required uint32 nano = 2;
      private int nano_ ;
      public boolean hasNano() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getNano() {
        return nano_;
      }
      public Builder setNano(int value) {
        bitField0_ |= 0x00000002;
        nano_ = value;
        onChanged();
        return this;
      }
      public Builder clearNano() {
        bitField0_ = (bitField0_ & ~0x00000002);
        nano_ = 0;
        onChanged();
        return this;
      }
      
      // required bytes val = 3;
      private com.google.protobuf.ByteString val_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasVal() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public com.google.protobuf.ByteString getVal() {
        return val_;
      }
      public Builder setVal(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        val_ = value;
        onChanged();
        return this;
      }
      public Builder clearVal() {
        bitField0_ = (bitField0_ & ~0x00000004);
        val_ = getDefaultInstance().getVal();
        onChanged();
        return this;
      }
      
      // optional int32 severity = 4 [default = 0];
      private int severity_ ;
      public boolean hasSeverity() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getSeverity() {
        return severity_;
      }
      public Builder setSeverity(int value) {
        bitField0_ |= 0x00000008;
        severity_ = value;
        onChanged();
        return this;
      }
      public Builder clearSeverity() {
        bitField0_ = (bitField0_ & ~0x00000008);
        severity_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 status = 5 [default = 0];
      private int status_ ;
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getStatus() {
        return status_;
      }
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000010;
        status_ = value;
        onChanged();
        return this;
      }
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000010);
        status_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 repeatcount = 6;
      private int repeatcount_ ;
      public boolean hasRepeatcount() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getRepeatcount() {
        return repeatcount_;
      }
      public Builder setRepeatcount(int value) {
        bitField0_ |= 0x00000020;
        repeatcount_ = value;
        onChanged();
        return this;
      }
      public Builder clearRepeatcount() {
        bitField0_ = (bitField0_ & ~0x00000020);
        repeatcount_ = 0;
        onChanged();
        return this;
      }
      
      // repeated .EPICS.FieldValue fieldvalues = 7;
      private java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> fieldvalues_ =
        java.util.Collections.emptyList();
      private void ensureFieldvaluesIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          fieldvalues_ = new java.util.ArrayList<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue>(fieldvalues_);
          bitField0_ |= 0x00000040;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> fieldvaluesBuilder_;
      
      public java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> getFieldvaluesList() {
        if (fieldvaluesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fieldvalues_);
        } else {
          return fieldvaluesBuilder_.getMessageList();
        }
      }
      public int getFieldvaluesCount() {
        if (fieldvaluesBuilder_ == null) {
          return fieldvalues_.size();
        } else {
          return fieldvaluesBuilder_.getCount();
        }
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue getFieldvalues(int index) {
        if (fieldvaluesBuilder_ == null) {
          return fieldvalues_.get(index);
        } else {
          return fieldvaluesBuilder_.getMessage(index);
        }
      }
      public Builder setFieldvalues(
          int index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue value) {
        if (fieldvaluesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldvaluesIsMutable();
          fieldvalues_.set(index, value);
          onChanged();
        } else {
          fieldvaluesBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setFieldvalues(
          int index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder builderForValue) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          fieldvalues_.set(index, builderForValue.build());
          onChanged();
        } else {
          fieldvaluesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addFieldvalues(edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue value) {
        if (fieldvaluesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldvaluesIsMutable();
          fieldvalues_.add(value);
          onChanged();
        } else {
          fieldvaluesBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addFieldvalues(
          int index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue value) {
        if (fieldvaluesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldvaluesIsMutable();
          fieldvalues_.add(index, value);
          onChanged();
        } else {
          fieldvaluesBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addFieldvalues(
          edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder builderForValue) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          fieldvalues_.add(builderForValue.build());
          onChanged();
        } else {
          fieldvaluesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addFieldvalues(
          int index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder builderForValue) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          fieldvalues_.add(index, builderForValue.build());
          onChanged();
        } else {
          fieldvaluesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllFieldvalues(
          java.lang.Iterable<? extends edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> values) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          super.addAll(values, fieldvalues_);
          onChanged();
        } else {
          fieldvaluesBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearFieldvalues() {
        if (fieldvaluesBuilder_ == null) {
          fieldvalues_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          fieldvaluesBuilder_.clear();
        }
        return this;
      }
      public Builder removeFieldvalues(int index) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          fieldvalues_.remove(index);
          onChanged();
        } else {
          fieldvaluesBuilder_.remove(index);
        }
        return this;
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder getFieldvaluesBuilder(
          int index) {
        return getFieldvaluesFieldBuilder().getBuilder(index);
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder getFieldvaluesOrBuilder(
          int index) {
        if (fieldvaluesBuilder_ == null) {
          return fieldvalues_.get(index);  } else {
          return fieldvaluesBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> 
           getFieldvaluesOrBuilderList() {
        if (fieldvaluesBuilder_ != null) {
          return fieldvaluesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fieldvalues_);
        }
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder addFieldvaluesBuilder() {
        return getFieldvaluesFieldBuilder().addBuilder(
            edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.getDefaultInstance());
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder addFieldvaluesBuilder(
          int index) {
        return getFieldvaluesFieldBuilder().addBuilder(
            index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.getDefaultInstance());
      }
      public java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder> 
           getFieldvaluesBuilderList() {
        return getFieldvaluesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> 
          getFieldvaluesFieldBuilder() {
        if (fieldvaluesBuilder_ == null) {
          fieldvaluesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder>(
                  fieldvalues_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          fieldvalues_ = null;
        }
        return fieldvaluesBuilder_;
      }
      
      // optional bool fieldactualchange = 8;
      private boolean fieldactualchange_ ;
      public boolean hasFieldactualchange() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public boolean getFieldactualchange() {
        return fieldactualchange_;
      }
      public Builder setFieldactualchange(boolean value) {
        bitField0_ |= 0x00000080;
        fieldactualchange_ = value;
        onChanged();
        return this;
      }
      public Builder clearFieldactualchange() {
        bitField0_ = (bitField0_ & ~0x00000080);
        fieldactualchange_ = false;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:EPICS.ScalarByte)
    }
    
    static {
      defaultInstance = new ScalarByte(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:EPICS.ScalarByte)
  }
  
  public interface ScalarShortOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required uint32 secondsintoyear = 1;
    boolean hasSecondsintoyear();
    int getSecondsintoyear();
    
    // required uint32 nano = 2;
    boolean hasNano();
    int getNano();
    
    // required sint32 val = 3;
    boolean hasVal();
    int getVal();
    
    // optional int32 severity = 4 [default = 0];
    boolean hasSeverity();
    int getSeverity();
    
    // optional int32 status = 5 [default = 0];
    boolean hasStatus();
    int getStatus();
    
    // optional uint32 repeatcount = 6;
    boolean hasRepeatcount();
    int getRepeatcount();
    
    // repeated .EPICS.FieldValue fieldvalues = 7;
    java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> 
        getFieldvaluesList();
    edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue getFieldvalues(int index);
    int getFieldvaluesCount();
    java.util.List<? extends edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> 
        getFieldvaluesOrBuilderList();
    edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder getFieldvaluesOrBuilder(
        int index);
    
    // optional bool fieldactualchange = 8;
    boolean hasFieldactualchange();
    boolean getFieldactualchange();
  }
  public static final class ScalarShort extends
      com.google.protobuf.GeneratedMessage
      implements ScalarShortOrBuilder {
    // Use ScalarShort.newBuilder() to construct.
    private ScalarShort(Builder builder) {
      super(builder);
    }
    private ScalarShort(boolean noInit) {}
    
    private static final ScalarShort defaultInstance;
    public static ScalarShort getDefaultInstance() {
      return defaultInstance;
    }
    
    public ScalarShort getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_ScalarShort_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_ScalarShort_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required uint32 secondsintoyear = 1;
    public static final int SECONDSINTOYEAR_FIELD_NUMBER = 1;
    private int secondsintoyear_;
    public boolean hasSecondsintoyear() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getSecondsintoyear() {
      return secondsintoyear_;
    }
    
    // required uint32 nano = 2;
    public static final int NANO_FIELD_NUMBER = 2;
    private int nano_;
    public boolean hasNano() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getNano() {
      return nano_;
    }
    
    // required sint32 val = 3;
    public static final int VAL_FIELD_NUMBER = 3;
    private int val_;
    public boolean hasVal() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getVal() {
      return val_;
    }
    
    // optional int32 severity = 4 [default = 0];
    public static final int SEVERITY_FIELD_NUMBER = 4;
    private int severity_;
    public boolean hasSeverity() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getSeverity() {
      return severity_;
    }
    
    // optional int32 status = 5 [default = 0];
    public static final int STATUS_FIELD_NUMBER = 5;
    private int status_;
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getStatus() {
      return status_;
    }
    
    // optional uint32 repeatcount = 6;
    public static final int REPEATCOUNT_FIELD_NUMBER = 6;
    private int repeatcount_;
    public boolean hasRepeatcount() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getRepeatcount() {
      return repeatcount_;
    }
    
    // repeated .EPICS.FieldValue fieldvalues = 7;
    public static final int FIELDVALUES_FIELD_NUMBER = 7;
    private java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> fieldvalues_;
    public java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> getFieldvaluesList() {
      return fieldvalues_;
    }
    public java.util.List<? extends edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> 
        getFieldvaluesOrBuilderList() {
      return fieldvalues_;
    }
    public int getFieldvaluesCount() {
      return fieldvalues_.size();
    }
    public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue getFieldvalues(int index) {
      return fieldvalues_.get(index);
    }
    public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder getFieldvaluesOrBuilder(
        int index) {
      return fieldvalues_.get(index);
    }
    
    // optional bool fieldactualchange = 8;
    public static final int FIELDACTUALCHANGE_FIELD_NUMBER = 8;
    private boolean fieldactualchange_;
    public boolean hasFieldactualchange() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public boolean getFieldactualchange() {
      return fieldactualchange_;
    }
    
    private void initFields() {
      secondsintoyear_ = 0;
      nano_ = 0;
      val_ = 0;
      severity_ = 0;
      status_ = 0;
      repeatcount_ = 0;
      fieldvalues_ = java.util.Collections.emptyList();
      fieldactualchange_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasSecondsintoyear()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNano()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVal()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getFieldvaluesCount(); i++) {
        if (!getFieldvalues(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, secondsintoyear_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, nano_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeSInt32(3, val_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, severity_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, status_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, repeatcount_);
      }
      for (int i = 0; i < fieldvalues_.size(); i++) {
        output.writeMessage(7, fieldvalues_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(8, fieldactualchange_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, secondsintoyear_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, nano_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(3, val_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, severity_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, status_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, repeatcount_);
      }
      for (int i = 0; i < fieldvalues_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, fieldvalues_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, fieldactualchange_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarShort parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarShort parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarShort parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarShort parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarShort parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarShort parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarShort parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarShort parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarShort parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarShort parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarShort prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarShortOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_ScalarShort_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_ScalarShort_fieldAccessorTable;
      }
      
      // Construct using edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarShort.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFieldvaluesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        secondsintoyear_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        nano_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        val_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        severity_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        repeatcount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        if (fieldvaluesBuilder_ == null) {
          fieldvalues_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          fieldvaluesBuilder_.clear();
        }
        fieldactualchange_ = false;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarShort.getDescriptor();
      }
      
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarShort getDefaultInstanceForType() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarShort.getDefaultInstance();
      }
      
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarShort build() {
        edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarShort result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarShort buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarShort result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarShort buildPartial() {
        edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarShort result = new edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarShort(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.secondsintoyear_ = secondsintoyear_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.nano_ = nano_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.val_ = val_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.severity_ = severity_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.repeatcount_ = repeatcount_;
        if (fieldvaluesBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            fieldvalues_ = java.util.Collections.unmodifiableList(fieldvalues_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.fieldvalues_ = fieldvalues_;
        } else {
          result.fieldvalues_ = fieldvaluesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.fieldactualchange_ = fieldactualchange_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarShort) {
          return mergeFrom((edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarShort)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarShort other) {
        if (other == edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarShort.getDefaultInstance()) return this;
        if (other.hasSecondsintoyear()) {
          setSecondsintoyear(other.getSecondsintoyear());
        }
        if (other.hasNano()) {
          setNano(other.getNano());
        }
        if (other.hasVal()) {
          setVal(other.getVal());
        }
        if (other.hasSeverity()) {
          setSeverity(other.getSeverity());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasRepeatcount()) {
          setRepeatcount(other.getRepeatcount());
        }
        if (fieldvaluesBuilder_ == null) {
          if (!other.fieldvalues_.isEmpty()) {
            if (fieldvalues_.isEmpty()) {
              fieldvalues_ = other.fieldvalues_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureFieldvaluesIsMutable();
              fieldvalues_.addAll(other.fieldvalues_);
            }
            onChanged();
          }
        } else {
          if (!other.fieldvalues_.isEmpty()) {
            if (fieldvaluesBuilder_.isEmpty()) {
              fieldvaluesBuilder_.dispose();
              fieldvaluesBuilder_ = null;
              fieldvalues_ = other.fieldvalues_;
              bitField0_ = (bitField0_ & ~0x00000040);
              fieldvaluesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFieldvaluesFieldBuilder() : null;
            } else {
              fieldvaluesBuilder_.addAllMessages(other.fieldvalues_);
            }
          }
        }
        if (other.hasFieldactualchange()) {
          setFieldactualchange(other.getFieldactualchange());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasSecondsintoyear()) {
          
          return false;
        }
        if (!hasNano()) {
          
          return false;
        }
        if (!hasVal()) {
          
          return false;
        }
        for (int i = 0; i < getFieldvaluesCount(); i++) {
          if (!getFieldvalues(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              secondsintoyear_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              nano_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              val_ = input.readSInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              severity_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              status_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              repeatcount_ = input.readUInt32();
              break;
            }
            case 58: {
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder subBuilder = edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addFieldvalues(subBuilder.buildPartial());
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              fieldactualchange_ = input.readBool();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required uint32 secondsintoyear = 1;
      private int secondsintoyear_ ;
      public boolean hasSecondsintoyear() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getSecondsintoyear() {
        return secondsintoyear_;
      }
      public Builder setSecondsintoyear(int value) {
        bitField0_ |= 0x00000001;
        secondsintoyear_ = value;
        onChanged();
        return this;
      }
      public Builder clearSecondsintoyear() {
        bitField0_ = (bitField0_ & ~0x00000001);
        secondsintoyear_ = 0;
        onChanged();
        return this;
      }
      
      // required uint32 nano = 2;
      private int nano_ ;
      public boolean hasNano() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getNano() {
        return nano_;
      }
      public Builder setNano(int value) {
        bitField0_ |= 0x00000002;
        nano_ = value;
        onChanged();
        return this;
      }
      public Builder clearNano() {
        bitField0_ = (bitField0_ & ~0x00000002);
        nano_ = 0;
        onChanged();
        return this;
      }
      
      // required sint32 val = 3;
      private int val_ ;
      public boolean hasVal() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getVal() {
        return val_;
      }
      public Builder setVal(int value) {
        bitField0_ |= 0x00000004;
        val_ = value;
        onChanged();
        return this;
      }
      public Builder clearVal() {
        bitField0_ = (bitField0_ & ~0x00000004);
        val_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 severity = 4 [default = 0];
      private int severity_ ;
      public boolean hasSeverity() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getSeverity() {
        return severity_;
      }
      public Builder setSeverity(int value) {
        bitField0_ |= 0x00000008;
        severity_ = value;
        onChanged();
        return this;
      }
      public Builder clearSeverity() {
        bitField0_ = (bitField0_ & ~0x00000008);
        severity_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 status = 5 [default = 0];
      private int status_ ;
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getStatus() {
        return status_;
      }
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000010;
        status_ = value;
        onChanged();
        return this;
      }
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000010);
        status_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 repeatcount = 6;
      private int repeatcount_ ;
      public boolean hasRepeatcount() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getRepeatcount() {
        return repeatcount_;
      }
      public Builder setRepeatcount(int value) {
        bitField0_ |= 0x00000020;
        repeatcount_ = value;
        onChanged();
        return this;
      }
      public Builder clearRepeatcount() {
        bitField0_ = (bitField0_ & ~0x00000020);
        repeatcount_ = 0;
        onChanged();
        return this;
      }
      
      // repeated .EPICS.FieldValue fieldvalues = 7;
      private java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> fieldvalues_ =
        java.util.Collections.emptyList();
      private void ensureFieldvaluesIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          fieldvalues_ = new java.util.ArrayList<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue>(fieldvalues_);
          bitField0_ |= 0x00000040;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> fieldvaluesBuilder_;
      
      public java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> getFieldvaluesList() {
        if (fieldvaluesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fieldvalues_);
        } else {
          return fieldvaluesBuilder_.getMessageList();
        }
      }
      public int getFieldvaluesCount() {
        if (fieldvaluesBuilder_ == null) {
          return fieldvalues_.size();
        } else {
          return fieldvaluesBuilder_.getCount();
        }
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue getFieldvalues(int index) {
        if (fieldvaluesBuilder_ == null) {
          return fieldvalues_.get(index);
        } else {
          return fieldvaluesBuilder_.getMessage(index);
        }
      }
      public Builder setFieldvalues(
          int index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue value) {
        if (fieldvaluesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldvaluesIsMutable();
          fieldvalues_.set(index, value);
          onChanged();
        } else {
          fieldvaluesBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setFieldvalues(
          int index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder builderForValue) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          fieldvalues_.set(index, builderForValue.build());
          onChanged();
        } else {
          fieldvaluesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addFieldvalues(edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue value) {
        if (fieldvaluesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldvaluesIsMutable();
          fieldvalues_.add(value);
          onChanged();
        } else {
          fieldvaluesBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addFieldvalues(
          int index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue value) {
        if (fieldvaluesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldvaluesIsMutable();
          fieldvalues_.add(index, value);
          onChanged();
        } else {
          fieldvaluesBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addFieldvalues(
          edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder builderForValue) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          fieldvalues_.add(builderForValue.build());
          onChanged();
        } else {
          fieldvaluesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addFieldvalues(
          int index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder builderForValue) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          fieldvalues_.add(index, builderForValue.build());
          onChanged();
        } else {
          fieldvaluesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllFieldvalues(
          java.lang.Iterable<? extends edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> values) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          super.addAll(values, fieldvalues_);
          onChanged();
        } else {
          fieldvaluesBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearFieldvalues() {
        if (fieldvaluesBuilder_ == null) {
          fieldvalues_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          fieldvaluesBuilder_.clear();
        }
        return this;
      }
      public Builder removeFieldvalues(int index) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          fieldvalues_.remove(index);
          onChanged();
        } else {
          fieldvaluesBuilder_.remove(index);
        }
        return this;
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder getFieldvaluesBuilder(
          int index) {
        return getFieldvaluesFieldBuilder().getBuilder(index);
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder getFieldvaluesOrBuilder(
          int index) {
        if (fieldvaluesBuilder_ == null) {
          return fieldvalues_.get(index);  } else {
          return fieldvaluesBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> 
           getFieldvaluesOrBuilderList() {
        if (fieldvaluesBuilder_ != null) {
          return fieldvaluesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fieldvalues_);
        }
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder addFieldvaluesBuilder() {
        return getFieldvaluesFieldBuilder().addBuilder(
            edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.getDefaultInstance());
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder addFieldvaluesBuilder(
          int index) {
        return getFieldvaluesFieldBuilder().addBuilder(
            index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.getDefaultInstance());
      }
      public java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder> 
           getFieldvaluesBuilderList() {
        return getFieldvaluesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> 
          getFieldvaluesFieldBuilder() {
        if (fieldvaluesBuilder_ == null) {
          fieldvaluesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder>(
                  fieldvalues_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          fieldvalues_ = null;
        }
        return fieldvaluesBuilder_;
      }
      
      // optional bool fieldactualchange = 8;
      private boolean fieldactualchange_ ;
      public boolean hasFieldactualchange() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public boolean getFieldactualchange() {
        return fieldactualchange_;
      }
      public Builder setFieldactualchange(boolean value) {
        bitField0_ |= 0x00000080;
        fieldactualchange_ = value;
        onChanged();
        return this;
      }
      public Builder clearFieldactualchange() {
        bitField0_ = (bitField0_ & ~0x00000080);
        fieldactualchange_ = false;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:EPICS.ScalarShort)
    }
    
    static {
      defaultInstance = new ScalarShort(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:EPICS.ScalarShort)
  }
  
  public interface ScalarIntOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required uint32 secondsintoyear = 1;
    boolean hasSecondsintoyear();
    int getSecondsintoyear();
    
    // required uint32 nano = 2;
    boolean hasNano();
    int getNano();
    
    // required sfixed32 val = 3;
    boolean hasVal();
    int getVal();
    
    // optional int32 severity = 4 [default = 0];
    boolean hasSeverity();
    int getSeverity();
    
    // optional int32 status = 5 [default = 0];
    boolean hasStatus();
    int getStatus();
    
    // optional uint32 repeatcount = 6;
    boolean hasRepeatcount();
    int getRepeatcount();
    
    // repeated .EPICS.FieldValue fieldvalues = 7;
    java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> 
        getFieldvaluesList();
    edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue getFieldvalues(int index);
    int getFieldvaluesCount();
    java.util.List<? extends edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> 
        getFieldvaluesOrBuilderList();
    edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder getFieldvaluesOrBuilder(
        int index);
    
    // optional bool fieldactualchange = 8;
    boolean hasFieldactualchange();
    boolean getFieldactualchange();
  }
  public static final class ScalarInt extends
      com.google.protobuf.GeneratedMessage
      implements ScalarIntOrBuilder {
    // Use ScalarInt.newBuilder() to construct.
    private ScalarInt(Builder builder) {
      super(builder);
    }
    private ScalarInt(boolean noInit) {}
    
    private static final ScalarInt defaultInstance;
    public static ScalarInt getDefaultInstance() {
      return defaultInstance;
    }
    
    public ScalarInt getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_ScalarInt_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_ScalarInt_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required uint32 secondsintoyear = 1;
    public static final int SECONDSINTOYEAR_FIELD_NUMBER = 1;
    private int secondsintoyear_;
    public boolean hasSecondsintoyear() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getSecondsintoyear() {
      return secondsintoyear_;
    }
    
    // required uint32 nano = 2;
    public static final int NANO_FIELD_NUMBER = 2;
    private int nano_;
    public boolean hasNano() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getNano() {
      return nano_;
    }
    
    // required sfixed32 val = 3;
    public static final int VAL_FIELD_NUMBER = 3;
    private int val_;
    public boolean hasVal() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getVal() {
      return val_;
    }
    
    // optional int32 severity = 4 [default = 0];
    public static final int SEVERITY_FIELD_NUMBER = 4;
    private int severity_;
    public boolean hasSeverity() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getSeverity() {
      return severity_;
    }
    
    // optional int32 status = 5 [default = 0];
    public static final int STATUS_FIELD_NUMBER = 5;
    private int status_;
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getStatus() {
      return status_;
    }
    
    // optional uint32 repeatcount = 6;
    public static final int REPEATCOUNT_FIELD_NUMBER = 6;
    private int repeatcount_;
    public boolean hasRepeatcount() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getRepeatcount() {
      return repeatcount_;
    }
    
    // repeated .EPICS.FieldValue fieldvalues = 7;
    public static final int FIELDVALUES_FIELD_NUMBER = 7;
    private java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> fieldvalues_;
    public java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> getFieldvaluesList() {
      return fieldvalues_;
    }
    public java.util.List<? extends edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> 
        getFieldvaluesOrBuilderList() {
      return fieldvalues_;
    }
    public int getFieldvaluesCount() {
      return fieldvalues_.size();
    }
    public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue getFieldvalues(int index) {
      return fieldvalues_.get(index);
    }
    public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder getFieldvaluesOrBuilder(
        int index) {
      return fieldvalues_.get(index);
    }
    
    // optional bool fieldactualchange = 8;
    public static final int FIELDACTUALCHANGE_FIELD_NUMBER = 8;
    private boolean fieldactualchange_;
    public boolean hasFieldactualchange() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public boolean getFieldactualchange() {
      return fieldactualchange_;
    }
    
    private void initFields() {
      secondsintoyear_ = 0;
      nano_ = 0;
      val_ = 0;
      severity_ = 0;
      status_ = 0;
      repeatcount_ = 0;
      fieldvalues_ = java.util.Collections.emptyList();
      fieldactualchange_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasSecondsintoyear()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNano()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVal()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getFieldvaluesCount(); i++) {
        if (!getFieldvalues(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, secondsintoyear_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, nano_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeSFixed32(3, val_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, severity_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, status_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, repeatcount_);
      }
      for (int i = 0; i < fieldvalues_.size(); i++) {
        output.writeMessage(7, fieldvalues_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(8, fieldactualchange_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, secondsintoyear_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, nano_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed32Size(3, val_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, severity_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, status_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, repeatcount_);
      }
      for (int i = 0; i < fieldvalues_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, fieldvalues_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, fieldactualchange_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarInt parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarInt parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarInt parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarInt parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarInt parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarInt parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarInt parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarInt parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarInt parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarInt parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarInt prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarIntOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_ScalarInt_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_ScalarInt_fieldAccessorTable;
      }
      
      // Construct using edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarInt.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFieldvaluesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        secondsintoyear_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        nano_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        val_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        severity_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        repeatcount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        if (fieldvaluesBuilder_ == null) {
          fieldvalues_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          fieldvaluesBuilder_.clear();
        }
        fieldactualchange_ = false;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarInt.getDescriptor();
      }
      
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarInt getDefaultInstanceForType() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarInt.getDefaultInstance();
      }
      
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarInt build() {
        edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarInt result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarInt buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarInt result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarInt buildPartial() {
        edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarInt result = new edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarInt(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.secondsintoyear_ = secondsintoyear_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.nano_ = nano_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.val_ = val_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.severity_ = severity_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.repeatcount_ = repeatcount_;
        if (fieldvaluesBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            fieldvalues_ = java.util.Collections.unmodifiableList(fieldvalues_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.fieldvalues_ = fieldvalues_;
        } else {
          result.fieldvalues_ = fieldvaluesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.fieldactualchange_ = fieldactualchange_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarInt) {
          return mergeFrom((edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarInt)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarInt other) {
        if (other == edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarInt.getDefaultInstance()) return this;
        if (other.hasSecondsintoyear()) {
          setSecondsintoyear(other.getSecondsintoyear());
        }
        if (other.hasNano()) {
          setNano(other.getNano());
        }
        if (other.hasVal()) {
          setVal(other.getVal());
        }
        if (other.hasSeverity()) {
          setSeverity(other.getSeverity());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasRepeatcount()) {
          setRepeatcount(other.getRepeatcount());
        }
        if (fieldvaluesBuilder_ == null) {
          if (!other.fieldvalues_.isEmpty()) {
            if (fieldvalues_.isEmpty()) {
              fieldvalues_ = other.fieldvalues_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureFieldvaluesIsMutable();
              fieldvalues_.addAll(other.fieldvalues_);
            }
            onChanged();
          }
        } else {
          if (!other.fieldvalues_.isEmpty()) {
            if (fieldvaluesBuilder_.isEmpty()) {
              fieldvaluesBuilder_.dispose();
              fieldvaluesBuilder_ = null;
              fieldvalues_ = other.fieldvalues_;
              bitField0_ = (bitField0_ & ~0x00000040);
              fieldvaluesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFieldvaluesFieldBuilder() : null;
            } else {
              fieldvaluesBuilder_.addAllMessages(other.fieldvalues_);
            }
          }
        }
        if (other.hasFieldactualchange()) {
          setFieldactualchange(other.getFieldactualchange());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasSecondsintoyear()) {
          
          return false;
        }
        if (!hasNano()) {
          
          return false;
        }
        if (!hasVal()) {
          
          return false;
        }
        for (int i = 0; i < getFieldvaluesCount(); i++) {
          if (!getFieldvalues(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              secondsintoyear_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              nano_ = input.readUInt32();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              val_ = input.readSFixed32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              severity_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              status_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              repeatcount_ = input.readUInt32();
              break;
            }
            case 58: {
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder subBuilder = edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addFieldvalues(subBuilder.buildPartial());
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              fieldactualchange_ = input.readBool();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required uint32 secondsintoyear = 1;
      private int secondsintoyear_ ;
      public boolean hasSecondsintoyear() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getSecondsintoyear() {
        return secondsintoyear_;
      }
      public Builder setSecondsintoyear(int value) {
        bitField0_ |= 0x00000001;
        secondsintoyear_ = value;
        onChanged();
        return this;
      }
      public Builder clearSecondsintoyear() {
        bitField0_ = (bitField0_ & ~0x00000001);
        secondsintoyear_ = 0;
        onChanged();
        return this;
      }
      
      // required uint32 nano = 2;
      private int nano_ ;
      public boolean hasNano() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getNano() {
        return nano_;
      }
      public Builder setNano(int value) {
        bitField0_ |= 0x00000002;
        nano_ = value;
        onChanged();
        return this;
      }
      public Builder clearNano() {
        bitField0_ = (bitField0_ & ~0x00000002);
        nano_ = 0;
        onChanged();
        return this;
      }
      
      // required sfixed32 val = 3;
      private int val_ ;
      public boolean hasVal() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getVal() {
        return val_;
      }
      public Builder setVal(int value) {
        bitField0_ |= 0x00000004;
        val_ = value;
        onChanged();
        return this;
      }
      public Builder clearVal() {
        bitField0_ = (bitField0_ & ~0x00000004);
        val_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 severity = 4 [default = 0];
      private int severity_ ;
      public boolean hasSeverity() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getSeverity() {
        return severity_;
      }
      public Builder setSeverity(int value) {
        bitField0_ |= 0x00000008;
        severity_ = value;
        onChanged();
        return this;
      }
      public Builder clearSeverity() {
        bitField0_ = (bitField0_ & ~0x00000008);
        severity_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 status = 5 [default = 0];
      private int status_ ;
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getStatus() {
        return status_;
      }
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000010;
        status_ = value;
        onChanged();
        return this;
      }
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000010);
        status_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 repeatcount = 6;
      private int repeatcount_ ;
      public boolean hasRepeatcount() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getRepeatcount() {
        return repeatcount_;
      }
      public Builder setRepeatcount(int value) {
        bitField0_ |= 0x00000020;
        repeatcount_ = value;
        onChanged();
        return this;
      }
      public Builder clearRepeatcount() {
        bitField0_ = (bitField0_ & ~0x00000020);
        repeatcount_ = 0;
        onChanged();
        return this;
      }
      
      // repeated .EPICS.FieldValue fieldvalues = 7;
      private java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> fieldvalues_ =
        java.util.Collections.emptyList();
      private void ensureFieldvaluesIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          fieldvalues_ = new java.util.ArrayList<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue>(fieldvalues_);
          bitField0_ |= 0x00000040;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> fieldvaluesBuilder_;
      
      public java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> getFieldvaluesList() {
        if (fieldvaluesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fieldvalues_);
        } else {
          return fieldvaluesBuilder_.getMessageList();
        }
      }
      public int getFieldvaluesCount() {
        if (fieldvaluesBuilder_ == null) {
          return fieldvalues_.size();
        } else {
          return fieldvaluesBuilder_.getCount();
        }
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue getFieldvalues(int index) {
        if (fieldvaluesBuilder_ == null) {
          return fieldvalues_.get(index);
        } else {
          return fieldvaluesBuilder_.getMessage(index);
        }
      }
      public Builder setFieldvalues(
          int index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue value) {
        if (fieldvaluesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldvaluesIsMutable();
          fieldvalues_.set(index, value);
          onChanged();
        } else {
          fieldvaluesBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setFieldvalues(
          int index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder builderForValue) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          fieldvalues_.set(index, builderForValue.build());
          onChanged();
        } else {
          fieldvaluesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addFieldvalues(edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue value) {
        if (fieldvaluesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldvaluesIsMutable();
          fieldvalues_.add(value);
          onChanged();
        } else {
          fieldvaluesBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addFieldvalues(
          int index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue value) {
        if (fieldvaluesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldvaluesIsMutable();
          fieldvalues_.add(index, value);
          onChanged();
        } else {
          fieldvaluesBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addFieldvalues(
          edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder builderForValue) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          fieldvalues_.add(builderForValue.build());
          onChanged();
        } else {
          fieldvaluesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addFieldvalues(
          int index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder builderForValue) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          fieldvalues_.add(index, builderForValue.build());
          onChanged();
        } else {
          fieldvaluesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllFieldvalues(
          java.lang.Iterable<? extends edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> values) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          super.addAll(values, fieldvalues_);
          onChanged();
        } else {
          fieldvaluesBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearFieldvalues() {
        if (fieldvaluesBuilder_ == null) {
          fieldvalues_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          fieldvaluesBuilder_.clear();
        }
        return this;
      }
      public Builder removeFieldvalues(int index) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          fieldvalues_.remove(index);
          onChanged();
        } else {
          fieldvaluesBuilder_.remove(index);
        }
        return this;
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder getFieldvaluesBuilder(
          int index) {
        return getFieldvaluesFieldBuilder().getBuilder(index);
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder getFieldvaluesOrBuilder(
          int index) {
        if (fieldvaluesBuilder_ == null) {
          return fieldvalues_.get(index);  } else {
          return fieldvaluesBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> 
           getFieldvaluesOrBuilderList() {
        if (fieldvaluesBuilder_ != null) {
          return fieldvaluesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fieldvalues_);
        }
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder addFieldvaluesBuilder() {
        return getFieldvaluesFieldBuilder().addBuilder(
            edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.getDefaultInstance());
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder addFieldvaluesBuilder(
          int index) {
        return getFieldvaluesFieldBuilder().addBuilder(
            index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.getDefaultInstance());
      }
      public java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder> 
           getFieldvaluesBuilderList() {
        return getFieldvaluesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> 
          getFieldvaluesFieldBuilder() {
        if (fieldvaluesBuilder_ == null) {
          fieldvaluesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder>(
                  fieldvalues_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          fieldvalues_ = null;
        }
        return fieldvaluesBuilder_;
      }
      
      // optional bool fieldactualchange = 8;
      private boolean fieldactualchange_ ;
      public boolean hasFieldactualchange() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public boolean getFieldactualchange() {
        return fieldactualchange_;
      }
      public Builder setFieldactualchange(boolean value) {
        bitField0_ |= 0x00000080;
        fieldactualchange_ = value;
        onChanged();
        return this;
      }
      public Builder clearFieldactualchange() {
        bitField0_ = (bitField0_ & ~0x00000080);
        fieldactualchange_ = false;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:EPICS.ScalarInt)
    }
    
    static {
      defaultInstance = new ScalarInt(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:EPICS.ScalarInt)
  }
  
  public interface ScalarEnumOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required uint32 secondsintoyear = 1;
    boolean hasSecondsintoyear();
    int getSecondsintoyear();
    
    // required uint32 nano = 2;
    boolean hasNano();
    int getNano();
    
    // required sint32 val = 3;
    boolean hasVal();
    int getVal();
    
    // optional int32 severity = 4 [default = 0];
    boolean hasSeverity();
    int getSeverity();
    
    // optional int32 status = 5 [default = 0];
    boolean hasStatus();
    int getStatus();
    
    // optional uint32 repeatcount = 6;
    boolean hasRepeatcount();
    int getRepeatcount();
    
    // repeated .EPICS.FieldValue fieldvalues = 7;
    java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> 
        getFieldvaluesList();
    edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue getFieldvalues(int index);
    int getFieldvaluesCount();
    java.util.List<? extends edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> 
        getFieldvaluesOrBuilderList();
    edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder getFieldvaluesOrBuilder(
        int index);
    
    // optional bool fieldactualchange = 8;
    boolean hasFieldactualchange();
    boolean getFieldactualchange();
  }
  public static final class ScalarEnum extends
      com.google.protobuf.GeneratedMessage
      implements ScalarEnumOrBuilder {
    // Use ScalarEnum.newBuilder() to construct.
    private ScalarEnum(Builder builder) {
      super(builder);
    }
    private ScalarEnum(boolean noInit) {}
    
    private static final ScalarEnum defaultInstance;
    public static ScalarEnum getDefaultInstance() {
      return defaultInstance;
    }
    
    public ScalarEnum getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_ScalarEnum_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_ScalarEnum_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required uint32 secondsintoyear = 1;
    public static final int SECONDSINTOYEAR_FIELD_NUMBER = 1;
    private int secondsintoyear_;
    public boolean hasSecondsintoyear() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getSecondsintoyear() {
      return secondsintoyear_;
    }
    
    // required uint32 nano = 2;
    public static final int NANO_FIELD_NUMBER = 2;
    private int nano_;
    public boolean hasNano() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getNano() {
      return nano_;
    }
    
    // required sint32 val = 3;
    public static final int VAL_FIELD_NUMBER = 3;
    private int val_;
    public boolean hasVal() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getVal() {
      return val_;
    }
    
    // optional int32 severity = 4 [default = 0];
    public static final int SEVERITY_FIELD_NUMBER = 4;
    private int severity_;
    public boolean hasSeverity() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getSeverity() {
      return severity_;
    }
    
    // optional int32 status = 5 [default = 0];
    public static final int STATUS_FIELD_NUMBER = 5;
    private int status_;
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getStatus() {
      return status_;
    }
    
    // optional uint32 repeatcount = 6;
    public static final int REPEATCOUNT_FIELD_NUMBER = 6;
    private int repeatcount_;
    public boolean hasRepeatcount() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getRepeatcount() {
      return repeatcount_;
    }
    
    // repeated .EPICS.FieldValue fieldvalues = 7;
    public static final int FIELDVALUES_FIELD_NUMBER = 7;
    private java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> fieldvalues_;
    public java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> getFieldvaluesList() {
      return fieldvalues_;
    }
    public java.util.List<? extends edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> 
        getFieldvaluesOrBuilderList() {
      return fieldvalues_;
    }
    public int getFieldvaluesCount() {
      return fieldvalues_.size();
    }
    public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue getFieldvalues(int index) {
      return fieldvalues_.get(index);
    }
    public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder getFieldvaluesOrBuilder(
        int index) {
      return fieldvalues_.get(index);
    }
    
    // optional bool fieldactualchange = 8;
    public static final int FIELDACTUALCHANGE_FIELD_NUMBER = 8;
    private boolean fieldactualchange_;
    public boolean hasFieldactualchange() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public boolean getFieldactualchange() {
      return fieldactualchange_;
    }
    
    private void initFields() {
      secondsintoyear_ = 0;
      nano_ = 0;
      val_ = 0;
      severity_ = 0;
      status_ = 0;
      repeatcount_ = 0;
      fieldvalues_ = java.util.Collections.emptyList();
      fieldactualchange_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasSecondsintoyear()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNano()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVal()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getFieldvaluesCount(); i++) {
        if (!getFieldvalues(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, secondsintoyear_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, nano_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeSInt32(3, val_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, severity_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, status_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, repeatcount_);
      }
      for (int i = 0; i < fieldvalues_.size(); i++) {
        output.writeMessage(7, fieldvalues_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(8, fieldactualchange_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, secondsintoyear_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, nano_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(3, val_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, severity_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, status_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, repeatcount_);
      }
      for (int i = 0; i < fieldvalues_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, fieldvalues_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, fieldactualchange_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarEnum parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarEnum parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarEnum parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarEnum parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarEnum parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarEnum parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarEnum parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarEnum parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarEnum parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarEnum parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarEnum prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarEnumOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_ScalarEnum_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_ScalarEnum_fieldAccessorTable;
      }
      
      // Construct using edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarEnum.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFieldvaluesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        secondsintoyear_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        nano_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        val_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        severity_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        repeatcount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        if (fieldvaluesBuilder_ == null) {
          fieldvalues_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          fieldvaluesBuilder_.clear();
        }
        fieldactualchange_ = false;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarEnum.getDescriptor();
      }
      
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarEnum getDefaultInstanceForType() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarEnum.getDefaultInstance();
      }
      
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarEnum build() {
        edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarEnum result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarEnum buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarEnum result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarEnum buildPartial() {
        edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarEnum result = new edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarEnum(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.secondsintoyear_ = secondsintoyear_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.nano_ = nano_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.val_ = val_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.severity_ = severity_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.repeatcount_ = repeatcount_;
        if (fieldvaluesBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            fieldvalues_ = java.util.Collections.unmodifiableList(fieldvalues_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.fieldvalues_ = fieldvalues_;
        } else {
          result.fieldvalues_ = fieldvaluesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.fieldactualchange_ = fieldactualchange_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarEnum) {
          return mergeFrom((edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarEnum)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarEnum other) {
        if (other == edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarEnum.getDefaultInstance()) return this;
        if (other.hasSecondsintoyear()) {
          setSecondsintoyear(other.getSecondsintoyear());
        }
        if (other.hasNano()) {
          setNano(other.getNano());
        }
        if (other.hasVal()) {
          setVal(other.getVal());
        }
        if (other.hasSeverity()) {
          setSeverity(other.getSeverity());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasRepeatcount()) {
          setRepeatcount(other.getRepeatcount());
        }
        if (fieldvaluesBuilder_ == null) {
          if (!other.fieldvalues_.isEmpty()) {
            if (fieldvalues_.isEmpty()) {
              fieldvalues_ = other.fieldvalues_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureFieldvaluesIsMutable();
              fieldvalues_.addAll(other.fieldvalues_);
            }
            onChanged();
          }
        } else {
          if (!other.fieldvalues_.isEmpty()) {
            if (fieldvaluesBuilder_.isEmpty()) {
              fieldvaluesBuilder_.dispose();
              fieldvaluesBuilder_ = null;
              fieldvalues_ = other.fieldvalues_;
              bitField0_ = (bitField0_ & ~0x00000040);
              fieldvaluesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFieldvaluesFieldBuilder() : null;
            } else {
              fieldvaluesBuilder_.addAllMessages(other.fieldvalues_);
            }
          }
        }
        if (other.hasFieldactualchange()) {
          setFieldactualchange(other.getFieldactualchange());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasSecondsintoyear()) {
          
          return false;
        }
        if (!hasNano()) {
          
          return false;
        }
        if (!hasVal()) {
          
          return false;
        }
        for (int i = 0; i < getFieldvaluesCount(); i++) {
          if (!getFieldvalues(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              secondsintoyear_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              nano_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              val_ = input.readSInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              severity_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              status_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              repeatcount_ = input.readUInt32();
              break;
            }
            case 58: {
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder subBuilder = edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addFieldvalues(subBuilder.buildPartial());
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              fieldactualchange_ = input.readBool();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required uint32 secondsintoyear = 1;
      private int secondsintoyear_ ;
      public boolean hasSecondsintoyear() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getSecondsintoyear() {
        return secondsintoyear_;
      }
      public Builder setSecondsintoyear(int value) {
        bitField0_ |= 0x00000001;
        secondsintoyear_ = value;
        onChanged();
        return this;
      }
      public Builder clearSecondsintoyear() {
        bitField0_ = (bitField0_ & ~0x00000001);
        secondsintoyear_ = 0;
        onChanged();
        return this;
      }
      
      // required uint32 nano = 2;
      private int nano_ ;
      public boolean hasNano() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getNano() {
        return nano_;
      }
      public Builder setNano(int value) {
        bitField0_ |= 0x00000002;
        nano_ = value;
        onChanged();
        return this;
      }
      public Builder clearNano() {
        bitField0_ = (bitField0_ & ~0x00000002);
        nano_ = 0;
        onChanged();
        return this;
      }
      
      // required sint32 val = 3;
      private int val_ ;
      public boolean hasVal() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getVal() {
        return val_;
      }
      public Builder setVal(int value) {
        bitField0_ |= 0x00000004;
        val_ = value;
        onChanged();
        return this;
      }
      public Builder clearVal() {
        bitField0_ = (bitField0_ & ~0x00000004);
        val_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 severity = 4 [default = 0];
      private int severity_ ;
      public boolean hasSeverity() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getSeverity() {
        return severity_;
      }
      public Builder setSeverity(int value) {
        bitField0_ |= 0x00000008;
        severity_ = value;
        onChanged();
        return this;
      }
      public Builder clearSeverity() {
        bitField0_ = (bitField0_ & ~0x00000008);
        severity_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 status = 5 [default = 0];
      private int status_ ;
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getStatus() {
        return status_;
      }
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000010;
        status_ = value;
        onChanged();
        return this;
      }
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000010);
        status_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 repeatcount = 6;
      private int repeatcount_ ;
      public boolean hasRepeatcount() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getRepeatcount() {
        return repeatcount_;
      }
      public Builder setRepeatcount(int value) {
        bitField0_ |= 0x00000020;
        repeatcount_ = value;
        onChanged();
        return this;
      }
      public Builder clearRepeatcount() {
        bitField0_ = (bitField0_ & ~0x00000020);
        repeatcount_ = 0;
        onChanged();
        return this;
      }
      
      // repeated .EPICS.FieldValue fieldvalues = 7;
      private java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> fieldvalues_ =
        java.util.Collections.emptyList();
      private void ensureFieldvaluesIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          fieldvalues_ = new java.util.ArrayList<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue>(fieldvalues_);
          bitField0_ |= 0x00000040;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> fieldvaluesBuilder_;
      
      public java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> getFieldvaluesList() {
        if (fieldvaluesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fieldvalues_);
        } else {
          return fieldvaluesBuilder_.getMessageList();
        }
      }
      public int getFieldvaluesCount() {
        if (fieldvaluesBuilder_ == null) {
          return fieldvalues_.size();
        } else {
          return fieldvaluesBuilder_.getCount();
        }
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue getFieldvalues(int index) {
        if (fieldvaluesBuilder_ == null) {
          return fieldvalues_.get(index);
        } else {
          return fieldvaluesBuilder_.getMessage(index);
        }
      }
      public Builder setFieldvalues(
          int index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue value) {
        if (fieldvaluesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldvaluesIsMutable();
          fieldvalues_.set(index, value);
          onChanged();
        } else {
          fieldvaluesBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setFieldvalues(
          int index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder builderForValue) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          fieldvalues_.set(index, builderForValue.build());
          onChanged();
        } else {
          fieldvaluesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addFieldvalues(edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue value) {
        if (fieldvaluesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldvaluesIsMutable();
          fieldvalues_.add(value);
          onChanged();
        } else {
          fieldvaluesBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addFieldvalues(
          int index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue value) {
        if (fieldvaluesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldvaluesIsMutable();
          fieldvalues_.add(index, value);
          onChanged();
        } else {
          fieldvaluesBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addFieldvalues(
          edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder builderForValue) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          fieldvalues_.add(builderForValue.build());
          onChanged();
        } else {
          fieldvaluesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addFieldvalues(
          int index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder builderForValue) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          fieldvalues_.add(index, builderForValue.build());
          onChanged();
        } else {
          fieldvaluesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllFieldvalues(
          java.lang.Iterable<? extends edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> values) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          super.addAll(values, fieldvalues_);
          onChanged();
        } else {
          fieldvaluesBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearFieldvalues() {
        if (fieldvaluesBuilder_ == null) {
          fieldvalues_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          fieldvaluesBuilder_.clear();
        }
        return this;
      }
      public Builder removeFieldvalues(int index) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          fieldvalues_.remove(index);
          onChanged();
        } else {
          fieldvaluesBuilder_.remove(index);
        }
        return this;
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder getFieldvaluesBuilder(
          int index) {
        return getFieldvaluesFieldBuilder().getBuilder(index);
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder getFieldvaluesOrBuilder(
          int index) {
        if (fieldvaluesBuilder_ == null) {
          return fieldvalues_.get(index);  } else {
          return fieldvaluesBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> 
           getFieldvaluesOrBuilderList() {
        if (fieldvaluesBuilder_ != null) {
          return fieldvaluesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fieldvalues_);
        }
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder addFieldvaluesBuilder() {
        return getFieldvaluesFieldBuilder().addBuilder(
            edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.getDefaultInstance());
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder addFieldvaluesBuilder(
          int index) {
        return getFieldvaluesFieldBuilder().addBuilder(
            index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.getDefaultInstance());
      }
      public java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder> 
           getFieldvaluesBuilderList() {
        return getFieldvaluesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> 
          getFieldvaluesFieldBuilder() {
        if (fieldvaluesBuilder_ == null) {
          fieldvaluesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder>(
                  fieldvalues_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          fieldvalues_ = null;
        }
        return fieldvaluesBuilder_;
      }
      
      // optional bool fieldactualchange = 8;
      private boolean fieldactualchange_ ;
      public boolean hasFieldactualchange() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public boolean getFieldactualchange() {
        return fieldactualchange_;
      }
      public Builder setFieldactualchange(boolean value) {
        bitField0_ |= 0x00000080;
        fieldactualchange_ = value;
        onChanged();
        return this;
      }
      public Builder clearFieldactualchange() {
        bitField0_ = (bitField0_ & ~0x00000080);
        fieldactualchange_ = false;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:EPICS.ScalarEnum)
    }
    
    static {
      defaultInstance = new ScalarEnum(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:EPICS.ScalarEnum)
  }
  
  public interface ScalarFloatOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required uint32 secondsintoyear = 1;
    boolean hasSecondsintoyear();
    int getSecondsintoyear();
    
    // required uint32 nano = 2;
    boolean hasNano();
    int getNano();
    
    // required float val = 3;
    boolean hasVal();
    float getVal();
    
    // optional int32 severity = 4 [default = 0];
    boolean hasSeverity();
    int getSeverity();
    
    // optional int32 status = 5 [default = 0];
    boolean hasStatus();
    int getStatus();
    
    // optional uint32 repeatcount = 6;
    boolean hasRepeatcount();
    int getRepeatcount();
    
    // repeated .EPICS.FieldValue fieldvalues = 7;
    java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> 
        getFieldvaluesList();
    edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue getFieldvalues(int index);
    int getFieldvaluesCount();
    java.util.List<? extends edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> 
        getFieldvaluesOrBuilderList();
    edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder getFieldvaluesOrBuilder(
        int index);
    
    // optional bool fieldactualchange = 8;
    boolean hasFieldactualchange();
    boolean getFieldactualchange();
  }
  public static final class ScalarFloat extends
      com.google.protobuf.GeneratedMessage
      implements ScalarFloatOrBuilder {
    // Use ScalarFloat.newBuilder() to construct.
    private ScalarFloat(Builder builder) {
      super(builder);
    }
    private ScalarFloat(boolean noInit) {}
    
    private static final ScalarFloat defaultInstance;
    public static ScalarFloat getDefaultInstance() {
      return defaultInstance;
    }
    
    public ScalarFloat getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_ScalarFloat_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_ScalarFloat_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required uint32 secondsintoyear = 1;
    public static final int SECONDSINTOYEAR_FIELD_NUMBER = 1;
    private int secondsintoyear_;
    public boolean hasSecondsintoyear() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getSecondsintoyear() {
      return secondsintoyear_;
    }
    
    // required uint32 nano = 2;
    public static final int NANO_FIELD_NUMBER = 2;
    private int nano_;
    public boolean hasNano() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getNano() {
      return nano_;
    }
    
    // required float val = 3;
    public static final int VAL_FIELD_NUMBER = 3;
    private float val_;
    public boolean hasVal() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public float getVal() {
      return val_;
    }
    
    // optional int32 severity = 4 [default = 0];
    public static final int SEVERITY_FIELD_NUMBER = 4;
    private int severity_;
    public boolean hasSeverity() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getSeverity() {
      return severity_;
    }
    
    // optional int32 status = 5 [default = 0];
    public static final int STATUS_FIELD_NUMBER = 5;
    private int status_;
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getStatus() {
      return status_;
    }
    
    // optional uint32 repeatcount = 6;
    public static final int REPEATCOUNT_FIELD_NUMBER = 6;
    private int repeatcount_;
    public boolean hasRepeatcount() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getRepeatcount() {
      return repeatcount_;
    }
    
    // repeated .EPICS.FieldValue fieldvalues = 7;
    public static final int FIELDVALUES_FIELD_NUMBER = 7;
    private java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> fieldvalues_;
    public java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> getFieldvaluesList() {
      return fieldvalues_;
    }
    public java.util.List<? extends edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> 
        getFieldvaluesOrBuilderList() {
      return fieldvalues_;
    }
    public int getFieldvaluesCount() {
      return fieldvalues_.size();
    }
    public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue getFieldvalues(int index) {
      return fieldvalues_.get(index);
    }
    public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder getFieldvaluesOrBuilder(
        int index) {
      return fieldvalues_.get(index);
    }
    
    // optional bool fieldactualchange = 8;
    public static final int FIELDACTUALCHANGE_FIELD_NUMBER = 8;
    private boolean fieldactualchange_;
    public boolean hasFieldactualchange() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public boolean getFieldactualchange() {
      return fieldactualchange_;
    }
    
    private void initFields() {
      secondsintoyear_ = 0;
      nano_ = 0;
      val_ = 0F;
      severity_ = 0;
      status_ = 0;
      repeatcount_ = 0;
      fieldvalues_ = java.util.Collections.emptyList();
      fieldactualchange_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasSecondsintoyear()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNano()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVal()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getFieldvaluesCount(); i++) {
        if (!getFieldvalues(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, secondsintoyear_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, nano_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, val_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, severity_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, status_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, repeatcount_);
      }
      for (int i = 0; i < fieldvalues_.size(); i++) {
        output.writeMessage(7, fieldvalues_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(8, fieldactualchange_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, secondsintoyear_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, nano_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, val_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, severity_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, status_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, repeatcount_);
      }
      for (int i = 0; i < fieldvalues_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, fieldvalues_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, fieldactualchange_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarFloat parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarFloat parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarFloat parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarFloat parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarFloat parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarFloat parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarFloat parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarFloat parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarFloat parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarFloat parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarFloat prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarFloatOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_ScalarFloat_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_ScalarFloat_fieldAccessorTable;
      }
      
      // Construct using edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarFloat.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFieldvaluesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        secondsintoyear_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        nano_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        val_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        severity_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        repeatcount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        if (fieldvaluesBuilder_ == null) {
          fieldvalues_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          fieldvaluesBuilder_.clear();
        }
        fieldactualchange_ = false;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarFloat.getDescriptor();
      }
      
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarFloat getDefaultInstanceForType() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarFloat.getDefaultInstance();
      }
      
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarFloat build() {
        edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarFloat result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarFloat buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarFloat result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarFloat buildPartial() {
        edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarFloat result = new edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarFloat(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.secondsintoyear_ = secondsintoyear_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.nano_ = nano_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.val_ = val_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.severity_ = severity_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.repeatcount_ = repeatcount_;
        if (fieldvaluesBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            fieldvalues_ = java.util.Collections.unmodifiableList(fieldvalues_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.fieldvalues_ = fieldvalues_;
        } else {
          result.fieldvalues_ = fieldvaluesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.fieldactualchange_ = fieldactualchange_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarFloat) {
          return mergeFrom((edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarFloat)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarFloat other) {
        if (other == edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarFloat.getDefaultInstance()) return this;
        if (other.hasSecondsintoyear()) {
          setSecondsintoyear(other.getSecondsintoyear());
        }
        if (other.hasNano()) {
          setNano(other.getNano());
        }
        if (other.hasVal()) {
          setVal(other.getVal());
        }
        if (other.hasSeverity()) {
          setSeverity(other.getSeverity());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasRepeatcount()) {
          setRepeatcount(other.getRepeatcount());
        }
        if (fieldvaluesBuilder_ == null) {
          if (!other.fieldvalues_.isEmpty()) {
            if (fieldvalues_.isEmpty()) {
              fieldvalues_ = other.fieldvalues_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureFieldvaluesIsMutable();
              fieldvalues_.addAll(other.fieldvalues_);
            }
            onChanged();
          }
        } else {
          if (!other.fieldvalues_.isEmpty()) {
            if (fieldvaluesBuilder_.isEmpty()) {
              fieldvaluesBuilder_.dispose();
              fieldvaluesBuilder_ = null;
              fieldvalues_ = other.fieldvalues_;
              bitField0_ = (bitField0_ & ~0x00000040);
              fieldvaluesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFieldvaluesFieldBuilder() : null;
            } else {
              fieldvaluesBuilder_.addAllMessages(other.fieldvalues_);
            }
          }
        }
        if (other.hasFieldactualchange()) {
          setFieldactualchange(other.getFieldactualchange());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasSecondsintoyear()) {
          
          return false;
        }
        if (!hasNano()) {
          
          return false;
        }
        if (!hasVal()) {
          
          return false;
        }
        for (int i = 0; i < getFieldvaluesCount(); i++) {
          if (!getFieldvalues(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              secondsintoyear_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              nano_ = input.readUInt32();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              val_ = input.readFloat();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              severity_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              status_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              repeatcount_ = input.readUInt32();
              break;
            }
            case 58: {
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder subBuilder = edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addFieldvalues(subBuilder.buildPartial());
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              fieldactualchange_ = input.readBool();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required uint32 secondsintoyear = 1;
      private int secondsintoyear_ ;
      public boolean hasSecondsintoyear() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getSecondsintoyear() {
        return secondsintoyear_;
      }
      public Builder setSecondsintoyear(int value) {
        bitField0_ |= 0x00000001;
        secondsintoyear_ = value;
        onChanged();
        return this;
      }
      public Builder clearSecondsintoyear() {
        bitField0_ = (bitField0_ & ~0x00000001);
        secondsintoyear_ = 0;
        onChanged();
        return this;
      }
      
      // required uint32 nano = 2;
      private int nano_ ;
      public boolean hasNano() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getNano() {
        return nano_;
      }
      public Builder setNano(int value) {
        bitField0_ |= 0x00000002;
        nano_ = value;
        onChanged();
        return this;
      }
      public Builder clearNano() {
        bitField0_ = (bitField0_ & ~0x00000002);
        nano_ = 0;
        onChanged();
        return this;
      }
      
      // required float val = 3;
      private float val_ ;
      public boolean hasVal() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public float getVal() {
        return val_;
      }
      public Builder setVal(float value) {
        bitField0_ |= 0x00000004;
        val_ = value;
        onChanged();
        return this;
      }
      public Builder clearVal() {
        bitField0_ = (bitField0_ & ~0x00000004);
        val_ = 0F;
        onChanged();
        return this;
      }
      
      // optional int32 severity = 4 [default = 0];
      private int severity_ ;
      public boolean hasSeverity() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getSeverity() {
        return severity_;
      }
      public Builder setSeverity(int value) {
        bitField0_ |= 0x00000008;
        severity_ = value;
        onChanged();
        return this;
      }
      public Builder clearSeverity() {
        bitField0_ = (bitField0_ & ~0x00000008);
        severity_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 status = 5 [default = 0];
      private int status_ ;
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getStatus() {
        return status_;
      }
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000010;
        status_ = value;
        onChanged();
        return this;
      }
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000010);
        status_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 repeatcount = 6;
      private int repeatcount_ ;
      public boolean hasRepeatcount() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getRepeatcount() {
        return repeatcount_;
      }
      public Builder setRepeatcount(int value) {
        bitField0_ |= 0x00000020;
        repeatcount_ = value;
        onChanged();
        return this;
      }
      public Builder clearRepeatcount() {
        bitField0_ = (bitField0_ & ~0x00000020);
        repeatcount_ = 0;
        onChanged();
        return this;
      }
      
      // repeated .EPICS.FieldValue fieldvalues = 7;
      private java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> fieldvalues_ =
        java.util.Collections.emptyList();
      private void ensureFieldvaluesIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          fieldvalues_ = new java.util.ArrayList<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue>(fieldvalues_);
          bitField0_ |= 0x00000040;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> fieldvaluesBuilder_;
      
      public java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> getFieldvaluesList() {
        if (fieldvaluesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fieldvalues_);
        } else {
          return fieldvaluesBuilder_.getMessageList();
        }
      }
      public int getFieldvaluesCount() {
        if (fieldvaluesBuilder_ == null) {
          return fieldvalues_.size();
        } else {
          return fieldvaluesBuilder_.getCount();
        }
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue getFieldvalues(int index) {
        if (fieldvaluesBuilder_ == null) {
          return fieldvalues_.get(index);
        } else {
          return fieldvaluesBuilder_.getMessage(index);
        }
      }
      public Builder setFieldvalues(
          int index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue value) {
        if (fieldvaluesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldvaluesIsMutable();
          fieldvalues_.set(index, value);
          onChanged();
        } else {
          fieldvaluesBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setFieldvalues(
          int index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder builderForValue) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          fieldvalues_.set(index, builderForValue.build());
          onChanged();
        } else {
          fieldvaluesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addFieldvalues(edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue value) {
        if (fieldvaluesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldvaluesIsMutable();
          fieldvalues_.add(value);
          onChanged();
        } else {
          fieldvaluesBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addFieldvalues(
          int index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue value) {
        if (fieldvaluesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldvaluesIsMutable();
          fieldvalues_.add(index, value);
          onChanged();
        } else {
          fieldvaluesBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addFieldvalues(
          edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder builderForValue) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          fieldvalues_.add(builderForValue.build());
          onChanged();
        } else {
          fieldvaluesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addFieldvalues(
          int index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder builderForValue) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          fieldvalues_.add(index, builderForValue.build());
          onChanged();
        } else {
          fieldvaluesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllFieldvalues(
          java.lang.Iterable<? extends edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> values) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          super.addAll(values, fieldvalues_);
          onChanged();
        } else {
          fieldvaluesBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearFieldvalues() {
        if (fieldvaluesBuilder_ == null) {
          fieldvalues_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          fieldvaluesBuilder_.clear();
        }
        return this;
      }
      public Builder removeFieldvalues(int index) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          fieldvalues_.remove(index);
          onChanged();
        } else {
          fieldvaluesBuilder_.remove(index);
        }
        return this;
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder getFieldvaluesBuilder(
          int index) {
        return getFieldvaluesFieldBuilder().getBuilder(index);
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder getFieldvaluesOrBuilder(
          int index) {
        if (fieldvaluesBuilder_ == null) {
          return fieldvalues_.get(index);  } else {
          return fieldvaluesBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> 
           getFieldvaluesOrBuilderList() {
        if (fieldvaluesBuilder_ != null) {
          return fieldvaluesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fieldvalues_);
        }
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder addFieldvaluesBuilder() {
        return getFieldvaluesFieldBuilder().addBuilder(
            edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.getDefaultInstance());
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder addFieldvaluesBuilder(
          int index) {
        return getFieldvaluesFieldBuilder().addBuilder(
            index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.getDefaultInstance());
      }
      public java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder> 
           getFieldvaluesBuilderList() {
        return getFieldvaluesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> 
          getFieldvaluesFieldBuilder() {
        if (fieldvaluesBuilder_ == null) {
          fieldvaluesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder>(
                  fieldvalues_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          fieldvalues_ = null;
        }
        return fieldvaluesBuilder_;
      }
      
      // optional bool fieldactualchange = 8;
      private boolean fieldactualchange_ ;
      public boolean hasFieldactualchange() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public boolean getFieldactualchange() {
        return fieldactualchange_;
      }
      public Builder setFieldactualchange(boolean value) {
        bitField0_ |= 0x00000080;
        fieldactualchange_ = value;
        onChanged();
        return this;
      }
      public Builder clearFieldactualchange() {
        bitField0_ = (bitField0_ & ~0x00000080);
        fieldactualchange_ = false;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:EPICS.ScalarFloat)
    }
    
    static {
      defaultInstance = new ScalarFloat(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:EPICS.ScalarFloat)
  }
  
  public interface ScalarDoubleOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required uint32 secondsintoyear = 1;
    boolean hasSecondsintoyear();
    int getSecondsintoyear();
    
    // required uint32 nano = 2;
    boolean hasNano();
    int getNano();
    
    // required double val = 3;
    boolean hasVal();
    double getVal();
    
    // optional int32 severity = 4 [default = 0];
    boolean hasSeverity();
    int getSeverity();
    
    // optional int32 status = 5 [default = 0];
    boolean hasStatus();
    int getStatus();
    
    // optional uint32 repeatcount = 6;
    boolean hasRepeatcount();
    int getRepeatcount();
    
    // repeated .EPICS.FieldValue fieldvalues = 7;
    java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> 
        getFieldvaluesList();
    edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue getFieldvalues(int index);
    int getFieldvaluesCount();
    java.util.List<? extends edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> 
        getFieldvaluesOrBuilderList();
    edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder getFieldvaluesOrBuilder(
        int index);
    
    // optional bool fieldactualchange = 8;
    boolean hasFieldactualchange();
    boolean getFieldactualchange();
  }
  public static final class ScalarDouble extends
      com.google.protobuf.GeneratedMessage
      implements ScalarDoubleOrBuilder {
    // Use ScalarDouble.newBuilder() to construct.
    private ScalarDouble(Builder builder) {
      super(builder);
    }
    private ScalarDouble(boolean noInit) {}
    
    private static final ScalarDouble defaultInstance;
    public static ScalarDouble getDefaultInstance() {
      return defaultInstance;
    }
    
    public ScalarDouble getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_ScalarDouble_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_ScalarDouble_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required uint32 secondsintoyear = 1;
    public static final int SECONDSINTOYEAR_FIELD_NUMBER = 1;
    private int secondsintoyear_;
    public boolean hasSecondsintoyear() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getSecondsintoyear() {
      return secondsintoyear_;
    }
    
    // required uint32 nano = 2;
    public static final int NANO_FIELD_NUMBER = 2;
    private int nano_;
    public boolean hasNano() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getNano() {
      return nano_;
    }
    
    // required double val = 3;
    public static final int VAL_FIELD_NUMBER = 3;
    private double val_;
    public boolean hasVal() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public double getVal() {
      return val_;
    }
    
    // optional int32 severity = 4 [default = 0];
    public static final int SEVERITY_FIELD_NUMBER = 4;
    private int severity_;
    public boolean hasSeverity() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getSeverity() {
      return severity_;
    }
    
    // optional int32 status = 5 [default = 0];
    public static final int STATUS_FIELD_NUMBER = 5;
    private int status_;
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getStatus() {
      return status_;
    }
    
    // optional uint32 repeatcount = 6;
    public static final int REPEATCOUNT_FIELD_NUMBER = 6;
    private int repeatcount_;
    public boolean hasRepeatcount() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getRepeatcount() {
      return repeatcount_;
    }
    
    // repeated .EPICS.FieldValue fieldvalues = 7;
    public static final int FIELDVALUES_FIELD_NUMBER = 7;
    private java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> fieldvalues_;
    public java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> getFieldvaluesList() {
      return fieldvalues_;
    }
    public java.util.List<? extends edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> 
        getFieldvaluesOrBuilderList() {
      return fieldvalues_;
    }
    public int getFieldvaluesCount() {
      return fieldvalues_.size();
    }
    public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue getFieldvalues(int index) {
      return fieldvalues_.get(index);
    }
    public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder getFieldvaluesOrBuilder(
        int index) {
      return fieldvalues_.get(index);
    }
    
    // optional bool fieldactualchange = 8;
    public static final int FIELDACTUALCHANGE_FIELD_NUMBER = 8;
    private boolean fieldactualchange_;
    public boolean hasFieldactualchange() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public boolean getFieldactualchange() {
      return fieldactualchange_;
    }
    
    private void initFields() {
      secondsintoyear_ = 0;
      nano_ = 0;
      val_ = 0D;
      severity_ = 0;
      status_ = 0;
      repeatcount_ = 0;
      fieldvalues_ = java.util.Collections.emptyList();
      fieldactualchange_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasSecondsintoyear()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNano()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVal()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getFieldvaluesCount(); i++) {
        if (!getFieldvalues(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, secondsintoyear_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, nano_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(3, val_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, severity_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, status_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, repeatcount_);
      }
      for (int i = 0; i < fieldvalues_.size(); i++) {
        output.writeMessage(7, fieldvalues_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(8, fieldactualchange_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, secondsintoyear_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, nano_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, val_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, severity_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, status_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, repeatcount_);
      }
      for (int i = 0; i < fieldvalues_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, fieldvalues_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, fieldactualchange_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarDouble parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarDouble parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarDouble parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarDouble parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarDouble parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarDouble parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarDouble parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarDouble parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarDouble parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarDouble parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarDouble prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarDoubleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_ScalarDouble_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_ScalarDouble_fieldAccessorTable;
      }
      
      // Construct using edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarDouble.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFieldvaluesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        secondsintoyear_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        nano_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        val_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000004);
        severity_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        repeatcount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        if (fieldvaluesBuilder_ == null) {
          fieldvalues_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          fieldvaluesBuilder_.clear();
        }
        fieldactualchange_ = false;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarDouble.getDescriptor();
      }
      
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarDouble getDefaultInstanceForType() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarDouble.getDefaultInstance();
      }
      
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarDouble build() {
        edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarDouble result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarDouble buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarDouble result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarDouble buildPartial() {
        edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarDouble result = new edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarDouble(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.secondsintoyear_ = secondsintoyear_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.nano_ = nano_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.val_ = val_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.severity_ = severity_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.repeatcount_ = repeatcount_;
        if (fieldvaluesBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            fieldvalues_ = java.util.Collections.unmodifiableList(fieldvalues_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.fieldvalues_ = fieldvalues_;
        } else {
          result.fieldvalues_ = fieldvaluesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.fieldactualchange_ = fieldactualchange_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarDouble) {
          return mergeFrom((edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarDouble)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarDouble other) {
        if (other == edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarDouble.getDefaultInstance()) return this;
        if (other.hasSecondsintoyear()) {
          setSecondsintoyear(other.getSecondsintoyear());
        }
        if (other.hasNano()) {
          setNano(other.getNano());
        }
        if (other.hasVal()) {
          setVal(other.getVal());
        }
        if (other.hasSeverity()) {
          setSeverity(other.getSeverity());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasRepeatcount()) {
          setRepeatcount(other.getRepeatcount());
        }
        if (fieldvaluesBuilder_ == null) {
          if (!other.fieldvalues_.isEmpty()) {
            if (fieldvalues_.isEmpty()) {
              fieldvalues_ = other.fieldvalues_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureFieldvaluesIsMutable();
              fieldvalues_.addAll(other.fieldvalues_);
            }
            onChanged();
          }
        } else {
          if (!other.fieldvalues_.isEmpty()) {
            if (fieldvaluesBuilder_.isEmpty()) {
              fieldvaluesBuilder_.dispose();
              fieldvaluesBuilder_ = null;
              fieldvalues_ = other.fieldvalues_;
              bitField0_ = (bitField0_ & ~0x00000040);
              fieldvaluesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFieldvaluesFieldBuilder() : null;
            } else {
              fieldvaluesBuilder_.addAllMessages(other.fieldvalues_);
            }
          }
        }
        if (other.hasFieldactualchange()) {
          setFieldactualchange(other.getFieldactualchange());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasSecondsintoyear()) {
          
          return false;
        }
        if (!hasNano()) {
          
          return false;
        }
        if (!hasVal()) {
          
          return false;
        }
        for (int i = 0; i < getFieldvaluesCount(); i++) {
          if (!getFieldvalues(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              secondsintoyear_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              nano_ = input.readUInt32();
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              val_ = input.readDouble();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              severity_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              status_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              repeatcount_ = input.readUInt32();
              break;
            }
            case 58: {
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder subBuilder = edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addFieldvalues(subBuilder.buildPartial());
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              fieldactualchange_ = input.readBool();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required uint32 secondsintoyear = 1;
      private int secondsintoyear_ ;
      public boolean hasSecondsintoyear() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getSecondsintoyear() {
        return secondsintoyear_;
      }
      public Builder setSecondsintoyear(int value) {
        bitField0_ |= 0x00000001;
        secondsintoyear_ = value;
        onChanged();
        return this;
      }
      public Builder clearSecondsintoyear() {
        bitField0_ = (bitField0_ & ~0x00000001);
        secondsintoyear_ = 0;
        onChanged();
        return this;
      }
      
      // required uint32 nano = 2;
      private int nano_ ;
      public boolean hasNano() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getNano() {
        return nano_;
      }
      public Builder setNano(int value) {
        bitField0_ |= 0x00000002;
        nano_ = value;
        onChanged();
        return this;
      }
      public Builder clearNano() {
        bitField0_ = (bitField0_ & ~0x00000002);
        nano_ = 0;
        onChanged();
        return this;
      }
      
      // required double val = 3;
      private double val_ ;
      public boolean hasVal() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public double getVal() {
        return val_;
      }
      public Builder setVal(double value) {
        bitField0_ |= 0x00000004;
        val_ = value;
        onChanged();
        return this;
      }
      public Builder clearVal() {
        bitField0_ = (bitField0_ & ~0x00000004);
        val_ = 0D;
        onChanged();
        return this;
      }
      
      // optional int32 severity = 4 [default = 0];
      private int severity_ ;
      public boolean hasSeverity() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getSeverity() {
        return severity_;
      }
      public Builder setSeverity(int value) {
        bitField0_ |= 0x00000008;
        severity_ = value;
        onChanged();
        return this;
      }
      public Builder clearSeverity() {
        bitField0_ = (bitField0_ & ~0x00000008);
        severity_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 status = 5 [default = 0];
      private int status_ ;
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getStatus() {
        return status_;
      }
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000010;
        status_ = value;
        onChanged();
        return this;
      }
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000010);
        status_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 repeatcount = 6;
      private int repeatcount_ ;
      public boolean hasRepeatcount() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getRepeatcount() {
        return repeatcount_;
      }
      public Builder setRepeatcount(int value) {
        bitField0_ |= 0x00000020;
        repeatcount_ = value;
        onChanged();
        return this;
      }
      public Builder clearRepeatcount() {
        bitField0_ = (bitField0_ & ~0x00000020);
        repeatcount_ = 0;
        onChanged();
        return this;
      }
      
      // repeated .EPICS.FieldValue fieldvalues = 7;
      private java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> fieldvalues_ =
        java.util.Collections.emptyList();
      private void ensureFieldvaluesIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          fieldvalues_ = new java.util.ArrayList<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue>(fieldvalues_);
          bitField0_ |= 0x00000040;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> fieldvaluesBuilder_;
      
      public java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> getFieldvaluesList() {
        if (fieldvaluesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fieldvalues_);
        } else {
          return fieldvaluesBuilder_.getMessageList();
        }
      }
      public int getFieldvaluesCount() {
        if (fieldvaluesBuilder_ == null) {
          return fieldvalues_.size();
        } else {
          return fieldvaluesBuilder_.getCount();
        }
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue getFieldvalues(int index) {
        if (fieldvaluesBuilder_ == null) {
          return fieldvalues_.get(index);
        } else {
          return fieldvaluesBuilder_.getMessage(index);
        }
      }
      public Builder setFieldvalues(
          int index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue value) {
        if (fieldvaluesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldvaluesIsMutable();
          fieldvalues_.set(index, value);
          onChanged();
        } else {
          fieldvaluesBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setFieldvalues(
          int index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder builderForValue) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          fieldvalues_.set(index, builderForValue.build());
          onChanged();
        } else {
          fieldvaluesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addFieldvalues(edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue value) {
        if (fieldvaluesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldvaluesIsMutable();
          fieldvalues_.add(value);
          onChanged();
        } else {
          fieldvaluesBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addFieldvalues(
          int index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue value) {
        if (fieldvaluesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldvaluesIsMutable();
          fieldvalues_.add(index, value);
          onChanged();
        } else {
          fieldvaluesBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addFieldvalues(
          edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder builderForValue) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          fieldvalues_.add(builderForValue.build());
          onChanged();
        } else {
          fieldvaluesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addFieldvalues(
          int index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder builderForValue) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          fieldvalues_.add(index, builderForValue.build());
          onChanged();
        } else {
          fieldvaluesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllFieldvalues(
          java.lang.Iterable<? extends edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> values) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          super.addAll(values, fieldvalues_);
          onChanged();
        } else {
          fieldvaluesBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearFieldvalues() {
        if (fieldvaluesBuilder_ == null) {
          fieldvalues_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          fieldvaluesBuilder_.clear();
        }
        return this;
      }
      public Builder removeFieldvalues(int index) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          fieldvalues_.remove(index);
          onChanged();
        } else {
          fieldvaluesBuilder_.remove(index);
        }
        return this;
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder getFieldvaluesBuilder(
          int index) {
        return getFieldvaluesFieldBuilder().getBuilder(index);
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder getFieldvaluesOrBuilder(
          int index) {
        if (fieldvaluesBuilder_ == null) {
          return fieldvalues_.get(index);  } else {
          return fieldvaluesBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> 
           getFieldvaluesOrBuilderList() {
        if (fieldvaluesBuilder_ != null) {
          return fieldvaluesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fieldvalues_);
        }
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder addFieldvaluesBuilder() {
        return getFieldvaluesFieldBuilder().addBuilder(
            edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.getDefaultInstance());
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder addFieldvaluesBuilder(
          int index) {
        return getFieldvaluesFieldBuilder().addBuilder(
            index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.getDefaultInstance());
      }
      public java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder> 
           getFieldvaluesBuilderList() {
        return getFieldvaluesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> 
          getFieldvaluesFieldBuilder() {
        if (fieldvaluesBuilder_ == null) {
          fieldvaluesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder>(
                  fieldvalues_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          fieldvalues_ = null;
        }
        return fieldvaluesBuilder_;
      }
      
      // optional bool fieldactualchange = 8;
      private boolean fieldactualchange_ ;
      public boolean hasFieldactualchange() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public boolean getFieldactualchange() {
        return fieldactualchange_;
      }
      public Builder setFieldactualchange(boolean value) {
        bitField0_ |= 0x00000080;
        fieldactualchange_ = value;
        onChanged();
        return this;
      }
      public Builder clearFieldactualchange() {
        bitField0_ = (bitField0_ & ~0x00000080);
        fieldactualchange_ = false;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:EPICS.ScalarDouble)
    }
    
    static {
      defaultInstance = new ScalarDouble(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:EPICS.ScalarDouble)
  }
  
  public interface VectorStringOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required uint32 secondsintoyear = 1;
    boolean hasSecondsintoyear();
    int getSecondsintoyear();
    
    // required uint32 nano = 2;
    boolean hasNano();
    int getNano();
    
    // repeated string val = 3;
    java.util.List<String> getValList();
    int getValCount();
    String getVal(int index);
    
    // optional int32 severity = 4 [default = 0];
    boolean hasSeverity();
    int getSeverity();
    
    // optional int32 status = 5 [default = 0];
    boolean hasStatus();
    int getStatus();
    
    // optional uint32 repeatcount = 6;
    boolean hasRepeatcount();
    int getRepeatcount();
    
    // repeated .EPICS.FieldValue fieldvalues = 7;
    java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> 
        getFieldvaluesList();
    edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue getFieldvalues(int index);
    int getFieldvaluesCount();
    java.util.List<? extends edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> 
        getFieldvaluesOrBuilderList();
    edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder getFieldvaluesOrBuilder(
        int index);
    
    // optional bool fieldactualchange = 8;
    boolean hasFieldactualchange();
    boolean getFieldactualchange();
  }
  public static final class VectorString extends
      com.google.protobuf.GeneratedMessage
      implements VectorStringOrBuilder {
    // Use VectorString.newBuilder() to construct.
    private VectorString(Builder builder) {
      super(builder);
    }
    private VectorString(boolean noInit) {}
    
    private static final VectorString defaultInstance;
    public static VectorString getDefaultInstance() {
      return defaultInstance;
    }
    
    public VectorString getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_VectorString_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_VectorString_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required uint32 secondsintoyear = 1;
    public static final int SECONDSINTOYEAR_FIELD_NUMBER = 1;
    private int secondsintoyear_;
    public boolean hasSecondsintoyear() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getSecondsintoyear() {
      return secondsintoyear_;
    }
    
    // required uint32 nano = 2;
    public static final int NANO_FIELD_NUMBER = 2;
    private int nano_;
    public boolean hasNano() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getNano() {
      return nano_;
    }
    
    // repeated string val = 3;
    public static final int VAL_FIELD_NUMBER = 3;
    private com.google.protobuf.LazyStringList val_;
    public java.util.List<String>
        getValList() {
      return val_;
    }
    public int getValCount() {
      return val_.size();
    }
    public String getVal(int index) {
      return val_.get(index);
    }
    
    // optional int32 severity = 4 [default = 0];
    public static final int SEVERITY_FIELD_NUMBER = 4;
    private int severity_;
    public boolean hasSeverity() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getSeverity() {
      return severity_;
    }
    
    // optional int32 status = 5 [default = 0];
    public static final int STATUS_FIELD_NUMBER = 5;
    private int status_;
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getStatus() {
      return status_;
    }
    
    // optional uint32 repeatcount = 6;
    public static final int REPEATCOUNT_FIELD_NUMBER = 6;
    private int repeatcount_;
    public boolean hasRepeatcount() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getRepeatcount() {
      return repeatcount_;
    }
    
    // repeated .EPICS.FieldValue fieldvalues = 7;
    public static final int FIELDVALUES_FIELD_NUMBER = 7;
    private java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> fieldvalues_;
    public java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> getFieldvaluesList() {
      return fieldvalues_;
    }
    public java.util.List<? extends edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> 
        getFieldvaluesOrBuilderList() {
      return fieldvalues_;
    }
    public int getFieldvaluesCount() {
      return fieldvalues_.size();
    }
    public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue getFieldvalues(int index) {
      return fieldvalues_.get(index);
    }
    public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder getFieldvaluesOrBuilder(
        int index) {
      return fieldvalues_.get(index);
    }
    
    // optional bool fieldactualchange = 8;
    public static final int FIELDACTUALCHANGE_FIELD_NUMBER = 8;
    private boolean fieldactualchange_;
    public boolean hasFieldactualchange() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public boolean getFieldactualchange() {
      return fieldactualchange_;
    }
    
    private void initFields() {
      secondsintoyear_ = 0;
      nano_ = 0;
      val_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      severity_ = 0;
      status_ = 0;
      repeatcount_ = 0;
      fieldvalues_ = java.util.Collections.emptyList();
      fieldactualchange_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasSecondsintoyear()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNano()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getFieldvaluesCount(); i++) {
        if (!getFieldvalues(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, secondsintoyear_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, nano_);
      }
      for (int i = 0; i < val_.size(); i++) {
        output.writeBytes(3, val_.getByteString(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(4, severity_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(5, status_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(6, repeatcount_);
      }
      for (int i = 0; i < fieldvalues_.size(); i++) {
        output.writeMessage(7, fieldvalues_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(8, fieldactualchange_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, secondsintoyear_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, nano_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < val_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(val_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getValList().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, severity_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, status_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, repeatcount_);
      }
      for (int i = 0; i < fieldvalues_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, fieldvalues_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, fieldactualchange_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorString parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorString parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorString parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorString parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorString parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorString parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorString parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorString parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorString parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorString parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorString prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorStringOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_VectorString_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_VectorString_fieldAccessorTable;
      }
      
      // Construct using edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorString.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFieldvaluesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        secondsintoyear_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        nano_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        val_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        severity_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        repeatcount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        if (fieldvaluesBuilder_ == null) {
          fieldvalues_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          fieldvaluesBuilder_.clear();
        }
        fieldactualchange_ = false;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorString.getDescriptor();
      }
      
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorString getDefaultInstanceForType() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorString.getDefaultInstance();
      }
      
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorString build() {
        edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorString result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorString buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorString result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorString buildPartial() {
        edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorString result = new edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorString(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.secondsintoyear_ = secondsintoyear_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.nano_ = nano_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          val_ = new com.google.protobuf.UnmodifiableLazyStringList(
              val_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.val_ = val_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.severity_ = severity_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.repeatcount_ = repeatcount_;
        if (fieldvaluesBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            fieldvalues_ = java.util.Collections.unmodifiableList(fieldvalues_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.fieldvalues_ = fieldvalues_;
        } else {
          result.fieldvalues_ = fieldvaluesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000020;
        }
        result.fieldactualchange_ = fieldactualchange_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorString) {
          return mergeFrom((edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorString)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorString other) {
        if (other == edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorString.getDefaultInstance()) return this;
        if (other.hasSecondsintoyear()) {
          setSecondsintoyear(other.getSecondsintoyear());
        }
        if (other.hasNano()) {
          setNano(other.getNano());
        }
        if (!other.val_.isEmpty()) {
          if (val_.isEmpty()) {
            val_ = other.val_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureValIsMutable();
            val_.addAll(other.val_);
          }
          onChanged();
        }
        if (other.hasSeverity()) {
          setSeverity(other.getSeverity());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasRepeatcount()) {
          setRepeatcount(other.getRepeatcount());
        }
        if (fieldvaluesBuilder_ == null) {
          if (!other.fieldvalues_.isEmpty()) {
            if (fieldvalues_.isEmpty()) {
              fieldvalues_ = other.fieldvalues_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureFieldvaluesIsMutable();
              fieldvalues_.addAll(other.fieldvalues_);
            }
            onChanged();
          }
        } else {
          if (!other.fieldvalues_.isEmpty()) {
            if (fieldvaluesBuilder_.isEmpty()) {
              fieldvaluesBuilder_.dispose();
              fieldvaluesBuilder_ = null;
              fieldvalues_ = other.fieldvalues_;
              bitField0_ = (bitField0_ & ~0x00000040);
              fieldvaluesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFieldvaluesFieldBuilder() : null;
            } else {
              fieldvaluesBuilder_.addAllMessages(other.fieldvalues_);
            }
          }
        }
        if (other.hasFieldactualchange()) {
          setFieldactualchange(other.getFieldactualchange());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasSecondsintoyear()) {
          
          return false;
        }
        if (!hasNano()) {
          
          return false;
        }
        for (int i = 0; i < getFieldvaluesCount(); i++) {
          if (!getFieldvalues(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              secondsintoyear_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              nano_ = input.readUInt32();
              break;
            }
            case 26: {
              ensureValIsMutable();
              val_.add(input.readBytes());
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              severity_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              status_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              repeatcount_ = input.readUInt32();
              break;
            }
            case 58: {
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder subBuilder = edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addFieldvalues(subBuilder.buildPartial());
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              fieldactualchange_ = input.readBool();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required uint32 secondsintoyear = 1;
      private int secondsintoyear_ ;
      public boolean hasSecondsintoyear() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getSecondsintoyear() {
        return secondsintoyear_;
      }
      public Builder setSecondsintoyear(int value) {
        bitField0_ |= 0x00000001;
        secondsintoyear_ = value;
        onChanged();
        return this;
      }
      public Builder clearSecondsintoyear() {
        bitField0_ = (bitField0_ & ~0x00000001);
        secondsintoyear_ = 0;
        onChanged();
        return this;
      }
      
      // required uint32 nano = 2;
      private int nano_ ;
      public boolean hasNano() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getNano() {
        return nano_;
      }
      public Builder setNano(int value) {
        bitField0_ |= 0x00000002;
        nano_ = value;
        onChanged();
        return this;
      }
      public Builder clearNano() {
        bitField0_ = (bitField0_ & ~0x00000002);
        nano_ = 0;
        onChanged();
        return this;
      }
      
      // repeated string val = 3;
      private com.google.protobuf.LazyStringList val_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureValIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          val_ = new com.google.protobuf.LazyStringArrayList(val_);
          bitField0_ |= 0x00000004;
         }
      }
      public java.util.List<String>
          getValList() {
        return java.util.Collections.unmodifiableList(val_);
      }
      public int getValCount() {
        return val_.size();
      }
      public String getVal(int index) {
        return val_.get(index);
      }
      public Builder setVal(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureValIsMutable();
        val_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addVal(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureValIsMutable();
        val_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllVal(
          java.lang.Iterable<String> values) {
        ensureValIsMutable();
        super.addAll(values, val_);
        onChanged();
        return this;
      }
      public Builder clearVal() {
        val_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      void addVal(com.google.protobuf.ByteString value) {
        ensureValIsMutable();
        val_.add(value);
        onChanged();
      }
      
      // optional int32 severity = 4 [default = 0];
      private int severity_ ;
      public boolean hasSeverity() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getSeverity() {
        return severity_;
      }
      public Builder setSeverity(int value) {
        bitField0_ |= 0x00000008;
        severity_ = value;
        onChanged();
        return this;
      }
      public Builder clearSeverity() {
        bitField0_ = (bitField0_ & ~0x00000008);
        severity_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 status = 5 [default = 0];
      private int status_ ;
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getStatus() {
        return status_;
      }
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000010;
        status_ = value;
        onChanged();
        return this;
      }
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000010);
        status_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 repeatcount = 6;
      private int repeatcount_ ;
      public boolean hasRepeatcount() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getRepeatcount() {
        return repeatcount_;
      }
      public Builder setRepeatcount(int value) {
        bitField0_ |= 0x00000020;
        repeatcount_ = value;
        onChanged();
        return this;
      }
      public Builder clearRepeatcount() {
        bitField0_ = (bitField0_ & ~0x00000020);
        repeatcount_ = 0;
        onChanged();
        return this;
      }
      
      // repeated .EPICS.FieldValue fieldvalues = 7;
      private java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> fieldvalues_ =
        java.util.Collections.emptyList();
      private void ensureFieldvaluesIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          fieldvalues_ = new java.util.ArrayList<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue>(fieldvalues_);
          bitField0_ |= 0x00000040;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> fieldvaluesBuilder_;
      
      public java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> getFieldvaluesList() {
        if (fieldvaluesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fieldvalues_);
        } else {
          return fieldvaluesBuilder_.getMessageList();
        }
      }
      public int getFieldvaluesCount() {
        if (fieldvaluesBuilder_ == null) {
          return fieldvalues_.size();
        } else {
          return fieldvaluesBuilder_.getCount();
        }
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue getFieldvalues(int index) {
        if (fieldvaluesBuilder_ == null) {
          return fieldvalues_.get(index);
        } else {
          return fieldvaluesBuilder_.getMessage(index);
        }
      }
      public Builder setFieldvalues(
          int index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue value) {
        if (fieldvaluesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldvaluesIsMutable();
          fieldvalues_.set(index, value);
          onChanged();
        } else {
          fieldvaluesBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setFieldvalues(
          int index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder builderForValue) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          fieldvalues_.set(index, builderForValue.build());
          onChanged();
        } else {
          fieldvaluesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addFieldvalues(edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue value) {
        if (fieldvaluesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldvaluesIsMutable();
          fieldvalues_.add(value);
          onChanged();
        } else {
          fieldvaluesBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addFieldvalues(
          int index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue value) {
        if (fieldvaluesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldvaluesIsMutable();
          fieldvalues_.add(index, value);
          onChanged();
        } else {
          fieldvaluesBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addFieldvalues(
          edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder builderForValue) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          fieldvalues_.add(builderForValue.build());
          onChanged();
        } else {
          fieldvaluesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addFieldvalues(
          int index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder builderForValue) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          fieldvalues_.add(index, builderForValue.build());
          onChanged();
        } else {
          fieldvaluesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllFieldvalues(
          java.lang.Iterable<? extends edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> values) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          super.addAll(values, fieldvalues_);
          onChanged();
        } else {
          fieldvaluesBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearFieldvalues() {
        if (fieldvaluesBuilder_ == null) {
          fieldvalues_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          fieldvaluesBuilder_.clear();
        }
        return this;
      }
      public Builder removeFieldvalues(int index) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          fieldvalues_.remove(index);
          onChanged();
        } else {
          fieldvaluesBuilder_.remove(index);
        }
        return this;
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder getFieldvaluesBuilder(
          int index) {
        return getFieldvaluesFieldBuilder().getBuilder(index);
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder getFieldvaluesOrBuilder(
          int index) {
        if (fieldvaluesBuilder_ == null) {
          return fieldvalues_.get(index);  } else {
          return fieldvaluesBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> 
           getFieldvaluesOrBuilderList() {
        if (fieldvaluesBuilder_ != null) {
          return fieldvaluesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fieldvalues_);
        }
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder addFieldvaluesBuilder() {
        return getFieldvaluesFieldBuilder().addBuilder(
            edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.getDefaultInstance());
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder addFieldvaluesBuilder(
          int index) {
        return getFieldvaluesFieldBuilder().addBuilder(
            index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.getDefaultInstance());
      }
      public java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder> 
           getFieldvaluesBuilderList() {
        return getFieldvaluesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> 
          getFieldvaluesFieldBuilder() {
        if (fieldvaluesBuilder_ == null) {
          fieldvaluesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder>(
                  fieldvalues_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          fieldvalues_ = null;
        }
        return fieldvaluesBuilder_;
      }
      
      // optional bool fieldactualchange = 8;
      private boolean fieldactualchange_ ;
      public boolean hasFieldactualchange() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public boolean getFieldactualchange() {
        return fieldactualchange_;
      }
      public Builder setFieldactualchange(boolean value) {
        bitField0_ |= 0x00000080;
        fieldactualchange_ = value;
        onChanged();
        return this;
      }
      public Builder clearFieldactualchange() {
        bitField0_ = (bitField0_ & ~0x00000080);
        fieldactualchange_ = false;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:EPICS.VectorString)
    }
    
    static {
      defaultInstance = new VectorString(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:EPICS.VectorString)
  }
  
  public interface VectorCharOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required uint32 secondsintoyear = 1;
    boolean hasSecondsintoyear();
    int getSecondsintoyear();
    
    // required uint32 nano = 2;
    boolean hasNano();
    int getNano();
    
    // required bytes val = 3;
    boolean hasVal();
    com.google.protobuf.ByteString getVal();
    
    // optional int32 severity = 4 [default = 0];
    boolean hasSeverity();
    int getSeverity();
    
    // optional int32 status = 5 [default = 0];
    boolean hasStatus();
    int getStatus();
    
    // optional uint32 repeatcount = 6;
    boolean hasRepeatcount();
    int getRepeatcount();
    
    // repeated .EPICS.FieldValue fieldvalues = 7;
    java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> 
        getFieldvaluesList();
    edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue getFieldvalues(int index);
    int getFieldvaluesCount();
    java.util.List<? extends edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> 
        getFieldvaluesOrBuilderList();
    edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder getFieldvaluesOrBuilder(
        int index);
    
    // optional bool fieldactualchange = 8;
    boolean hasFieldactualchange();
    boolean getFieldactualchange();
  }
  public static final class VectorChar extends
      com.google.protobuf.GeneratedMessage
      implements VectorCharOrBuilder {
    // Use VectorChar.newBuilder() to construct.
    private VectorChar(Builder builder) {
      super(builder);
    }
    private VectorChar(boolean noInit) {}
    
    private static final VectorChar defaultInstance;
    public static VectorChar getDefaultInstance() {
      return defaultInstance;
    }
    
    public VectorChar getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_VectorChar_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_VectorChar_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required uint32 secondsintoyear = 1;
    public static final int SECONDSINTOYEAR_FIELD_NUMBER = 1;
    private int secondsintoyear_;
    public boolean hasSecondsintoyear() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getSecondsintoyear() {
      return secondsintoyear_;
    }
    
    // required uint32 nano = 2;
    public static final int NANO_FIELD_NUMBER = 2;
    private int nano_;
    public boolean hasNano() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getNano() {
      return nano_;
    }
    
    // required bytes val = 3;
    public static final int VAL_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString val_;
    public boolean hasVal() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public com.google.protobuf.ByteString getVal() {
      return val_;
    }
    
    // optional int32 severity = 4 [default = 0];
    public static final int SEVERITY_FIELD_NUMBER = 4;
    private int severity_;
    public boolean hasSeverity() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getSeverity() {
      return severity_;
    }
    
    // optional int32 status = 5 [default = 0];
    public static final int STATUS_FIELD_NUMBER = 5;
    private int status_;
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getStatus() {
      return status_;
    }
    
    // optional uint32 repeatcount = 6;
    public static final int REPEATCOUNT_FIELD_NUMBER = 6;
    private int repeatcount_;
    public boolean hasRepeatcount() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getRepeatcount() {
      return repeatcount_;
    }
    
    // repeated .EPICS.FieldValue fieldvalues = 7;
    public static final int FIELDVALUES_FIELD_NUMBER = 7;
    private java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> fieldvalues_;
    public java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> getFieldvaluesList() {
      return fieldvalues_;
    }
    public java.util.List<? extends edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> 
        getFieldvaluesOrBuilderList() {
      return fieldvalues_;
    }
    public int getFieldvaluesCount() {
      return fieldvalues_.size();
    }
    public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue getFieldvalues(int index) {
      return fieldvalues_.get(index);
    }
    public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder getFieldvaluesOrBuilder(
        int index) {
      return fieldvalues_.get(index);
    }
    
    // optional bool fieldactualchange = 8;
    public static final int FIELDACTUALCHANGE_FIELD_NUMBER = 8;
    private boolean fieldactualchange_;
    public boolean hasFieldactualchange() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public boolean getFieldactualchange() {
      return fieldactualchange_;
    }
    
    private void initFields() {
      secondsintoyear_ = 0;
      nano_ = 0;
      val_ = com.google.protobuf.ByteString.EMPTY;
      severity_ = 0;
      status_ = 0;
      repeatcount_ = 0;
      fieldvalues_ = java.util.Collections.emptyList();
      fieldactualchange_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasSecondsintoyear()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNano()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVal()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getFieldvaluesCount(); i++) {
        if (!getFieldvalues(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, secondsintoyear_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, nano_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, val_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, severity_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, status_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, repeatcount_);
      }
      for (int i = 0; i < fieldvalues_.size(); i++) {
        output.writeMessage(7, fieldvalues_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(8, fieldactualchange_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, secondsintoyear_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, nano_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, val_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, severity_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, status_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, repeatcount_);
      }
      for (int i = 0; i < fieldvalues_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, fieldvalues_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, fieldactualchange_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorChar parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorChar parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorChar parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorChar parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorChar parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorChar parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorChar parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorChar parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorChar parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorChar parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorChar prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorCharOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_VectorChar_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_VectorChar_fieldAccessorTable;
      }
      
      // Construct using edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorChar.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFieldvaluesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        secondsintoyear_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        nano_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        val_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        severity_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        repeatcount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        if (fieldvaluesBuilder_ == null) {
          fieldvalues_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          fieldvaluesBuilder_.clear();
        }
        fieldactualchange_ = false;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorChar.getDescriptor();
      }
      
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorChar getDefaultInstanceForType() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorChar.getDefaultInstance();
      }
      
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorChar build() {
        edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorChar result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorChar buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorChar result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorChar buildPartial() {
        edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorChar result = new edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorChar(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.secondsintoyear_ = secondsintoyear_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.nano_ = nano_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.val_ = val_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.severity_ = severity_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.repeatcount_ = repeatcount_;
        if (fieldvaluesBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            fieldvalues_ = java.util.Collections.unmodifiableList(fieldvalues_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.fieldvalues_ = fieldvalues_;
        } else {
          result.fieldvalues_ = fieldvaluesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.fieldactualchange_ = fieldactualchange_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorChar) {
          return mergeFrom((edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorChar)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorChar other) {
        if (other == edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorChar.getDefaultInstance()) return this;
        if (other.hasSecondsintoyear()) {
          setSecondsintoyear(other.getSecondsintoyear());
        }
        if (other.hasNano()) {
          setNano(other.getNano());
        }
        if (other.hasVal()) {
          setVal(other.getVal());
        }
        if (other.hasSeverity()) {
          setSeverity(other.getSeverity());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasRepeatcount()) {
          setRepeatcount(other.getRepeatcount());
        }
        if (fieldvaluesBuilder_ == null) {
          if (!other.fieldvalues_.isEmpty()) {
            if (fieldvalues_.isEmpty()) {
              fieldvalues_ = other.fieldvalues_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureFieldvaluesIsMutable();
              fieldvalues_.addAll(other.fieldvalues_);
            }
            onChanged();
          }
        } else {
          if (!other.fieldvalues_.isEmpty()) {
            if (fieldvaluesBuilder_.isEmpty()) {
              fieldvaluesBuilder_.dispose();
              fieldvaluesBuilder_ = null;
              fieldvalues_ = other.fieldvalues_;
              bitField0_ = (bitField0_ & ~0x00000040);
              fieldvaluesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFieldvaluesFieldBuilder() : null;
            } else {
              fieldvaluesBuilder_.addAllMessages(other.fieldvalues_);
            }
          }
        }
        if (other.hasFieldactualchange()) {
          setFieldactualchange(other.getFieldactualchange());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasSecondsintoyear()) {
          
          return false;
        }
        if (!hasNano()) {
          
          return false;
        }
        if (!hasVal()) {
          
          return false;
        }
        for (int i = 0; i < getFieldvaluesCount(); i++) {
          if (!getFieldvalues(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              secondsintoyear_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              nano_ = input.readUInt32();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              val_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              severity_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              status_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              repeatcount_ = input.readUInt32();
              break;
            }
            case 58: {
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder subBuilder = edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addFieldvalues(subBuilder.buildPartial());
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              fieldactualchange_ = input.readBool();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required uint32 secondsintoyear = 1;
      private int secondsintoyear_ ;
      public boolean hasSecondsintoyear() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getSecondsintoyear() {
        return secondsintoyear_;
      }
      public Builder setSecondsintoyear(int value) {
        bitField0_ |= 0x00000001;
        secondsintoyear_ = value;
        onChanged();
        return this;
      }
      public Builder clearSecondsintoyear() {
        bitField0_ = (bitField0_ & ~0x00000001);
        secondsintoyear_ = 0;
        onChanged();
        return this;
      }
      
      // required uint32 nano = 2;
      private int nano_ ;
      public boolean hasNano() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getNano() {
        return nano_;
      }
      public Builder setNano(int value) {
        bitField0_ |= 0x00000002;
        nano_ = value;
        onChanged();
        return this;
      }
      public Builder clearNano() {
        bitField0_ = (bitField0_ & ~0x00000002);
        nano_ = 0;
        onChanged();
        return this;
      }
      
      // required bytes val = 3;
      private com.google.protobuf.ByteString val_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasVal() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public com.google.protobuf.ByteString getVal() {
        return val_;
      }
      public Builder setVal(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        val_ = value;
        onChanged();
        return this;
      }
      public Builder clearVal() {
        bitField0_ = (bitField0_ & ~0x00000004);
        val_ = getDefaultInstance().getVal();
        onChanged();
        return this;
      }
      
      // optional int32 severity = 4 [default = 0];
      private int severity_ ;
      public boolean hasSeverity() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getSeverity() {
        return severity_;
      }
      public Builder setSeverity(int value) {
        bitField0_ |= 0x00000008;
        severity_ = value;
        onChanged();
        return this;
      }
      public Builder clearSeverity() {
        bitField0_ = (bitField0_ & ~0x00000008);
        severity_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 status = 5 [default = 0];
      private int status_ ;
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getStatus() {
        return status_;
      }
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000010;
        status_ = value;
        onChanged();
        return this;
      }
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000010);
        status_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 repeatcount = 6;
      private int repeatcount_ ;
      public boolean hasRepeatcount() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getRepeatcount() {
        return repeatcount_;
      }
      public Builder setRepeatcount(int value) {
        bitField0_ |= 0x00000020;
        repeatcount_ = value;
        onChanged();
        return this;
      }
      public Builder clearRepeatcount() {
        bitField0_ = (bitField0_ & ~0x00000020);
        repeatcount_ = 0;
        onChanged();
        return this;
      }
      
      // repeated .EPICS.FieldValue fieldvalues = 7;
      private java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> fieldvalues_ =
        java.util.Collections.emptyList();
      private void ensureFieldvaluesIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          fieldvalues_ = new java.util.ArrayList<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue>(fieldvalues_);
          bitField0_ |= 0x00000040;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> fieldvaluesBuilder_;
      
      public java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> getFieldvaluesList() {
        if (fieldvaluesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fieldvalues_);
        } else {
          return fieldvaluesBuilder_.getMessageList();
        }
      }
      public int getFieldvaluesCount() {
        if (fieldvaluesBuilder_ == null) {
          return fieldvalues_.size();
        } else {
          return fieldvaluesBuilder_.getCount();
        }
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue getFieldvalues(int index) {
        if (fieldvaluesBuilder_ == null) {
          return fieldvalues_.get(index);
        } else {
          return fieldvaluesBuilder_.getMessage(index);
        }
      }
      public Builder setFieldvalues(
          int index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue value) {
        if (fieldvaluesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldvaluesIsMutable();
          fieldvalues_.set(index, value);
          onChanged();
        } else {
          fieldvaluesBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setFieldvalues(
          int index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder builderForValue) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          fieldvalues_.set(index, builderForValue.build());
          onChanged();
        } else {
          fieldvaluesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addFieldvalues(edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue value) {
        if (fieldvaluesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldvaluesIsMutable();
          fieldvalues_.add(value);
          onChanged();
        } else {
          fieldvaluesBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addFieldvalues(
          int index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue value) {
        if (fieldvaluesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldvaluesIsMutable();
          fieldvalues_.add(index, value);
          onChanged();
        } else {
          fieldvaluesBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addFieldvalues(
          edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder builderForValue) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          fieldvalues_.add(builderForValue.build());
          onChanged();
        } else {
          fieldvaluesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addFieldvalues(
          int index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder builderForValue) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          fieldvalues_.add(index, builderForValue.build());
          onChanged();
        } else {
          fieldvaluesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllFieldvalues(
          java.lang.Iterable<? extends edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> values) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          super.addAll(values, fieldvalues_);
          onChanged();
        } else {
          fieldvaluesBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearFieldvalues() {
        if (fieldvaluesBuilder_ == null) {
          fieldvalues_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          fieldvaluesBuilder_.clear();
        }
        return this;
      }
      public Builder removeFieldvalues(int index) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          fieldvalues_.remove(index);
          onChanged();
        } else {
          fieldvaluesBuilder_.remove(index);
        }
        return this;
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder getFieldvaluesBuilder(
          int index) {
        return getFieldvaluesFieldBuilder().getBuilder(index);
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder getFieldvaluesOrBuilder(
          int index) {
        if (fieldvaluesBuilder_ == null) {
          return fieldvalues_.get(index);  } else {
          return fieldvaluesBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> 
           getFieldvaluesOrBuilderList() {
        if (fieldvaluesBuilder_ != null) {
          return fieldvaluesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fieldvalues_);
        }
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder addFieldvaluesBuilder() {
        return getFieldvaluesFieldBuilder().addBuilder(
            edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.getDefaultInstance());
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder addFieldvaluesBuilder(
          int index) {
        return getFieldvaluesFieldBuilder().addBuilder(
            index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.getDefaultInstance());
      }
      public java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder> 
           getFieldvaluesBuilderList() {
        return getFieldvaluesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> 
          getFieldvaluesFieldBuilder() {
        if (fieldvaluesBuilder_ == null) {
          fieldvaluesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder>(
                  fieldvalues_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          fieldvalues_ = null;
        }
        return fieldvaluesBuilder_;
      }
      
      // optional bool fieldactualchange = 8;
      private boolean fieldactualchange_ ;
      public boolean hasFieldactualchange() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public boolean getFieldactualchange() {
        return fieldactualchange_;
      }
      public Builder setFieldactualchange(boolean value) {
        bitField0_ |= 0x00000080;
        fieldactualchange_ = value;
        onChanged();
        return this;
      }
      public Builder clearFieldactualchange() {
        bitField0_ = (bitField0_ & ~0x00000080);
        fieldactualchange_ = false;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:EPICS.VectorChar)
    }
    
    static {
      defaultInstance = new VectorChar(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:EPICS.VectorChar)
  }
  
  public interface VectorShortOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required uint32 secondsintoyear = 1;
    boolean hasSecondsintoyear();
    int getSecondsintoyear();
    
    // required uint32 nano = 2;
    boolean hasNano();
    int getNano();
    
    // repeated sint32 val = 3 [packed = true];
    java.util.List<java.lang.Integer> getValList();
    int getValCount();
    int getVal(int index);
    
    // optional int32 severity = 4 [default = 0];
    boolean hasSeverity();
    int getSeverity();
    
    // optional int32 status = 5 [default = 0];
    boolean hasStatus();
    int getStatus();
    
    // optional uint32 repeatcount = 6;
    boolean hasRepeatcount();
    int getRepeatcount();
    
    // repeated .EPICS.FieldValue fieldvalues = 7;
    java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> 
        getFieldvaluesList();
    edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue getFieldvalues(int index);
    int getFieldvaluesCount();
    java.util.List<? extends edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> 
        getFieldvaluesOrBuilderList();
    edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder getFieldvaluesOrBuilder(
        int index);
    
    // optional bool fieldactualchange = 8;
    boolean hasFieldactualchange();
    boolean getFieldactualchange();
  }
  public static final class VectorShort extends
      com.google.protobuf.GeneratedMessage
      implements VectorShortOrBuilder {
    // Use VectorShort.newBuilder() to construct.
    private VectorShort(Builder builder) {
      super(builder);
    }
    private VectorShort(boolean noInit) {}
    
    private static final VectorShort defaultInstance;
    public static VectorShort getDefaultInstance() {
      return defaultInstance;
    }
    
    public VectorShort getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_VectorShort_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_VectorShort_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required uint32 secondsintoyear = 1;
    public static final int SECONDSINTOYEAR_FIELD_NUMBER = 1;
    private int secondsintoyear_;
    public boolean hasSecondsintoyear() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getSecondsintoyear() {
      return secondsintoyear_;
    }
    
    // required uint32 nano = 2;
    public static final int NANO_FIELD_NUMBER = 2;
    private int nano_;
    public boolean hasNano() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getNano() {
      return nano_;
    }
    
    // repeated sint32 val = 3 [packed = true];
    public static final int VAL_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> val_;
    public java.util.List<java.lang.Integer>
        getValList() {
      return val_;
    }
    public int getValCount() {
      return val_.size();
    }
    public int getVal(int index) {
      return val_.get(index);
    }
    private int valMemoizedSerializedSize = -1;
    
    // optional int32 severity = 4 [default = 0];
    public static final int SEVERITY_FIELD_NUMBER = 4;
    private int severity_;
    public boolean hasSeverity() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getSeverity() {
      return severity_;
    }
    
    // optional int32 status = 5 [default = 0];
    public static final int STATUS_FIELD_NUMBER = 5;
    private int status_;
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getStatus() {
      return status_;
    }
    
    // optional uint32 repeatcount = 6;
    public static final int REPEATCOUNT_FIELD_NUMBER = 6;
    private int repeatcount_;
    public boolean hasRepeatcount() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getRepeatcount() {
      return repeatcount_;
    }
    
    // repeated .EPICS.FieldValue fieldvalues = 7;
    public static final int FIELDVALUES_FIELD_NUMBER = 7;
    private java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> fieldvalues_;
    public java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> getFieldvaluesList() {
      return fieldvalues_;
    }
    public java.util.List<? extends edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> 
        getFieldvaluesOrBuilderList() {
      return fieldvalues_;
    }
    public int getFieldvaluesCount() {
      return fieldvalues_.size();
    }
    public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue getFieldvalues(int index) {
      return fieldvalues_.get(index);
    }
    public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder getFieldvaluesOrBuilder(
        int index) {
      return fieldvalues_.get(index);
    }
    
    // optional bool fieldactualchange = 8;
    public static final int FIELDACTUALCHANGE_FIELD_NUMBER = 8;
    private boolean fieldactualchange_;
    public boolean hasFieldactualchange() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public boolean getFieldactualchange() {
      return fieldactualchange_;
    }
    
    private void initFields() {
      secondsintoyear_ = 0;
      nano_ = 0;
      val_ = java.util.Collections.emptyList();
      severity_ = 0;
      status_ = 0;
      repeatcount_ = 0;
      fieldvalues_ = java.util.Collections.emptyList();
      fieldactualchange_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasSecondsintoyear()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNano()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getFieldvaluesCount(); i++) {
        if (!getFieldvalues(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, secondsintoyear_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, nano_);
      }
      if (getValList().size() > 0) {
        output.writeRawVarint32(26);
        output.writeRawVarint32(valMemoizedSerializedSize);
      }
      for (int i = 0; i < val_.size(); i++) {
        output.writeSInt32NoTag(val_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(4, severity_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(5, status_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(6, repeatcount_);
      }
      for (int i = 0; i < fieldvalues_.size(); i++) {
        output.writeMessage(7, fieldvalues_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(8, fieldactualchange_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, secondsintoyear_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, nano_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < val_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt32SizeNoTag(val_.get(i));
        }
        size += dataSize;
        if (!getValList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        valMemoizedSerializedSize = dataSize;
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, severity_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, status_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, repeatcount_);
      }
      for (int i = 0; i < fieldvalues_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, fieldvalues_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, fieldactualchange_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorShort parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorShort parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorShort parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorShort parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorShort parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorShort parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorShort parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorShort parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorShort parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorShort parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorShort prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorShortOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_VectorShort_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_VectorShort_fieldAccessorTable;
      }
      
      // Construct using edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorShort.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFieldvaluesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        secondsintoyear_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        nano_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        val_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        severity_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        repeatcount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        if (fieldvaluesBuilder_ == null) {
          fieldvalues_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          fieldvaluesBuilder_.clear();
        }
        fieldactualchange_ = false;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorShort.getDescriptor();
      }
      
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorShort getDefaultInstanceForType() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorShort.getDefaultInstance();
      }
      
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorShort build() {
        edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorShort result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorShort buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorShort result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorShort buildPartial() {
        edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorShort result = new edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorShort(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.secondsintoyear_ = secondsintoyear_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.nano_ = nano_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          val_ = java.util.Collections.unmodifiableList(val_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.val_ = val_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.severity_ = severity_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.repeatcount_ = repeatcount_;
        if (fieldvaluesBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            fieldvalues_ = java.util.Collections.unmodifiableList(fieldvalues_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.fieldvalues_ = fieldvalues_;
        } else {
          result.fieldvalues_ = fieldvaluesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000020;
        }
        result.fieldactualchange_ = fieldactualchange_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorShort) {
          return mergeFrom((edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorShort)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorShort other) {
        if (other == edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorShort.getDefaultInstance()) return this;
        if (other.hasSecondsintoyear()) {
          setSecondsintoyear(other.getSecondsintoyear());
        }
        if (other.hasNano()) {
          setNano(other.getNano());
        }
        if (!other.val_.isEmpty()) {
          if (val_.isEmpty()) {
            val_ = other.val_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureValIsMutable();
            val_.addAll(other.val_);
          }
          onChanged();
        }
        if (other.hasSeverity()) {
          setSeverity(other.getSeverity());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasRepeatcount()) {
          setRepeatcount(other.getRepeatcount());
        }
        if (fieldvaluesBuilder_ == null) {
          if (!other.fieldvalues_.isEmpty()) {
            if (fieldvalues_.isEmpty()) {
              fieldvalues_ = other.fieldvalues_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureFieldvaluesIsMutable();
              fieldvalues_.addAll(other.fieldvalues_);
            }
            onChanged();
          }
        } else {
          if (!other.fieldvalues_.isEmpty()) {
            if (fieldvaluesBuilder_.isEmpty()) {
              fieldvaluesBuilder_.dispose();
              fieldvaluesBuilder_ = null;
              fieldvalues_ = other.fieldvalues_;
              bitField0_ = (bitField0_ & ~0x00000040);
              fieldvaluesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFieldvaluesFieldBuilder() : null;
            } else {
              fieldvaluesBuilder_.addAllMessages(other.fieldvalues_);
            }
          }
        }
        if (other.hasFieldactualchange()) {
          setFieldactualchange(other.getFieldactualchange());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasSecondsintoyear()) {
          
          return false;
        }
        if (!hasNano()) {
          
          return false;
        }
        for (int i = 0; i < getFieldvaluesCount(); i++) {
          if (!getFieldvalues(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              secondsintoyear_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              nano_ = input.readUInt32();
              break;
            }
            case 24: {
              ensureValIsMutable();
              val_.add(input.readSInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addVal(input.readSInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              severity_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              status_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              repeatcount_ = input.readUInt32();
              break;
            }
            case 58: {
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder subBuilder = edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addFieldvalues(subBuilder.buildPartial());
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              fieldactualchange_ = input.readBool();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required uint32 secondsintoyear = 1;
      private int secondsintoyear_ ;
      public boolean hasSecondsintoyear() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getSecondsintoyear() {
        return secondsintoyear_;
      }
      public Builder setSecondsintoyear(int value) {
        bitField0_ |= 0x00000001;
        secondsintoyear_ = value;
        onChanged();
        return this;
      }
      public Builder clearSecondsintoyear() {
        bitField0_ = (bitField0_ & ~0x00000001);
        secondsintoyear_ = 0;
        onChanged();
        return this;
      }
      
      // required uint32 nano = 2;
      private int nano_ ;
      public boolean hasNano() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getNano() {
        return nano_;
      }
      public Builder setNano(int value) {
        bitField0_ |= 0x00000002;
        nano_ = value;
        onChanged();
        return this;
      }
      public Builder clearNano() {
        bitField0_ = (bitField0_ & ~0x00000002);
        nano_ = 0;
        onChanged();
        return this;
      }
      
      // repeated sint32 val = 3 [packed = true];
      private java.util.List<java.lang.Integer> val_ = java.util.Collections.emptyList();
      private void ensureValIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          val_ = new java.util.ArrayList<java.lang.Integer>(val_);
          bitField0_ |= 0x00000004;
         }
      }
      public java.util.List<java.lang.Integer>
          getValList() {
        return java.util.Collections.unmodifiableList(val_);
      }
      public int getValCount() {
        return val_.size();
      }
      public int getVal(int index) {
        return val_.get(index);
      }
      public Builder setVal(
          int index, int value) {
        ensureValIsMutable();
        val_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addVal(int value) {
        ensureValIsMutable();
        val_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllVal(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureValIsMutable();
        super.addAll(values, val_);
        onChanged();
        return this;
      }
      public Builder clearVal() {
        val_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      
      // optional int32 severity = 4 [default = 0];
      private int severity_ ;
      public boolean hasSeverity() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getSeverity() {
        return severity_;
      }
      public Builder setSeverity(int value) {
        bitField0_ |= 0x00000008;
        severity_ = value;
        onChanged();
        return this;
      }
      public Builder clearSeverity() {
        bitField0_ = (bitField0_ & ~0x00000008);
        severity_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 status = 5 [default = 0];
      private int status_ ;
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getStatus() {
        return status_;
      }
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000010;
        status_ = value;
        onChanged();
        return this;
      }
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000010);
        status_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 repeatcount = 6;
      private int repeatcount_ ;
      public boolean hasRepeatcount() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getRepeatcount() {
        return repeatcount_;
      }
      public Builder setRepeatcount(int value) {
        bitField0_ |= 0x00000020;
        repeatcount_ = value;
        onChanged();
        return this;
      }
      public Builder clearRepeatcount() {
        bitField0_ = (bitField0_ & ~0x00000020);
        repeatcount_ = 0;
        onChanged();
        return this;
      }
      
      // repeated .EPICS.FieldValue fieldvalues = 7;
      private java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> fieldvalues_ =
        java.util.Collections.emptyList();
      private void ensureFieldvaluesIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          fieldvalues_ = new java.util.ArrayList<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue>(fieldvalues_);
          bitField0_ |= 0x00000040;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> fieldvaluesBuilder_;
      
      public java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> getFieldvaluesList() {
        if (fieldvaluesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fieldvalues_);
        } else {
          return fieldvaluesBuilder_.getMessageList();
        }
      }
      public int getFieldvaluesCount() {
        if (fieldvaluesBuilder_ == null) {
          return fieldvalues_.size();
        } else {
          return fieldvaluesBuilder_.getCount();
        }
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue getFieldvalues(int index) {
        if (fieldvaluesBuilder_ == null) {
          return fieldvalues_.get(index);
        } else {
          return fieldvaluesBuilder_.getMessage(index);
        }
      }
      public Builder setFieldvalues(
          int index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue value) {
        if (fieldvaluesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldvaluesIsMutable();
          fieldvalues_.set(index, value);
          onChanged();
        } else {
          fieldvaluesBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setFieldvalues(
          int index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder builderForValue) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          fieldvalues_.set(index, builderForValue.build());
          onChanged();
        } else {
          fieldvaluesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addFieldvalues(edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue value) {
        if (fieldvaluesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldvaluesIsMutable();
          fieldvalues_.add(value);
          onChanged();
        } else {
          fieldvaluesBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addFieldvalues(
          int index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue value) {
        if (fieldvaluesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldvaluesIsMutable();
          fieldvalues_.add(index, value);
          onChanged();
        } else {
          fieldvaluesBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addFieldvalues(
          edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder builderForValue) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          fieldvalues_.add(builderForValue.build());
          onChanged();
        } else {
          fieldvaluesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addFieldvalues(
          int index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder builderForValue) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          fieldvalues_.add(index, builderForValue.build());
          onChanged();
        } else {
          fieldvaluesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllFieldvalues(
          java.lang.Iterable<? extends edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> values) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          super.addAll(values, fieldvalues_);
          onChanged();
        } else {
          fieldvaluesBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearFieldvalues() {
        if (fieldvaluesBuilder_ == null) {
          fieldvalues_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          fieldvaluesBuilder_.clear();
        }
        return this;
      }
      public Builder removeFieldvalues(int index) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          fieldvalues_.remove(index);
          onChanged();
        } else {
          fieldvaluesBuilder_.remove(index);
        }
        return this;
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder getFieldvaluesBuilder(
          int index) {
        return getFieldvaluesFieldBuilder().getBuilder(index);
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder getFieldvaluesOrBuilder(
          int index) {
        if (fieldvaluesBuilder_ == null) {
          return fieldvalues_.get(index);  } else {
          return fieldvaluesBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> 
           getFieldvaluesOrBuilderList() {
        if (fieldvaluesBuilder_ != null) {
          return fieldvaluesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fieldvalues_);
        }
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder addFieldvaluesBuilder() {
        return getFieldvaluesFieldBuilder().addBuilder(
            edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.getDefaultInstance());
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder addFieldvaluesBuilder(
          int index) {
        return getFieldvaluesFieldBuilder().addBuilder(
            index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.getDefaultInstance());
      }
      public java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder> 
           getFieldvaluesBuilderList() {
        return getFieldvaluesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> 
          getFieldvaluesFieldBuilder() {
        if (fieldvaluesBuilder_ == null) {
          fieldvaluesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder>(
                  fieldvalues_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          fieldvalues_ = null;
        }
        return fieldvaluesBuilder_;
      }
      
      // optional bool fieldactualchange = 8;
      private boolean fieldactualchange_ ;
      public boolean hasFieldactualchange() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public boolean getFieldactualchange() {
        return fieldactualchange_;
      }
      public Builder setFieldactualchange(boolean value) {
        bitField0_ |= 0x00000080;
        fieldactualchange_ = value;
        onChanged();
        return this;
      }
      public Builder clearFieldactualchange() {
        bitField0_ = (bitField0_ & ~0x00000080);
        fieldactualchange_ = false;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:EPICS.VectorShort)
    }
    
    static {
      defaultInstance = new VectorShort(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:EPICS.VectorShort)
  }
  
  public interface VectorIntOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required uint32 secondsintoyear = 1;
    boolean hasSecondsintoyear();
    int getSecondsintoyear();
    
    // required uint32 nano = 2;
    boolean hasNano();
    int getNano();
    
    // repeated sfixed32 val = 3 [packed = true];
    java.util.List<java.lang.Integer> getValList();
    int getValCount();
    int getVal(int index);
    
    // optional int32 severity = 4 [default = 0];
    boolean hasSeverity();
    int getSeverity();
    
    // optional int32 status = 5 [default = 0];
    boolean hasStatus();
    int getStatus();
    
    // optional uint32 repeatcount = 6;
    boolean hasRepeatcount();
    int getRepeatcount();
    
    // repeated .EPICS.FieldValue fieldvalues = 7;
    java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> 
        getFieldvaluesList();
    edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue getFieldvalues(int index);
    int getFieldvaluesCount();
    java.util.List<? extends edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> 
        getFieldvaluesOrBuilderList();
    edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder getFieldvaluesOrBuilder(
        int index);
    
    // optional bool fieldactualchange = 8;
    boolean hasFieldactualchange();
    boolean getFieldactualchange();
  }
  public static final class VectorInt extends
      com.google.protobuf.GeneratedMessage
      implements VectorIntOrBuilder {
    // Use VectorInt.newBuilder() to construct.
    private VectorInt(Builder builder) {
      super(builder);
    }
    private VectorInt(boolean noInit) {}
    
    private static final VectorInt defaultInstance;
    public static VectorInt getDefaultInstance() {
      return defaultInstance;
    }
    
    public VectorInt getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_VectorInt_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_VectorInt_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required uint32 secondsintoyear = 1;
    public static final int SECONDSINTOYEAR_FIELD_NUMBER = 1;
    private int secondsintoyear_;
    public boolean hasSecondsintoyear() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getSecondsintoyear() {
      return secondsintoyear_;
    }
    
    // required uint32 nano = 2;
    public static final int NANO_FIELD_NUMBER = 2;
    private int nano_;
    public boolean hasNano() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getNano() {
      return nano_;
    }
    
    // repeated sfixed32 val = 3 [packed = true];
    public static final int VAL_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> val_;
    public java.util.List<java.lang.Integer>
        getValList() {
      return val_;
    }
    public int getValCount() {
      return val_.size();
    }
    public int getVal(int index) {
      return val_.get(index);
    }
    private int valMemoizedSerializedSize = -1;
    
    // optional int32 severity = 4 [default = 0];
    public static final int SEVERITY_FIELD_NUMBER = 4;
    private int severity_;
    public boolean hasSeverity() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getSeverity() {
      return severity_;
    }
    
    // optional int32 status = 5 [default = 0];
    public static final int STATUS_FIELD_NUMBER = 5;
    private int status_;
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getStatus() {
      return status_;
    }
    
    // optional uint32 repeatcount = 6;
    public static final int REPEATCOUNT_FIELD_NUMBER = 6;
    private int repeatcount_;
    public boolean hasRepeatcount() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getRepeatcount() {
      return repeatcount_;
    }
    
    // repeated .EPICS.FieldValue fieldvalues = 7;
    public static final int FIELDVALUES_FIELD_NUMBER = 7;
    private java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> fieldvalues_;
    public java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> getFieldvaluesList() {
      return fieldvalues_;
    }
    public java.util.List<? extends edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> 
        getFieldvaluesOrBuilderList() {
      return fieldvalues_;
    }
    public int getFieldvaluesCount() {
      return fieldvalues_.size();
    }
    public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue getFieldvalues(int index) {
      return fieldvalues_.get(index);
    }
    public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder getFieldvaluesOrBuilder(
        int index) {
      return fieldvalues_.get(index);
    }
    
    // optional bool fieldactualchange = 8;
    public static final int FIELDACTUALCHANGE_FIELD_NUMBER = 8;
    private boolean fieldactualchange_;
    public boolean hasFieldactualchange() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public boolean getFieldactualchange() {
      return fieldactualchange_;
    }
    
    private void initFields() {
      secondsintoyear_ = 0;
      nano_ = 0;
      val_ = java.util.Collections.emptyList();
      severity_ = 0;
      status_ = 0;
      repeatcount_ = 0;
      fieldvalues_ = java.util.Collections.emptyList();
      fieldactualchange_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasSecondsintoyear()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNano()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getFieldvaluesCount(); i++) {
        if (!getFieldvalues(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, secondsintoyear_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, nano_);
      }
      if (getValList().size() > 0) {
        output.writeRawVarint32(26);
        output.writeRawVarint32(valMemoizedSerializedSize);
      }
      for (int i = 0; i < val_.size(); i++) {
        output.writeSFixed32NoTag(val_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(4, severity_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(5, status_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(6, repeatcount_);
      }
      for (int i = 0; i < fieldvalues_.size(); i++) {
        output.writeMessage(7, fieldvalues_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(8, fieldactualchange_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, secondsintoyear_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, nano_);
      }
      {
        int dataSize = 0;
        dataSize = 4 * getValList().size();
        size += dataSize;
        if (!getValList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        valMemoizedSerializedSize = dataSize;
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, severity_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, status_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, repeatcount_);
      }
      for (int i = 0; i < fieldvalues_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, fieldvalues_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, fieldactualchange_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorInt parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorInt parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorInt parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorInt parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorInt parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorInt parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorInt parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorInt parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorInt parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorInt parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorInt prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorIntOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_VectorInt_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_VectorInt_fieldAccessorTable;
      }
      
      // Construct using edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorInt.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFieldvaluesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        secondsintoyear_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        nano_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        val_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        severity_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        repeatcount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        if (fieldvaluesBuilder_ == null) {
          fieldvalues_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          fieldvaluesBuilder_.clear();
        }
        fieldactualchange_ = false;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorInt.getDescriptor();
      }
      
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorInt getDefaultInstanceForType() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorInt.getDefaultInstance();
      }
      
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorInt build() {
        edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorInt result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorInt buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorInt result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorInt buildPartial() {
        edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorInt result = new edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorInt(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.secondsintoyear_ = secondsintoyear_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.nano_ = nano_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          val_ = java.util.Collections.unmodifiableList(val_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.val_ = val_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.severity_ = severity_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.repeatcount_ = repeatcount_;
        if (fieldvaluesBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            fieldvalues_ = java.util.Collections.unmodifiableList(fieldvalues_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.fieldvalues_ = fieldvalues_;
        } else {
          result.fieldvalues_ = fieldvaluesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000020;
        }
        result.fieldactualchange_ = fieldactualchange_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorInt) {
          return mergeFrom((edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorInt)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorInt other) {
        if (other == edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorInt.getDefaultInstance()) return this;
        if (other.hasSecondsintoyear()) {
          setSecondsintoyear(other.getSecondsintoyear());
        }
        if (other.hasNano()) {
          setNano(other.getNano());
        }
        if (!other.val_.isEmpty()) {
          if (val_.isEmpty()) {
            val_ = other.val_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureValIsMutable();
            val_.addAll(other.val_);
          }
          onChanged();
        }
        if (other.hasSeverity()) {
          setSeverity(other.getSeverity());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasRepeatcount()) {
          setRepeatcount(other.getRepeatcount());
        }
        if (fieldvaluesBuilder_ == null) {
          if (!other.fieldvalues_.isEmpty()) {
            if (fieldvalues_.isEmpty()) {
              fieldvalues_ = other.fieldvalues_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureFieldvaluesIsMutable();
              fieldvalues_.addAll(other.fieldvalues_);
            }
            onChanged();
          }
        } else {
          if (!other.fieldvalues_.isEmpty()) {
            if (fieldvaluesBuilder_.isEmpty()) {
              fieldvaluesBuilder_.dispose();
              fieldvaluesBuilder_ = null;
              fieldvalues_ = other.fieldvalues_;
              bitField0_ = (bitField0_ & ~0x00000040);
              fieldvaluesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFieldvaluesFieldBuilder() : null;
            } else {
              fieldvaluesBuilder_.addAllMessages(other.fieldvalues_);
            }
          }
        }
        if (other.hasFieldactualchange()) {
          setFieldactualchange(other.getFieldactualchange());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasSecondsintoyear()) {
          
          return false;
        }
        if (!hasNano()) {
          
          return false;
        }
        for (int i = 0; i < getFieldvaluesCount(); i++) {
          if (!getFieldvalues(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              secondsintoyear_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              nano_ = input.readUInt32();
              break;
            }
            case 29: {
              ensureValIsMutable();
              val_.add(input.readSFixed32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addVal(input.readSFixed32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              severity_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              status_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              repeatcount_ = input.readUInt32();
              break;
            }
            case 58: {
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder subBuilder = edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addFieldvalues(subBuilder.buildPartial());
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              fieldactualchange_ = input.readBool();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required uint32 secondsintoyear = 1;
      private int secondsintoyear_ ;
      public boolean hasSecondsintoyear() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getSecondsintoyear() {
        return secondsintoyear_;
      }
      public Builder setSecondsintoyear(int value) {
        bitField0_ |= 0x00000001;
        secondsintoyear_ = value;
        onChanged();
        return this;
      }
      public Builder clearSecondsintoyear() {
        bitField0_ = (bitField0_ & ~0x00000001);
        secondsintoyear_ = 0;
        onChanged();
        return this;
      }
      
      // required uint32 nano = 2;
      private int nano_ ;
      public boolean hasNano() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getNano() {
        return nano_;
      }
      public Builder setNano(int value) {
        bitField0_ |= 0x00000002;
        nano_ = value;
        onChanged();
        return this;
      }
      public Builder clearNano() {
        bitField0_ = (bitField0_ & ~0x00000002);
        nano_ = 0;
        onChanged();
        return this;
      }
      
      // repeated sfixed32 val = 3 [packed = true];
      private java.util.List<java.lang.Integer> val_ = java.util.Collections.emptyList();
      private void ensureValIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          val_ = new java.util.ArrayList<java.lang.Integer>(val_);
          bitField0_ |= 0x00000004;
         }
      }
      public java.util.List<java.lang.Integer>
          getValList() {
        return java.util.Collections.unmodifiableList(val_);
      }
      public int getValCount() {
        return val_.size();
      }
      public int getVal(int index) {
        return val_.get(index);
      }
      public Builder setVal(
          int index, int value) {
        ensureValIsMutable();
        val_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addVal(int value) {
        ensureValIsMutable();
        val_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllVal(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureValIsMutable();
        super.addAll(values, val_);
        onChanged();
        return this;
      }
      public Builder clearVal() {
        val_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      
      // optional int32 severity = 4 [default = 0];
      private int severity_ ;
      public boolean hasSeverity() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getSeverity() {
        return severity_;
      }
      public Builder setSeverity(int value) {
        bitField0_ |= 0x00000008;
        severity_ = value;
        onChanged();
        return this;
      }
      public Builder clearSeverity() {
        bitField0_ = (bitField0_ & ~0x00000008);
        severity_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 status = 5 [default = 0];
      private int status_ ;
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getStatus() {
        return status_;
      }
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000010;
        status_ = value;
        onChanged();
        return this;
      }
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000010);
        status_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 repeatcount = 6;
      private int repeatcount_ ;
      public boolean hasRepeatcount() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getRepeatcount() {
        return repeatcount_;
      }
      public Builder setRepeatcount(int value) {
        bitField0_ |= 0x00000020;
        repeatcount_ = value;
        onChanged();
        return this;
      }
      public Builder clearRepeatcount() {
        bitField0_ = (bitField0_ & ~0x00000020);
        repeatcount_ = 0;
        onChanged();
        return this;
      }
      
      // repeated .EPICS.FieldValue fieldvalues = 7;
      private java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> fieldvalues_ =
        java.util.Collections.emptyList();
      private void ensureFieldvaluesIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          fieldvalues_ = new java.util.ArrayList<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue>(fieldvalues_);
          bitField0_ |= 0x00000040;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> fieldvaluesBuilder_;
      
      public java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> getFieldvaluesList() {
        if (fieldvaluesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fieldvalues_);
        } else {
          return fieldvaluesBuilder_.getMessageList();
        }
      }
      public int getFieldvaluesCount() {
        if (fieldvaluesBuilder_ == null) {
          return fieldvalues_.size();
        } else {
          return fieldvaluesBuilder_.getCount();
        }
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue getFieldvalues(int index) {
        if (fieldvaluesBuilder_ == null) {
          return fieldvalues_.get(index);
        } else {
          return fieldvaluesBuilder_.getMessage(index);
        }
      }
      public Builder setFieldvalues(
          int index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue value) {
        if (fieldvaluesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldvaluesIsMutable();
          fieldvalues_.set(index, value);
          onChanged();
        } else {
          fieldvaluesBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setFieldvalues(
          int index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder builderForValue) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          fieldvalues_.set(index, builderForValue.build());
          onChanged();
        } else {
          fieldvaluesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addFieldvalues(edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue value) {
        if (fieldvaluesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldvaluesIsMutable();
          fieldvalues_.add(value);
          onChanged();
        } else {
          fieldvaluesBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addFieldvalues(
          int index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue value) {
        if (fieldvaluesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldvaluesIsMutable();
          fieldvalues_.add(index, value);
          onChanged();
        } else {
          fieldvaluesBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addFieldvalues(
          edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder builderForValue) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          fieldvalues_.add(builderForValue.build());
          onChanged();
        } else {
          fieldvaluesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addFieldvalues(
          int index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder builderForValue) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          fieldvalues_.add(index, builderForValue.build());
          onChanged();
        } else {
          fieldvaluesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllFieldvalues(
          java.lang.Iterable<? extends edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> values) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          super.addAll(values, fieldvalues_);
          onChanged();
        } else {
          fieldvaluesBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearFieldvalues() {
        if (fieldvaluesBuilder_ == null) {
          fieldvalues_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          fieldvaluesBuilder_.clear();
        }
        return this;
      }
      public Builder removeFieldvalues(int index) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          fieldvalues_.remove(index);
          onChanged();
        } else {
          fieldvaluesBuilder_.remove(index);
        }
        return this;
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder getFieldvaluesBuilder(
          int index) {
        return getFieldvaluesFieldBuilder().getBuilder(index);
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder getFieldvaluesOrBuilder(
          int index) {
        if (fieldvaluesBuilder_ == null) {
          return fieldvalues_.get(index);  } else {
          return fieldvaluesBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> 
           getFieldvaluesOrBuilderList() {
        if (fieldvaluesBuilder_ != null) {
          return fieldvaluesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fieldvalues_);
        }
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder addFieldvaluesBuilder() {
        return getFieldvaluesFieldBuilder().addBuilder(
            edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.getDefaultInstance());
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder addFieldvaluesBuilder(
          int index) {
        return getFieldvaluesFieldBuilder().addBuilder(
            index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.getDefaultInstance());
      }
      public java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder> 
           getFieldvaluesBuilderList() {
        return getFieldvaluesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> 
          getFieldvaluesFieldBuilder() {
        if (fieldvaluesBuilder_ == null) {
          fieldvaluesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder>(
                  fieldvalues_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          fieldvalues_ = null;
        }
        return fieldvaluesBuilder_;
      }
      
      // optional bool fieldactualchange = 8;
      private boolean fieldactualchange_ ;
      public boolean hasFieldactualchange() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public boolean getFieldactualchange() {
        return fieldactualchange_;
      }
      public Builder setFieldactualchange(boolean value) {
        bitField0_ |= 0x00000080;
        fieldactualchange_ = value;
        onChanged();
        return this;
      }
      public Builder clearFieldactualchange() {
        bitField0_ = (bitField0_ & ~0x00000080);
        fieldactualchange_ = false;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:EPICS.VectorInt)
    }
    
    static {
      defaultInstance = new VectorInt(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:EPICS.VectorInt)
  }
  
  public interface VectorEnumOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required uint32 secondsintoyear = 1;
    boolean hasSecondsintoyear();
    int getSecondsintoyear();
    
    // required uint32 nano = 2;
    boolean hasNano();
    int getNano();
    
    // repeated sint32 val = 3 [packed = true];
    java.util.List<java.lang.Integer> getValList();
    int getValCount();
    int getVal(int index);
    
    // optional int32 severity = 4 [default = 0];
    boolean hasSeverity();
    int getSeverity();
    
    // optional int32 status = 5 [default = 0];
    boolean hasStatus();
    int getStatus();
    
    // optional uint32 repeatcount = 6;
    boolean hasRepeatcount();
    int getRepeatcount();
    
    // repeated .EPICS.FieldValue fieldvalues = 7;
    java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> 
        getFieldvaluesList();
    edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue getFieldvalues(int index);
    int getFieldvaluesCount();
    java.util.List<? extends edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> 
        getFieldvaluesOrBuilderList();
    edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder getFieldvaluesOrBuilder(
        int index);
    
    // optional bool fieldactualchange = 8;
    boolean hasFieldactualchange();
    boolean getFieldactualchange();
  }
  public static final class VectorEnum extends
      com.google.protobuf.GeneratedMessage
      implements VectorEnumOrBuilder {
    // Use VectorEnum.newBuilder() to construct.
    private VectorEnum(Builder builder) {
      super(builder);
    }
    private VectorEnum(boolean noInit) {}
    
    private static final VectorEnum defaultInstance;
    public static VectorEnum getDefaultInstance() {
      return defaultInstance;
    }
    
    public VectorEnum getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_VectorEnum_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_VectorEnum_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required uint32 secondsintoyear = 1;
    public static final int SECONDSINTOYEAR_FIELD_NUMBER = 1;
    private int secondsintoyear_;
    public boolean hasSecondsintoyear() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getSecondsintoyear() {
      return secondsintoyear_;
    }
    
    // required uint32 nano = 2;
    public static final int NANO_FIELD_NUMBER = 2;
    private int nano_;
    public boolean hasNano() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getNano() {
      return nano_;
    }
    
    // repeated sint32 val = 3 [packed = true];
    public static final int VAL_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> val_;
    public java.util.List<java.lang.Integer>
        getValList() {
      return val_;
    }
    public int getValCount() {
      return val_.size();
    }
    public int getVal(int index) {
      return val_.get(index);
    }
    private int valMemoizedSerializedSize = -1;
    
    // optional int32 severity = 4 [default = 0];
    public static final int SEVERITY_FIELD_NUMBER = 4;
    private int severity_;
    public boolean hasSeverity() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getSeverity() {
      return severity_;
    }
    
    // optional int32 status = 5 [default = 0];
    public static final int STATUS_FIELD_NUMBER = 5;
    private int status_;
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getStatus() {
      return status_;
    }
    
    // optional uint32 repeatcount = 6;
    public static final int REPEATCOUNT_FIELD_NUMBER = 6;
    private int repeatcount_;
    public boolean hasRepeatcount() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getRepeatcount() {
      return repeatcount_;
    }
    
    // repeated .EPICS.FieldValue fieldvalues = 7;
    public static final int FIELDVALUES_FIELD_NUMBER = 7;
    private java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> fieldvalues_;
    public java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> getFieldvaluesList() {
      return fieldvalues_;
    }
    public java.util.List<? extends edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> 
        getFieldvaluesOrBuilderList() {
      return fieldvalues_;
    }
    public int getFieldvaluesCount() {
      return fieldvalues_.size();
    }
    public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue getFieldvalues(int index) {
      return fieldvalues_.get(index);
    }
    public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder getFieldvaluesOrBuilder(
        int index) {
      return fieldvalues_.get(index);
    }
    
    // optional bool fieldactualchange = 8;
    public static final int FIELDACTUALCHANGE_FIELD_NUMBER = 8;
    private boolean fieldactualchange_;
    public boolean hasFieldactualchange() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public boolean getFieldactualchange() {
      return fieldactualchange_;
    }
    
    private void initFields() {
      secondsintoyear_ = 0;
      nano_ = 0;
      val_ = java.util.Collections.emptyList();
      severity_ = 0;
      status_ = 0;
      repeatcount_ = 0;
      fieldvalues_ = java.util.Collections.emptyList();
      fieldactualchange_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasSecondsintoyear()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNano()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getFieldvaluesCount(); i++) {
        if (!getFieldvalues(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, secondsintoyear_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, nano_);
      }
      if (getValList().size() > 0) {
        output.writeRawVarint32(26);
        output.writeRawVarint32(valMemoizedSerializedSize);
      }
      for (int i = 0; i < val_.size(); i++) {
        output.writeSInt32NoTag(val_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(4, severity_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(5, status_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(6, repeatcount_);
      }
      for (int i = 0; i < fieldvalues_.size(); i++) {
        output.writeMessage(7, fieldvalues_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(8, fieldactualchange_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, secondsintoyear_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, nano_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < val_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt32SizeNoTag(val_.get(i));
        }
        size += dataSize;
        if (!getValList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        valMemoizedSerializedSize = dataSize;
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, severity_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, status_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, repeatcount_);
      }
      for (int i = 0; i < fieldvalues_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, fieldvalues_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, fieldactualchange_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorEnum parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorEnum parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorEnum parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorEnum parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorEnum parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorEnum parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorEnum parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorEnum parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorEnum parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorEnum parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorEnum prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorEnumOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_VectorEnum_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_VectorEnum_fieldAccessorTable;
      }
      
      // Construct using edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorEnum.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFieldvaluesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        secondsintoyear_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        nano_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        val_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        severity_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        repeatcount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        if (fieldvaluesBuilder_ == null) {
          fieldvalues_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          fieldvaluesBuilder_.clear();
        }
        fieldactualchange_ = false;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorEnum.getDescriptor();
      }
      
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorEnum getDefaultInstanceForType() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorEnum.getDefaultInstance();
      }
      
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorEnum build() {
        edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorEnum result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorEnum buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorEnum result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorEnum buildPartial() {
        edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorEnum result = new edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorEnum(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.secondsintoyear_ = secondsintoyear_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.nano_ = nano_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          val_ = java.util.Collections.unmodifiableList(val_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.val_ = val_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.severity_ = severity_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.repeatcount_ = repeatcount_;
        if (fieldvaluesBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            fieldvalues_ = java.util.Collections.unmodifiableList(fieldvalues_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.fieldvalues_ = fieldvalues_;
        } else {
          result.fieldvalues_ = fieldvaluesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000020;
        }
        result.fieldactualchange_ = fieldactualchange_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorEnum) {
          return mergeFrom((edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorEnum)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorEnum other) {
        if (other == edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorEnum.getDefaultInstance()) return this;
        if (other.hasSecondsintoyear()) {
          setSecondsintoyear(other.getSecondsintoyear());
        }
        if (other.hasNano()) {
          setNano(other.getNano());
        }
        if (!other.val_.isEmpty()) {
          if (val_.isEmpty()) {
            val_ = other.val_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureValIsMutable();
            val_.addAll(other.val_);
          }
          onChanged();
        }
        if (other.hasSeverity()) {
          setSeverity(other.getSeverity());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasRepeatcount()) {
          setRepeatcount(other.getRepeatcount());
        }
        if (fieldvaluesBuilder_ == null) {
          if (!other.fieldvalues_.isEmpty()) {
            if (fieldvalues_.isEmpty()) {
              fieldvalues_ = other.fieldvalues_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureFieldvaluesIsMutable();
              fieldvalues_.addAll(other.fieldvalues_);
            }
            onChanged();
          }
        } else {
          if (!other.fieldvalues_.isEmpty()) {
            if (fieldvaluesBuilder_.isEmpty()) {
              fieldvaluesBuilder_.dispose();
              fieldvaluesBuilder_ = null;
              fieldvalues_ = other.fieldvalues_;
              bitField0_ = (bitField0_ & ~0x00000040);
              fieldvaluesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFieldvaluesFieldBuilder() : null;
            } else {
              fieldvaluesBuilder_.addAllMessages(other.fieldvalues_);
            }
          }
        }
        if (other.hasFieldactualchange()) {
          setFieldactualchange(other.getFieldactualchange());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasSecondsintoyear()) {
          
          return false;
        }
        if (!hasNano()) {
          
          return false;
        }
        for (int i = 0; i < getFieldvaluesCount(); i++) {
          if (!getFieldvalues(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              secondsintoyear_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              nano_ = input.readUInt32();
              break;
            }
            case 24: {
              ensureValIsMutable();
              val_.add(input.readSInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addVal(input.readSInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              severity_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              status_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              repeatcount_ = input.readUInt32();
              break;
            }
            case 58: {
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder subBuilder = edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addFieldvalues(subBuilder.buildPartial());
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              fieldactualchange_ = input.readBool();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required uint32 secondsintoyear = 1;
      private int secondsintoyear_ ;
      public boolean hasSecondsintoyear() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getSecondsintoyear() {
        return secondsintoyear_;
      }
      public Builder setSecondsintoyear(int value) {
        bitField0_ |= 0x00000001;
        secondsintoyear_ = value;
        onChanged();
        return this;
      }
      public Builder clearSecondsintoyear() {
        bitField0_ = (bitField0_ & ~0x00000001);
        secondsintoyear_ = 0;
        onChanged();
        return this;
      }
      
      // required uint32 nano = 2;
      private int nano_ ;
      public boolean hasNano() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getNano() {
        return nano_;
      }
      public Builder setNano(int value) {
        bitField0_ |= 0x00000002;
        nano_ = value;
        onChanged();
        return this;
      }
      public Builder clearNano() {
        bitField0_ = (bitField0_ & ~0x00000002);
        nano_ = 0;
        onChanged();
        return this;
      }
      
      // repeated sint32 val = 3 [packed = true];
      private java.util.List<java.lang.Integer> val_ = java.util.Collections.emptyList();
      private void ensureValIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          val_ = new java.util.ArrayList<java.lang.Integer>(val_);
          bitField0_ |= 0x00000004;
         }
      }
      public java.util.List<java.lang.Integer>
          getValList() {
        return java.util.Collections.unmodifiableList(val_);
      }
      public int getValCount() {
        return val_.size();
      }
      public int getVal(int index) {
        return val_.get(index);
      }
      public Builder setVal(
          int index, int value) {
        ensureValIsMutable();
        val_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addVal(int value) {
        ensureValIsMutable();
        val_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllVal(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureValIsMutable();
        super.addAll(values, val_);
        onChanged();
        return this;
      }
      public Builder clearVal() {
        val_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      
      // optional int32 severity = 4 [default = 0];
      private int severity_ ;
      public boolean hasSeverity() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getSeverity() {
        return severity_;
      }
      public Builder setSeverity(int value) {
        bitField0_ |= 0x00000008;
        severity_ = value;
        onChanged();
        return this;
      }
      public Builder clearSeverity() {
        bitField0_ = (bitField0_ & ~0x00000008);
        severity_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 status = 5 [default = 0];
      private int status_ ;
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getStatus() {
        return status_;
      }
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000010;
        status_ = value;
        onChanged();
        return this;
      }
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000010);
        status_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 repeatcount = 6;
      private int repeatcount_ ;
      public boolean hasRepeatcount() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getRepeatcount() {
        return repeatcount_;
      }
      public Builder setRepeatcount(int value) {
        bitField0_ |= 0x00000020;
        repeatcount_ = value;
        onChanged();
        return this;
      }
      public Builder clearRepeatcount() {
        bitField0_ = (bitField0_ & ~0x00000020);
        repeatcount_ = 0;
        onChanged();
        return this;
      }
      
      // repeated .EPICS.FieldValue fieldvalues = 7;
      private java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> fieldvalues_ =
        java.util.Collections.emptyList();
      private void ensureFieldvaluesIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          fieldvalues_ = new java.util.ArrayList<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue>(fieldvalues_);
          bitField0_ |= 0x00000040;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> fieldvaluesBuilder_;
      
      public java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> getFieldvaluesList() {
        if (fieldvaluesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fieldvalues_);
        } else {
          return fieldvaluesBuilder_.getMessageList();
        }
      }
      public int getFieldvaluesCount() {
        if (fieldvaluesBuilder_ == null) {
          return fieldvalues_.size();
        } else {
          return fieldvaluesBuilder_.getCount();
        }
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue getFieldvalues(int index) {
        if (fieldvaluesBuilder_ == null) {
          return fieldvalues_.get(index);
        } else {
          return fieldvaluesBuilder_.getMessage(index);
        }
      }
      public Builder setFieldvalues(
          int index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue value) {
        if (fieldvaluesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldvaluesIsMutable();
          fieldvalues_.set(index, value);
          onChanged();
        } else {
          fieldvaluesBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setFieldvalues(
          int index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder builderForValue) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          fieldvalues_.set(index, builderForValue.build());
          onChanged();
        } else {
          fieldvaluesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addFieldvalues(edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue value) {
        if (fieldvaluesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldvaluesIsMutable();
          fieldvalues_.add(value);
          onChanged();
        } else {
          fieldvaluesBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addFieldvalues(
          int index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue value) {
        if (fieldvaluesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldvaluesIsMutable();
          fieldvalues_.add(index, value);
          onChanged();
        } else {
          fieldvaluesBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addFieldvalues(
          edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder builderForValue) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          fieldvalues_.add(builderForValue.build());
          onChanged();
        } else {
          fieldvaluesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addFieldvalues(
          int index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder builderForValue) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          fieldvalues_.add(index, builderForValue.build());
          onChanged();
        } else {
          fieldvaluesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllFieldvalues(
          java.lang.Iterable<? extends edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> values) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          super.addAll(values, fieldvalues_);
          onChanged();
        } else {
          fieldvaluesBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearFieldvalues() {
        if (fieldvaluesBuilder_ == null) {
          fieldvalues_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          fieldvaluesBuilder_.clear();
        }
        return this;
      }
      public Builder removeFieldvalues(int index) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          fieldvalues_.remove(index);
          onChanged();
        } else {
          fieldvaluesBuilder_.remove(index);
        }
        return this;
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder getFieldvaluesBuilder(
          int index) {
        return getFieldvaluesFieldBuilder().getBuilder(index);
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder getFieldvaluesOrBuilder(
          int index) {
        if (fieldvaluesBuilder_ == null) {
          return fieldvalues_.get(index);  } else {
          return fieldvaluesBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> 
           getFieldvaluesOrBuilderList() {
        if (fieldvaluesBuilder_ != null) {
          return fieldvaluesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fieldvalues_);
        }
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder addFieldvaluesBuilder() {
        return getFieldvaluesFieldBuilder().addBuilder(
            edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.getDefaultInstance());
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder addFieldvaluesBuilder(
          int index) {
        return getFieldvaluesFieldBuilder().addBuilder(
            index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.getDefaultInstance());
      }
      public java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder> 
           getFieldvaluesBuilderList() {
        return getFieldvaluesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> 
          getFieldvaluesFieldBuilder() {
        if (fieldvaluesBuilder_ == null) {
          fieldvaluesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder>(
                  fieldvalues_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          fieldvalues_ = null;
        }
        return fieldvaluesBuilder_;
      }
      
      // optional bool fieldactualchange = 8;
      private boolean fieldactualchange_ ;
      public boolean hasFieldactualchange() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public boolean getFieldactualchange() {
        return fieldactualchange_;
      }
      public Builder setFieldactualchange(boolean value) {
        bitField0_ |= 0x00000080;
        fieldactualchange_ = value;
        onChanged();
        return this;
      }
      public Builder clearFieldactualchange() {
        bitField0_ = (bitField0_ & ~0x00000080);
        fieldactualchange_ = false;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:EPICS.VectorEnum)
    }
    
    static {
      defaultInstance = new VectorEnum(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:EPICS.VectorEnum)
  }
  
  public interface VectorFloatOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required uint32 secondsintoyear = 1;
    boolean hasSecondsintoyear();
    int getSecondsintoyear();
    
    // required uint32 nano = 2;
    boolean hasNano();
    int getNano();
    
    // repeated float val = 3 [packed = true];
    java.util.List<java.lang.Float> getValList();
    int getValCount();
    float getVal(int index);
    
    // optional int32 severity = 4 [default = 0];
    boolean hasSeverity();
    int getSeverity();
    
    // optional int32 status = 5 [default = 0];
    boolean hasStatus();
    int getStatus();
    
    // optional uint32 repeatcount = 6;
    boolean hasRepeatcount();
    int getRepeatcount();
    
    // repeated .EPICS.FieldValue fieldvalues = 7;
    java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> 
        getFieldvaluesList();
    edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue getFieldvalues(int index);
    int getFieldvaluesCount();
    java.util.List<? extends edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> 
        getFieldvaluesOrBuilderList();
    edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder getFieldvaluesOrBuilder(
        int index);
    
    // optional bool fieldactualchange = 8;
    boolean hasFieldactualchange();
    boolean getFieldactualchange();
  }
  public static final class VectorFloat extends
      com.google.protobuf.GeneratedMessage
      implements VectorFloatOrBuilder {
    // Use VectorFloat.newBuilder() to construct.
    private VectorFloat(Builder builder) {
      super(builder);
    }
    private VectorFloat(boolean noInit) {}
    
    private static final VectorFloat defaultInstance;
    public static VectorFloat getDefaultInstance() {
      return defaultInstance;
    }
    
    public VectorFloat getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_VectorFloat_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_VectorFloat_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required uint32 secondsintoyear = 1;
    public static final int SECONDSINTOYEAR_FIELD_NUMBER = 1;
    private int secondsintoyear_;
    public boolean hasSecondsintoyear() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getSecondsintoyear() {
      return secondsintoyear_;
    }
    
    // required uint32 nano = 2;
    public static final int NANO_FIELD_NUMBER = 2;
    private int nano_;
    public boolean hasNano() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getNano() {
      return nano_;
    }
    
    // repeated float val = 3 [packed = true];
    public static final int VAL_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Float> val_;
    public java.util.List<java.lang.Float>
        getValList() {
      return val_;
    }
    public int getValCount() {
      return val_.size();
    }
    public float getVal(int index) {
      return val_.get(index);
    }
    private int valMemoizedSerializedSize = -1;
    
    // optional int32 severity = 4 [default = 0];
    public static final int SEVERITY_FIELD_NUMBER = 4;
    private int severity_;
    public boolean hasSeverity() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getSeverity() {
      return severity_;
    }
    
    // optional int32 status = 5 [default = 0];
    public static final int STATUS_FIELD_NUMBER = 5;
    private int status_;
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getStatus() {
      return status_;
    }
    
    // optional uint32 repeatcount = 6;
    public static final int REPEATCOUNT_FIELD_NUMBER = 6;
    private int repeatcount_;
    public boolean hasRepeatcount() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getRepeatcount() {
      return repeatcount_;
    }
    
    // repeated .EPICS.FieldValue fieldvalues = 7;
    public static final int FIELDVALUES_FIELD_NUMBER = 7;
    private java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> fieldvalues_;
    public java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> getFieldvaluesList() {
      return fieldvalues_;
    }
    public java.util.List<? extends edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> 
        getFieldvaluesOrBuilderList() {
      return fieldvalues_;
    }
    public int getFieldvaluesCount() {
      return fieldvalues_.size();
    }
    public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue getFieldvalues(int index) {
      return fieldvalues_.get(index);
    }
    public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder getFieldvaluesOrBuilder(
        int index) {
      return fieldvalues_.get(index);
    }
    
    // optional bool fieldactualchange = 8;
    public static final int FIELDACTUALCHANGE_FIELD_NUMBER = 8;
    private boolean fieldactualchange_;
    public boolean hasFieldactualchange() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public boolean getFieldactualchange() {
      return fieldactualchange_;
    }
    
    private void initFields() {
      secondsintoyear_ = 0;
      nano_ = 0;
      val_ = java.util.Collections.emptyList();
      severity_ = 0;
      status_ = 0;
      repeatcount_ = 0;
      fieldvalues_ = java.util.Collections.emptyList();
      fieldactualchange_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasSecondsintoyear()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNano()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getFieldvaluesCount(); i++) {
        if (!getFieldvalues(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, secondsintoyear_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, nano_);
      }
      if (getValList().size() > 0) {
        output.writeRawVarint32(26);
        output.writeRawVarint32(valMemoizedSerializedSize);
      }
      for (int i = 0; i < val_.size(); i++) {
        output.writeFloatNoTag(val_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(4, severity_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(5, status_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(6, repeatcount_);
      }
      for (int i = 0; i < fieldvalues_.size(); i++) {
        output.writeMessage(7, fieldvalues_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(8, fieldactualchange_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, secondsintoyear_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, nano_);
      }
      {
        int dataSize = 0;
        dataSize = 4 * getValList().size();
        size += dataSize;
        if (!getValList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        valMemoizedSerializedSize = dataSize;
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, severity_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, status_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, repeatcount_);
      }
      for (int i = 0; i < fieldvalues_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, fieldvalues_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, fieldactualchange_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorFloat parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorFloat parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorFloat parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorFloat parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorFloat parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorFloat parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorFloat parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorFloat parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorFloat parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorFloat parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorFloat prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorFloatOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_VectorFloat_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_VectorFloat_fieldAccessorTable;
      }
      
      // Construct using edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorFloat.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFieldvaluesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        secondsintoyear_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        nano_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        val_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        severity_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        repeatcount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        if (fieldvaluesBuilder_ == null) {
          fieldvalues_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          fieldvaluesBuilder_.clear();
        }
        fieldactualchange_ = false;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorFloat.getDescriptor();
      }
      
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorFloat getDefaultInstanceForType() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorFloat.getDefaultInstance();
      }
      
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorFloat build() {
        edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorFloat result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorFloat buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorFloat result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorFloat buildPartial() {
        edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorFloat result = new edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorFloat(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.secondsintoyear_ = secondsintoyear_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.nano_ = nano_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          val_ = java.util.Collections.unmodifiableList(val_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.val_ = val_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.severity_ = severity_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.repeatcount_ = repeatcount_;
        if (fieldvaluesBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            fieldvalues_ = java.util.Collections.unmodifiableList(fieldvalues_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.fieldvalues_ = fieldvalues_;
        } else {
          result.fieldvalues_ = fieldvaluesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000020;
        }
        result.fieldactualchange_ = fieldactualchange_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorFloat) {
          return mergeFrom((edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorFloat)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorFloat other) {
        if (other == edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorFloat.getDefaultInstance()) return this;
        if (other.hasSecondsintoyear()) {
          setSecondsintoyear(other.getSecondsintoyear());
        }
        if (other.hasNano()) {
          setNano(other.getNano());
        }
        if (!other.val_.isEmpty()) {
          if (val_.isEmpty()) {
            val_ = other.val_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureValIsMutable();
            val_.addAll(other.val_);
          }
          onChanged();
        }
        if (other.hasSeverity()) {
          setSeverity(other.getSeverity());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasRepeatcount()) {
          setRepeatcount(other.getRepeatcount());
        }
        if (fieldvaluesBuilder_ == null) {
          if (!other.fieldvalues_.isEmpty()) {
            if (fieldvalues_.isEmpty()) {
              fieldvalues_ = other.fieldvalues_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureFieldvaluesIsMutable();
              fieldvalues_.addAll(other.fieldvalues_);
            }
            onChanged();
          }
        } else {
          if (!other.fieldvalues_.isEmpty()) {
            if (fieldvaluesBuilder_.isEmpty()) {
              fieldvaluesBuilder_.dispose();
              fieldvaluesBuilder_ = null;
              fieldvalues_ = other.fieldvalues_;
              bitField0_ = (bitField0_ & ~0x00000040);
              fieldvaluesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFieldvaluesFieldBuilder() : null;
            } else {
              fieldvaluesBuilder_.addAllMessages(other.fieldvalues_);
            }
          }
        }
        if (other.hasFieldactualchange()) {
          setFieldactualchange(other.getFieldactualchange());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasSecondsintoyear()) {
          
          return false;
        }
        if (!hasNano()) {
          
          return false;
        }
        for (int i = 0; i < getFieldvaluesCount(); i++) {
          if (!getFieldvalues(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              secondsintoyear_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              nano_ = input.readUInt32();
              break;
            }
            case 29: {
              ensureValIsMutable();
              val_.add(input.readFloat());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addVal(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              severity_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              status_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              repeatcount_ = input.readUInt32();
              break;
            }
            case 58: {
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder subBuilder = edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addFieldvalues(subBuilder.buildPartial());
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              fieldactualchange_ = input.readBool();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required uint32 secondsintoyear = 1;
      private int secondsintoyear_ ;
      public boolean hasSecondsintoyear() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getSecondsintoyear() {
        return secondsintoyear_;
      }
      public Builder setSecondsintoyear(int value) {
        bitField0_ |= 0x00000001;
        secondsintoyear_ = value;
        onChanged();
        return this;
      }
      public Builder clearSecondsintoyear() {
        bitField0_ = (bitField0_ & ~0x00000001);
        secondsintoyear_ = 0;
        onChanged();
        return this;
      }
      
      // required uint32 nano = 2;
      private int nano_ ;
      public boolean hasNano() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getNano() {
        return nano_;
      }
      public Builder setNano(int value) {
        bitField0_ |= 0x00000002;
        nano_ = value;
        onChanged();
        return this;
      }
      public Builder clearNano() {
        bitField0_ = (bitField0_ & ~0x00000002);
        nano_ = 0;
        onChanged();
        return this;
      }
      
      // repeated float val = 3 [packed = true];
      private java.util.List<java.lang.Float> val_ = java.util.Collections.emptyList();
      private void ensureValIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          val_ = new java.util.ArrayList<java.lang.Float>(val_);
          bitField0_ |= 0x00000004;
         }
      }
      public java.util.List<java.lang.Float>
          getValList() {
        return java.util.Collections.unmodifiableList(val_);
      }
      public int getValCount() {
        return val_.size();
      }
      public float getVal(int index) {
        return val_.get(index);
      }
      public Builder setVal(
          int index, float value) {
        ensureValIsMutable();
        val_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addVal(float value) {
        ensureValIsMutable();
        val_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllVal(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureValIsMutable();
        super.addAll(values, val_);
        onChanged();
        return this;
      }
      public Builder clearVal() {
        val_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      
      // optional int32 severity = 4 [default = 0];
      private int severity_ ;
      public boolean hasSeverity() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getSeverity() {
        return severity_;
      }
      public Builder setSeverity(int value) {
        bitField0_ |= 0x00000008;
        severity_ = value;
        onChanged();
        return this;
      }
      public Builder clearSeverity() {
        bitField0_ = (bitField0_ & ~0x00000008);
        severity_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 status = 5 [default = 0];
      private int status_ ;
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getStatus() {
        return status_;
      }
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000010;
        status_ = value;
        onChanged();
        return this;
      }
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000010);
        status_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 repeatcount = 6;
      private int repeatcount_ ;
      public boolean hasRepeatcount() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getRepeatcount() {
        return repeatcount_;
      }
      public Builder setRepeatcount(int value) {
        bitField0_ |= 0x00000020;
        repeatcount_ = value;
        onChanged();
        return this;
      }
      public Builder clearRepeatcount() {
        bitField0_ = (bitField0_ & ~0x00000020);
        repeatcount_ = 0;
        onChanged();
        return this;
      }
      
      // repeated .EPICS.FieldValue fieldvalues = 7;
      private java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> fieldvalues_ =
        java.util.Collections.emptyList();
      private void ensureFieldvaluesIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          fieldvalues_ = new java.util.ArrayList<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue>(fieldvalues_);
          bitField0_ |= 0x00000040;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> fieldvaluesBuilder_;
      
      public java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> getFieldvaluesList() {
        if (fieldvaluesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fieldvalues_);
        } else {
          return fieldvaluesBuilder_.getMessageList();
        }
      }
      public int getFieldvaluesCount() {
        if (fieldvaluesBuilder_ == null) {
          return fieldvalues_.size();
        } else {
          return fieldvaluesBuilder_.getCount();
        }
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue getFieldvalues(int index) {
        if (fieldvaluesBuilder_ == null) {
          return fieldvalues_.get(index);
        } else {
          return fieldvaluesBuilder_.getMessage(index);
        }
      }
      public Builder setFieldvalues(
          int index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue value) {
        if (fieldvaluesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldvaluesIsMutable();
          fieldvalues_.set(index, value);
          onChanged();
        } else {
          fieldvaluesBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setFieldvalues(
          int index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder builderForValue) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          fieldvalues_.set(index, builderForValue.build());
          onChanged();
        } else {
          fieldvaluesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addFieldvalues(edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue value) {
        if (fieldvaluesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldvaluesIsMutable();
          fieldvalues_.add(value);
          onChanged();
        } else {
          fieldvaluesBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addFieldvalues(
          int index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue value) {
        if (fieldvaluesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldvaluesIsMutable();
          fieldvalues_.add(index, value);
          onChanged();
        } else {
          fieldvaluesBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addFieldvalues(
          edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder builderForValue) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          fieldvalues_.add(builderForValue.build());
          onChanged();
        } else {
          fieldvaluesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addFieldvalues(
          int index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder builderForValue) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          fieldvalues_.add(index, builderForValue.build());
          onChanged();
        } else {
          fieldvaluesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllFieldvalues(
          java.lang.Iterable<? extends edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> values) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          super.addAll(values, fieldvalues_);
          onChanged();
        } else {
          fieldvaluesBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearFieldvalues() {
        if (fieldvaluesBuilder_ == null) {
          fieldvalues_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          fieldvaluesBuilder_.clear();
        }
        return this;
      }
      public Builder removeFieldvalues(int index) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          fieldvalues_.remove(index);
          onChanged();
        } else {
          fieldvaluesBuilder_.remove(index);
        }
        return this;
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder getFieldvaluesBuilder(
          int index) {
        return getFieldvaluesFieldBuilder().getBuilder(index);
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder getFieldvaluesOrBuilder(
          int index) {
        if (fieldvaluesBuilder_ == null) {
          return fieldvalues_.get(index);  } else {
          return fieldvaluesBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> 
           getFieldvaluesOrBuilderList() {
        if (fieldvaluesBuilder_ != null) {
          return fieldvaluesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fieldvalues_);
        }
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder addFieldvaluesBuilder() {
        return getFieldvaluesFieldBuilder().addBuilder(
            edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.getDefaultInstance());
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder addFieldvaluesBuilder(
          int index) {
        return getFieldvaluesFieldBuilder().addBuilder(
            index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.getDefaultInstance());
      }
      public java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder> 
           getFieldvaluesBuilderList() {
        return getFieldvaluesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> 
          getFieldvaluesFieldBuilder() {
        if (fieldvaluesBuilder_ == null) {
          fieldvaluesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder>(
                  fieldvalues_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          fieldvalues_ = null;
        }
        return fieldvaluesBuilder_;
      }
      
      // optional bool fieldactualchange = 8;
      private boolean fieldactualchange_ ;
      public boolean hasFieldactualchange() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public boolean getFieldactualchange() {
        return fieldactualchange_;
      }
      public Builder setFieldactualchange(boolean value) {
        bitField0_ |= 0x00000080;
        fieldactualchange_ = value;
        onChanged();
        return this;
      }
      public Builder clearFieldactualchange() {
        bitField0_ = (bitField0_ & ~0x00000080);
        fieldactualchange_ = false;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:EPICS.VectorFloat)
    }
    
    static {
      defaultInstance = new VectorFloat(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:EPICS.VectorFloat)
  }
  
  public interface VectorDoubleOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required uint32 secondsintoyear = 1;
    boolean hasSecondsintoyear();
    int getSecondsintoyear();
    
    // required uint32 nano = 2;
    boolean hasNano();
    int getNano();
    
    // repeated double val = 3 [packed = true];
    java.util.List<java.lang.Double> getValList();
    int getValCount();
    double getVal(int index);
    
    // optional int32 severity = 4 [default = 0];
    boolean hasSeverity();
    int getSeverity();
    
    // optional int32 status = 5 [default = 0];
    boolean hasStatus();
    int getStatus();
    
    // optional uint32 repeatcount = 6;
    boolean hasRepeatcount();
    int getRepeatcount();
    
    // repeated .EPICS.FieldValue fieldvalues = 7;
    java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> 
        getFieldvaluesList();
    edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue getFieldvalues(int index);
    int getFieldvaluesCount();
    java.util.List<? extends edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> 
        getFieldvaluesOrBuilderList();
    edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder getFieldvaluesOrBuilder(
        int index);
    
    // optional bool fieldactualchange = 8;
    boolean hasFieldactualchange();
    boolean getFieldactualchange();
  }
  public static final class VectorDouble extends
      com.google.protobuf.GeneratedMessage
      implements VectorDoubleOrBuilder {
    // Use VectorDouble.newBuilder() to construct.
    private VectorDouble(Builder builder) {
      super(builder);
    }
    private VectorDouble(boolean noInit) {}
    
    private static final VectorDouble defaultInstance;
    public static VectorDouble getDefaultInstance() {
      return defaultInstance;
    }
    
    public VectorDouble getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_VectorDouble_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_VectorDouble_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required uint32 secondsintoyear = 1;
    public static final int SECONDSINTOYEAR_FIELD_NUMBER = 1;
    private int secondsintoyear_;
    public boolean hasSecondsintoyear() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getSecondsintoyear() {
      return secondsintoyear_;
    }
    
    // required uint32 nano = 2;
    public static final int NANO_FIELD_NUMBER = 2;
    private int nano_;
    public boolean hasNano() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getNano() {
      return nano_;
    }
    
    // repeated double val = 3 [packed = true];
    public static final int VAL_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Double> val_;
    public java.util.List<java.lang.Double>
        getValList() {
      return val_;
    }
    public int getValCount() {
      return val_.size();
    }
    public double getVal(int index) {
      return val_.get(index);
    }
    private int valMemoizedSerializedSize = -1;
    
    // optional int32 severity = 4 [default = 0];
    public static final int SEVERITY_FIELD_NUMBER = 4;
    private int severity_;
    public boolean hasSeverity() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getSeverity() {
      return severity_;
    }
    
    // optional int32 status = 5 [default = 0];
    public static final int STATUS_FIELD_NUMBER = 5;
    private int status_;
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getStatus() {
      return status_;
    }
    
    // optional uint32 repeatcount = 6;
    public static final int REPEATCOUNT_FIELD_NUMBER = 6;
    private int repeatcount_;
    public boolean hasRepeatcount() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getRepeatcount() {
      return repeatcount_;
    }
    
    // repeated .EPICS.FieldValue fieldvalues = 7;
    public static final int FIELDVALUES_FIELD_NUMBER = 7;
    private java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> fieldvalues_;
    public java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> getFieldvaluesList() {
      return fieldvalues_;
    }
    public java.util.List<? extends edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> 
        getFieldvaluesOrBuilderList() {
      return fieldvalues_;
    }
    public int getFieldvaluesCount() {
      return fieldvalues_.size();
    }
    public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue getFieldvalues(int index) {
      return fieldvalues_.get(index);
    }
    public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder getFieldvaluesOrBuilder(
        int index) {
      return fieldvalues_.get(index);
    }
    
    // optional bool fieldactualchange = 8;
    public static final int FIELDACTUALCHANGE_FIELD_NUMBER = 8;
    private boolean fieldactualchange_;
    public boolean hasFieldactualchange() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public boolean getFieldactualchange() {
      return fieldactualchange_;
    }
    
    private void initFields() {
      secondsintoyear_ = 0;
      nano_ = 0;
      val_ = java.util.Collections.emptyList();
      severity_ = 0;
      status_ = 0;
      repeatcount_ = 0;
      fieldvalues_ = java.util.Collections.emptyList();
      fieldactualchange_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasSecondsintoyear()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNano()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getFieldvaluesCount(); i++) {
        if (!getFieldvalues(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, secondsintoyear_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, nano_);
      }
      if (getValList().size() > 0) {
        output.writeRawVarint32(26);
        output.writeRawVarint32(valMemoizedSerializedSize);
      }
      for (int i = 0; i < val_.size(); i++) {
        output.writeDoubleNoTag(val_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(4, severity_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(5, status_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(6, repeatcount_);
      }
      for (int i = 0; i < fieldvalues_.size(); i++) {
        output.writeMessage(7, fieldvalues_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(8, fieldactualchange_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, secondsintoyear_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, nano_);
      }
      {
        int dataSize = 0;
        dataSize = 8 * getValList().size();
        size += dataSize;
        if (!getValList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        valMemoizedSerializedSize = dataSize;
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, severity_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, status_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, repeatcount_);
      }
      for (int i = 0; i < fieldvalues_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, fieldvalues_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, fieldactualchange_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorDouble parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorDouble parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorDouble parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorDouble parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorDouble parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorDouble parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorDouble parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorDouble parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorDouble parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorDouble parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorDouble prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorDoubleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_VectorDouble_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_VectorDouble_fieldAccessorTable;
      }
      
      // Construct using edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorDouble.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFieldvaluesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        secondsintoyear_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        nano_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        val_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        severity_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        repeatcount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        if (fieldvaluesBuilder_ == null) {
          fieldvalues_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          fieldvaluesBuilder_.clear();
        }
        fieldactualchange_ = false;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorDouble.getDescriptor();
      }
      
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorDouble getDefaultInstanceForType() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorDouble.getDefaultInstance();
      }
      
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorDouble build() {
        edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorDouble result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorDouble buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorDouble result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorDouble buildPartial() {
        edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorDouble result = new edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorDouble(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.secondsintoyear_ = secondsintoyear_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.nano_ = nano_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          val_ = java.util.Collections.unmodifiableList(val_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.val_ = val_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.severity_ = severity_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.repeatcount_ = repeatcount_;
        if (fieldvaluesBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            fieldvalues_ = java.util.Collections.unmodifiableList(fieldvalues_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.fieldvalues_ = fieldvalues_;
        } else {
          result.fieldvalues_ = fieldvaluesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000020;
        }
        result.fieldactualchange_ = fieldactualchange_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorDouble) {
          return mergeFrom((edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorDouble)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorDouble other) {
        if (other == edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorDouble.getDefaultInstance()) return this;
        if (other.hasSecondsintoyear()) {
          setSecondsintoyear(other.getSecondsintoyear());
        }
        if (other.hasNano()) {
          setNano(other.getNano());
        }
        if (!other.val_.isEmpty()) {
          if (val_.isEmpty()) {
            val_ = other.val_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureValIsMutable();
            val_.addAll(other.val_);
          }
          onChanged();
        }
        if (other.hasSeverity()) {
          setSeverity(other.getSeverity());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasRepeatcount()) {
          setRepeatcount(other.getRepeatcount());
        }
        if (fieldvaluesBuilder_ == null) {
          if (!other.fieldvalues_.isEmpty()) {
            if (fieldvalues_.isEmpty()) {
              fieldvalues_ = other.fieldvalues_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureFieldvaluesIsMutable();
              fieldvalues_.addAll(other.fieldvalues_);
            }
            onChanged();
          }
        } else {
          if (!other.fieldvalues_.isEmpty()) {
            if (fieldvaluesBuilder_.isEmpty()) {
              fieldvaluesBuilder_.dispose();
              fieldvaluesBuilder_ = null;
              fieldvalues_ = other.fieldvalues_;
              bitField0_ = (bitField0_ & ~0x00000040);
              fieldvaluesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFieldvaluesFieldBuilder() : null;
            } else {
              fieldvaluesBuilder_.addAllMessages(other.fieldvalues_);
            }
          }
        }
        if (other.hasFieldactualchange()) {
          setFieldactualchange(other.getFieldactualchange());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasSecondsintoyear()) {
          
          return false;
        }
        if (!hasNano()) {
          
          return false;
        }
        for (int i = 0; i < getFieldvaluesCount(); i++) {
          if (!getFieldvalues(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              secondsintoyear_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              nano_ = input.readUInt32();
              break;
            }
            case 25: {
              ensureValIsMutable();
              val_.add(input.readDouble());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addVal(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              severity_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              status_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              repeatcount_ = input.readUInt32();
              break;
            }
            case 58: {
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder subBuilder = edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addFieldvalues(subBuilder.buildPartial());
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              fieldactualchange_ = input.readBool();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required uint32 secondsintoyear = 1;
      private int secondsintoyear_ ;
      public boolean hasSecondsintoyear() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getSecondsintoyear() {
        return secondsintoyear_;
      }
      public Builder setSecondsintoyear(int value) {
        bitField0_ |= 0x00000001;
        secondsintoyear_ = value;
        onChanged();
        return this;
      }
      public Builder clearSecondsintoyear() {
        bitField0_ = (bitField0_ & ~0x00000001);
        secondsintoyear_ = 0;
        onChanged();
        return this;
      }
      
      // required uint32 nano = 2;
      private int nano_ ;
      public boolean hasNano() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getNano() {
        return nano_;
      }
      public Builder setNano(int value) {
        bitField0_ |= 0x00000002;
        nano_ = value;
        onChanged();
        return this;
      }
      public Builder clearNano() {
        bitField0_ = (bitField0_ & ~0x00000002);
        nano_ = 0;
        onChanged();
        return this;
      }
      
      // repeated double val = 3 [packed = true];
      private java.util.List<java.lang.Double> val_ = java.util.Collections.emptyList();
      private void ensureValIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          val_ = new java.util.ArrayList<java.lang.Double>(val_);
          bitField0_ |= 0x00000004;
         }
      }
      public java.util.List<java.lang.Double>
          getValList() {
        return java.util.Collections.unmodifiableList(val_);
      }
      public int getValCount() {
        return val_.size();
      }
      public double getVal(int index) {
        return val_.get(index);
      }
      public Builder setVal(
          int index, double value) {
        ensureValIsMutable();
        val_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addVal(double value) {
        ensureValIsMutable();
        val_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllVal(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureValIsMutable();
        super.addAll(values, val_);
        onChanged();
        return this;
      }
      public Builder clearVal() {
        val_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      
      // optional int32 severity = 4 [default = 0];
      private int severity_ ;
      public boolean hasSeverity() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getSeverity() {
        return severity_;
      }
      public Builder setSeverity(int value) {
        bitField0_ |= 0x00000008;
        severity_ = value;
        onChanged();
        return this;
      }
      public Builder clearSeverity() {
        bitField0_ = (bitField0_ & ~0x00000008);
        severity_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 status = 5 [default = 0];
      private int status_ ;
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getStatus() {
        return status_;
      }
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000010;
        status_ = value;
        onChanged();
        return this;
      }
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000010);
        status_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 repeatcount = 6;
      private int repeatcount_ ;
      public boolean hasRepeatcount() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getRepeatcount() {
        return repeatcount_;
      }
      public Builder setRepeatcount(int value) {
        bitField0_ |= 0x00000020;
        repeatcount_ = value;
        onChanged();
        return this;
      }
      public Builder clearRepeatcount() {
        bitField0_ = (bitField0_ & ~0x00000020);
        repeatcount_ = 0;
        onChanged();
        return this;
      }
      
      // repeated .EPICS.FieldValue fieldvalues = 7;
      private java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> fieldvalues_ =
        java.util.Collections.emptyList();
      private void ensureFieldvaluesIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          fieldvalues_ = new java.util.ArrayList<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue>(fieldvalues_);
          bitField0_ |= 0x00000040;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> fieldvaluesBuilder_;
      
      public java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> getFieldvaluesList() {
        if (fieldvaluesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fieldvalues_);
        } else {
          return fieldvaluesBuilder_.getMessageList();
        }
      }
      public int getFieldvaluesCount() {
        if (fieldvaluesBuilder_ == null) {
          return fieldvalues_.size();
        } else {
          return fieldvaluesBuilder_.getCount();
        }
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue getFieldvalues(int index) {
        if (fieldvaluesBuilder_ == null) {
          return fieldvalues_.get(index);
        } else {
          return fieldvaluesBuilder_.getMessage(index);
        }
      }
      public Builder setFieldvalues(
          int index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue value) {
        if (fieldvaluesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldvaluesIsMutable();
          fieldvalues_.set(index, value);
          onChanged();
        } else {
          fieldvaluesBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setFieldvalues(
          int index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder builderForValue) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          fieldvalues_.set(index, builderForValue.build());
          onChanged();
        } else {
          fieldvaluesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addFieldvalues(edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue value) {
        if (fieldvaluesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldvaluesIsMutable();
          fieldvalues_.add(value);
          onChanged();
        } else {
          fieldvaluesBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addFieldvalues(
          int index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue value) {
        if (fieldvaluesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldvaluesIsMutable();
          fieldvalues_.add(index, value);
          onChanged();
        } else {
          fieldvaluesBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addFieldvalues(
          edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder builderForValue) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          fieldvalues_.add(builderForValue.build());
          onChanged();
        } else {
          fieldvaluesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addFieldvalues(
          int index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder builderForValue) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          fieldvalues_.add(index, builderForValue.build());
          onChanged();
        } else {
          fieldvaluesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllFieldvalues(
          java.lang.Iterable<? extends edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> values) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          super.addAll(values, fieldvalues_);
          onChanged();
        } else {
          fieldvaluesBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearFieldvalues() {
        if (fieldvaluesBuilder_ == null) {
          fieldvalues_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          fieldvaluesBuilder_.clear();
        }
        return this;
      }
      public Builder removeFieldvalues(int index) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          fieldvalues_.remove(index);
          onChanged();
        } else {
          fieldvaluesBuilder_.remove(index);
        }
        return this;
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder getFieldvaluesBuilder(
          int index) {
        return getFieldvaluesFieldBuilder().getBuilder(index);
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder getFieldvaluesOrBuilder(
          int index) {
        if (fieldvaluesBuilder_ == null) {
          return fieldvalues_.get(index);  } else {
          return fieldvaluesBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> 
           getFieldvaluesOrBuilderList() {
        if (fieldvaluesBuilder_ != null) {
          return fieldvaluesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fieldvalues_);
        }
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder addFieldvaluesBuilder() {
        return getFieldvaluesFieldBuilder().addBuilder(
            edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.getDefaultInstance());
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder addFieldvaluesBuilder(
          int index) {
        return getFieldvaluesFieldBuilder().addBuilder(
            index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.getDefaultInstance());
      }
      public java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder> 
           getFieldvaluesBuilderList() {
        return getFieldvaluesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> 
          getFieldvaluesFieldBuilder() {
        if (fieldvaluesBuilder_ == null) {
          fieldvaluesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder>(
                  fieldvalues_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          fieldvalues_ = null;
        }
        return fieldvaluesBuilder_;
      }
      
      // optional bool fieldactualchange = 8;
      private boolean fieldactualchange_ ;
      public boolean hasFieldactualchange() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public boolean getFieldactualchange() {
        return fieldactualchange_;
      }
      public Builder setFieldactualchange(boolean value) {
        bitField0_ |= 0x00000080;
        fieldactualchange_ = value;
        onChanged();
        return this;
      }
      public Builder clearFieldactualchange() {
        bitField0_ = (bitField0_ & ~0x00000080);
        fieldactualchange_ = false;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:EPICS.VectorDouble)
    }
    
    static {
      defaultInstance = new VectorDouble(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:EPICS.VectorDouble)
  }
  
  public interface V4GenericBytesOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required uint32 secondsintoyear = 1;
    boolean hasSecondsintoyear();
    int getSecondsintoyear();
    
    // required uint32 nano = 2;
    boolean hasNano();
    int getNano();
    
    // required bytes val = 3;
    boolean hasVal();
    com.google.protobuf.ByteString getVal();
    
    // optional int32 severity = 4 [default = 0];
    boolean hasSeverity();
    int getSeverity();
    
    // optional int32 status = 5 [default = 0];
    boolean hasStatus();
    int getStatus();
    
    // optional uint32 repeatcount = 6;
    boolean hasRepeatcount();
    int getRepeatcount();
    
    // repeated .EPICS.FieldValue fieldvalues = 7;
    java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> 
        getFieldvaluesList();
    edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue getFieldvalues(int index);
    int getFieldvaluesCount();
    java.util.List<? extends edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> 
        getFieldvaluesOrBuilderList();
    edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder getFieldvaluesOrBuilder(
        int index);
    
    // optional bool fieldactualchange = 8;
    boolean hasFieldactualchange();
    boolean getFieldactualchange();
    
    // optional uint32 userTag = 9;
    boolean hasUserTag();
    int getUserTag();
  }
  public static final class V4GenericBytes extends
      com.google.protobuf.GeneratedMessage
      implements V4GenericBytesOrBuilder {
    // Use V4GenericBytes.newBuilder() to construct.
    private V4GenericBytes(Builder builder) {
      super(builder);
    }
    private V4GenericBytes(boolean noInit) {}
    
    private static final V4GenericBytes defaultInstance;
    public static V4GenericBytes getDefaultInstance() {
      return defaultInstance;
    }
    
    public V4GenericBytes getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_V4GenericBytes_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_V4GenericBytes_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required uint32 secondsintoyear = 1;
    public static final int SECONDSINTOYEAR_FIELD_NUMBER = 1;
    private int secondsintoyear_;
    public boolean hasSecondsintoyear() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getSecondsintoyear() {
      return secondsintoyear_;
    }
    
    // required uint32 nano = 2;
    public static final int NANO_FIELD_NUMBER = 2;
    private int nano_;
    public boolean hasNano() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getNano() {
      return nano_;
    }
    
    // required bytes val = 3;
    public static final int VAL_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString val_;
    public boolean hasVal() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public com.google.protobuf.ByteString getVal() {
      return val_;
    }
    
    // optional int32 severity = 4 [default = 0];
    public static final int SEVERITY_FIELD_NUMBER = 4;
    private int severity_;
    public boolean hasSeverity() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getSeverity() {
      return severity_;
    }
    
    // optional int32 status = 5 [default = 0];
    public static final int STATUS_FIELD_NUMBER = 5;
    private int status_;
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getStatus() {
      return status_;
    }
    
    // optional uint32 repeatcount = 6;
    public static final int REPEATCOUNT_FIELD_NUMBER = 6;
    private int repeatcount_;
    public boolean hasRepeatcount() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getRepeatcount() {
      return repeatcount_;
    }
    
    // repeated .EPICS.FieldValue fieldvalues = 7;
    public static final int FIELDVALUES_FIELD_NUMBER = 7;
    private java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> fieldvalues_;
    public java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> getFieldvaluesList() {
      return fieldvalues_;
    }
    public java.util.List<? extends edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> 
        getFieldvaluesOrBuilderList() {
      return fieldvalues_;
    }
    public int getFieldvaluesCount() {
      return fieldvalues_.size();
    }
    public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue getFieldvalues(int index) {
      return fieldvalues_.get(index);
    }
    public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder getFieldvaluesOrBuilder(
        int index) {
      return fieldvalues_.get(index);
    }
    
    // optional bool fieldactualchange = 8;
    public static final int FIELDACTUALCHANGE_FIELD_NUMBER = 8;
    private boolean fieldactualchange_;
    public boolean hasFieldactualchange() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public boolean getFieldactualchange() {
      return fieldactualchange_;
    }
    
    // optional uint32 userTag = 9;
    public static final int USERTAG_FIELD_NUMBER = 9;
    private int userTag_;
    public boolean hasUserTag() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public int getUserTag() {
      return userTag_;
    }
    
    private void initFields() {
      secondsintoyear_ = 0;
      nano_ = 0;
      val_ = com.google.protobuf.ByteString.EMPTY;
      severity_ = 0;
      status_ = 0;
      repeatcount_ = 0;
      fieldvalues_ = java.util.Collections.emptyList();
      fieldactualchange_ = false;
      userTag_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasSecondsintoyear()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNano()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVal()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getFieldvaluesCount(); i++) {
        if (!getFieldvalues(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, secondsintoyear_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, nano_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, val_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, severity_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, status_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, repeatcount_);
      }
      for (int i = 0; i < fieldvalues_.size(); i++) {
        output.writeMessage(7, fieldvalues_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(8, fieldactualchange_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt32(9, userTag_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, secondsintoyear_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, nano_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, val_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, severity_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, status_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, repeatcount_);
      }
      for (int i = 0; i < fieldvalues_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, fieldvalues_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, fieldactualchange_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, userTag_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.V4GenericBytes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.V4GenericBytes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.V4GenericBytes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.V4GenericBytes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.V4GenericBytes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.V4GenericBytes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.V4GenericBytes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.V4GenericBytes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.V4GenericBytes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.V4GenericBytes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.stanford.slac.archiverappliance.PB.EPICSEvent.V4GenericBytes prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements edu.stanford.slac.archiverappliance.PB.EPICSEvent.V4GenericBytesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_V4GenericBytes_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_V4GenericBytes_fieldAccessorTable;
      }
      
      // Construct using edu.stanford.slac.archiverappliance.PB.EPICSEvent.V4GenericBytes.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFieldvaluesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        secondsintoyear_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        nano_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        val_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        severity_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        repeatcount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        if (fieldvaluesBuilder_ == null) {
          fieldvalues_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          fieldvaluesBuilder_.clear();
        }
        fieldactualchange_ = false;
        bitField0_ = (bitField0_ & ~0x00000080);
        userTag_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.V4GenericBytes.getDescriptor();
      }
      
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.V4GenericBytes getDefaultInstanceForType() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.V4GenericBytes.getDefaultInstance();
      }
      
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.V4GenericBytes build() {
        edu.stanford.slac.archiverappliance.PB.EPICSEvent.V4GenericBytes result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private edu.stanford.slac.archiverappliance.PB.EPICSEvent.V4GenericBytes buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        edu.stanford.slac.archiverappliance.PB.EPICSEvent.V4GenericBytes result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.V4GenericBytes buildPartial() {
        edu.stanford.slac.archiverappliance.PB.EPICSEvent.V4GenericBytes result = new edu.stanford.slac.archiverappliance.PB.EPICSEvent.V4GenericBytes(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.secondsintoyear_ = secondsintoyear_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.nano_ = nano_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.val_ = val_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.severity_ = severity_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.repeatcount_ = repeatcount_;
        if (fieldvaluesBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            fieldvalues_ = java.util.Collections.unmodifiableList(fieldvalues_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.fieldvalues_ = fieldvalues_;
        } else {
          result.fieldvalues_ = fieldvaluesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.fieldactualchange_ = fieldactualchange_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000080;
        }
        result.userTag_ = userTag_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.stanford.slac.archiverappliance.PB.EPICSEvent.V4GenericBytes) {
          return mergeFrom((edu.stanford.slac.archiverappliance.PB.EPICSEvent.V4GenericBytes)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(edu.stanford.slac.archiverappliance.PB.EPICSEvent.V4GenericBytes other) {
        if (other == edu.stanford.slac.archiverappliance.PB.EPICSEvent.V4GenericBytes.getDefaultInstance()) return this;
        if (other.hasSecondsintoyear()) {
          setSecondsintoyear(other.getSecondsintoyear());
        }
        if (other.hasNano()) {
          setNano(other.getNano());
        }
        if (other.hasVal()) {
          setVal(other.getVal());
        }
        if (other.hasSeverity()) {
          setSeverity(other.getSeverity());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasRepeatcount()) {
          setRepeatcount(other.getRepeatcount());
        }
        if (fieldvaluesBuilder_ == null) {
          if (!other.fieldvalues_.isEmpty()) {
            if (fieldvalues_.isEmpty()) {
              fieldvalues_ = other.fieldvalues_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureFieldvaluesIsMutable();
              fieldvalues_.addAll(other.fieldvalues_);
            }
            onChanged();
          }
        } else {
          if (!other.fieldvalues_.isEmpty()) {
            if (fieldvaluesBuilder_.isEmpty()) {
              fieldvaluesBuilder_.dispose();
              fieldvaluesBuilder_ = null;
              fieldvalues_ = other.fieldvalues_;
              bitField0_ = (bitField0_ & ~0x00000040);
              fieldvaluesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFieldvaluesFieldBuilder() : null;
            } else {
              fieldvaluesBuilder_.addAllMessages(other.fieldvalues_);
            }
          }
        }
        if (other.hasFieldactualchange()) {
          setFieldactualchange(other.getFieldactualchange());
        }
        if (other.hasUserTag()) {
          setUserTag(other.getUserTag());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasSecondsintoyear()) {
          
          return false;
        }
        if (!hasNano()) {
          
          return false;
        }
        if (!hasVal()) {
          
          return false;
        }
        for (int i = 0; i < getFieldvaluesCount(); i++) {
          if (!getFieldvalues(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              secondsintoyear_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              nano_ = input.readUInt32();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              val_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              severity_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              status_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              repeatcount_ = input.readUInt32();
              break;
            }
            case 58: {
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder subBuilder = edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addFieldvalues(subBuilder.buildPartial());
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              fieldactualchange_ = input.readBool();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              userTag_ = input.readUInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required uint32 secondsintoyear = 1;
      private int secondsintoyear_ ;
      public boolean hasSecondsintoyear() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getSecondsintoyear() {
        return secondsintoyear_;
      }
      public Builder setSecondsintoyear(int value) {
        bitField0_ |= 0x00000001;
        secondsintoyear_ = value;
        onChanged();
        return this;
      }
      public Builder clearSecondsintoyear() {
        bitField0_ = (bitField0_ & ~0x00000001);
        secondsintoyear_ = 0;
        onChanged();
        return this;
      }
      
      // required uint32 nano = 2;
      private int nano_ ;
      public boolean hasNano() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getNano() {
        return nano_;
      }
      public Builder setNano(int value) {
        bitField0_ |= 0x00000002;
        nano_ = value;
        onChanged();
        return this;
      }
      public Builder clearNano() {
        bitField0_ = (bitField0_ & ~0x00000002);
        nano_ = 0;
        onChanged();
        return this;
      }
      
      // required bytes val = 3;
      private com.google.protobuf.ByteString val_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasVal() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public com.google.protobuf.ByteString getVal() {
        return val_;
      }
      public Builder setVal(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        val_ = value;
        onChanged();
        return this;
      }
      public Builder clearVal() {
        bitField0_ = (bitField0_ & ~0x00000004);
        val_ = getDefaultInstance().getVal();
        onChanged();
        return this;
      }
      
      // optional int32 severity = 4 [default = 0];
      private int severity_ ;
      public boolean hasSeverity() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getSeverity() {
        return severity_;
      }
      public Builder setSeverity(int value) {
        bitField0_ |= 0x00000008;
        severity_ = value;
        onChanged();
        return this;
      }
      public Builder clearSeverity() {
        bitField0_ = (bitField0_ & ~0x00000008);
        severity_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 status = 5 [default = 0];
      private int status_ ;
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getStatus() {
        return status_;
      }
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000010;
        status_ = value;
        onChanged();
        return this;
      }
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000010);
        status_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 repeatcount = 6;
      private int repeatcount_ ;
      public boolean hasRepeatcount() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getRepeatcount() {
        return repeatcount_;
      }
      public Builder setRepeatcount(int value) {
        bitField0_ |= 0x00000020;
        repeatcount_ = value;
        onChanged();
        return this;
      }
      public Builder clearRepeatcount() {
        bitField0_ = (bitField0_ & ~0x00000020);
        repeatcount_ = 0;
        onChanged();
        return this;
      }
      
      // repeated .EPICS.FieldValue fieldvalues = 7;
      private java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> fieldvalues_ =
        java.util.Collections.emptyList();
      private void ensureFieldvaluesIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          fieldvalues_ = new java.util.ArrayList<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue>(fieldvalues_);
          bitField0_ |= 0x00000040;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> fieldvaluesBuilder_;
      
      public java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> getFieldvaluesList() {
        if (fieldvaluesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fieldvalues_);
        } else {
          return fieldvaluesBuilder_.getMessageList();
        }
      }
      public int getFieldvaluesCount() {
        if (fieldvaluesBuilder_ == null) {
          return fieldvalues_.size();
        } else {
          return fieldvaluesBuilder_.getCount();
        }
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue getFieldvalues(int index) {
        if (fieldvaluesBuilder_ == null) {
          return fieldvalues_.get(index);
        } else {
          return fieldvaluesBuilder_.getMessage(index);
        }
      }
      public Builder setFieldvalues(
          int index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue value) {
        if (fieldvaluesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldvaluesIsMutable();
          fieldvalues_.set(index, value);
          onChanged();
        } else {
          fieldvaluesBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setFieldvalues(
          int index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder builderForValue) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          fieldvalues_.set(index, builderForValue.build());
          onChanged();
        } else {
          fieldvaluesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addFieldvalues(edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue value) {
        if (fieldvaluesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldvaluesIsMutable();
          fieldvalues_.add(value);
          onChanged();
        } else {
          fieldvaluesBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addFieldvalues(
          int index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue value) {
        if (fieldvaluesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldvaluesIsMutable();
          fieldvalues_.add(index, value);
          onChanged();
        } else {
          fieldvaluesBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addFieldvalues(
          edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder builderForValue) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          fieldvalues_.add(builderForValue.build());
          onChanged();
        } else {
          fieldvaluesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addFieldvalues(
          int index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder builderForValue) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          fieldvalues_.add(index, builderForValue.build());
          onChanged();
        } else {
          fieldvaluesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllFieldvalues(
          java.lang.Iterable<? extends edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> values) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          super.addAll(values, fieldvalues_);
          onChanged();
        } else {
          fieldvaluesBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearFieldvalues() {
        if (fieldvaluesBuilder_ == null) {
          fieldvalues_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          fieldvaluesBuilder_.clear();
        }
        return this;
      }
      public Builder removeFieldvalues(int index) {
        if (fieldvaluesBuilder_ == null) {
          ensureFieldvaluesIsMutable();
          fieldvalues_.remove(index);
          onChanged();
        } else {
          fieldvaluesBuilder_.remove(index);
        }
        return this;
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder getFieldvaluesBuilder(
          int index) {
        return getFieldvaluesFieldBuilder().getBuilder(index);
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder getFieldvaluesOrBuilder(
          int index) {
        if (fieldvaluesBuilder_ == null) {
          return fieldvalues_.get(index);  } else {
          return fieldvaluesBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> 
           getFieldvaluesOrBuilderList() {
        if (fieldvaluesBuilder_ != null) {
          return fieldvaluesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fieldvalues_);
        }
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder addFieldvaluesBuilder() {
        return getFieldvaluesFieldBuilder().addBuilder(
            edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.getDefaultInstance());
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder addFieldvaluesBuilder(
          int index) {
        return getFieldvaluesFieldBuilder().addBuilder(
            index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.getDefaultInstance());
      }
      public java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder> 
           getFieldvaluesBuilderList() {
        return getFieldvaluesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> 
          getFieldvaluesFieldBuilder() {
        if (fieldvaluesBuilder_ == null) {
          fieldvaluesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder>(
                  fieldvalues_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          fieldvalues_ = null;
        }
        return fieldvaluesBuilder_;
      }
      
      // optional bool fieldactualchange = 8;
      private boolean fieldactualchange_ ;
      public boolean hasFieldactualchange() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public boolean getFieldactualchange() {
        return fieldactualchange_;
      }
      public Builder setFieldactualchange(boolean value) {
        bitField0_ |= 0x00000080;
        fieldactualchange_ = value;
        onChanged();
        return this;
      }
      public Builder clearFieldactualchange() {
        bitField0_ = (bitField0_ & ~0x00000080);
        fieldactualchange_ = false;
        onChanged();
        return this;
      }
      
      // optional uint32 userTag = 9;
      private int userTag_ ;
      public boolean hasUserTag() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public int getUserTag() {
        return userTag_;
      }
      public Builder setUserTag(int value) {
        bitField0_ |= 0x00000100;
        userTag_ = value;
        onChanged();
        return this;
      }
      public Builder clearUserTag() {
        bitField0_ = (bitField0_ & ~0x00000100);
        userTag_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:EPICS.V4GenericBytes)
    }
    
    static {
      defaultInstance = new V4GenericBytes(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:EPICS.V4GenericBytes)
  }
  
  public interface PayloadInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required .EPICS.PayloadType type = 1;
    boolean hasType();
    edu.stanford.slac.archiverappliance.PB.EPICSEvent.PayloadType getType();
    
    // required string pvname = 2;
    boolean hasPvname();
    String getPvname();
    
    // required int32 year = 3;
    boolean hasYear();
    int getYear();
    
    // optional int32 elementCount = 4;
    boolean hasElementCount();
    int getElementCount();
    
    // optional double unused00 = 5;
    boolean hasUnused00();
    double getUnused00();
    
    // optional double unused01 = 6;
    boolean hasUnused01();
    double getUnused01();
    
    // optional double unused02 = 7;
    boolean hasUnused02();
    double getUnused02();
    
    // optional double unused03 = 8;
    boolean hasUnused03();
    double getUnused03();
    
    // optional double unused04 = 9;
    boolean hasUnused04();
    double getUnused04();
    
    // optional double unused05 = 10;
    boolean hasUnused05();
    double getUnused05();
    
    // optional double unused06 = 11;
    boolean hasUnused06();
    double getUnused06();
    
    // optional double unused07 = 12;
    boolean hasUnused07();
    double getUnused07();
    
    // optional double unused08 = 13;
    boolean hasUnused08();
    double getUnused08();
    
    // optional string unused09 = 14;
    boolean hasUnused09();
    String getUnused09();
    
    // repeated .EPICS.FieldValue headers = 15;
    java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> 
        getHeadersList();
    edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue getHeaders(int index);
    int getHeadersCount();
    java.util.List<? extends edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> 
        getHeadersOrBuilderList();
    edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder getHeadersOrBuilder(
        int index);
  }
  public static final class PayloadInfo extends
      com.google.protobuf.GeneratedMessage
      implements PayloadInfoOrBuilder {
    // Use PayloadInfo.newBuilder() to construct.
    private PayloadInfo(Builder builder) {
      super(builder);
    }
    private PayloadInfo(boolean noInit) {}
    
    private static final PayloadInfo defaultInstance;
    public static PayloadInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public PayloadInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_PayloadInfo_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_PayloadInfo_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required .EPICS.PayloadType type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private edu.stanford.slac.archiverappliance.PB.EPICSEvent.PayloadType type_;
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public edu.stanford.slac.archiverappliance.PB.EPICSEvent.PayloadType getType() {
      return type_;
    }
    
    // required string pvname = 2;
    public static final int PVNAME_FIELD_NUMBER = 2;
    private java.lang.Object pvname_;
    public boolean hasPvname() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getPvname() {
      java.lang.Object ref = pvname_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          pvname_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getPvnameBytes() {
      java.lang.Object ref = pvname_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        pvname_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required int32 year = 3;
    public static final int YEAR_FIELD_NUMBER = 3;
    private int year_;
    public boolean hasYear() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getYear() {
      return year_;
    }
    
    // optional int32 elementCount = 4;
    public static final int ELEMENTCOUNT_FIELD_NUMBER = 4;
    private int elementCount_;
    public boolean hasElementCount() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getElementCount() {
      return elementCount_;
    }
    
    // optional double unused00 = 5;
    public static final int UNUSED00_FIELD_NUMBER = 5;
    private double unused00_;
    public boolean hasUnused00() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public double getUnused00() {
      return unused00_;
    }
    
    // optional double unused01 = 6;
    public static final int UNUSED01_FIELD_NUMBER = 6;
    private double unused01_;
    public boolean hasUnused01() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public double getUnused01() {
      return unused01_;
    }
    
    // optional double unused02 = 7;
    public static final int UNUSED02_FIELD_NUMBER = 7;
    private double unused02_;
    public boolean hasUnused02() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public double getUnused02() {
      return unused02_;
    }
    
    // optional double unused03 = 8;
    public static final int UNUSED03_FIELD_NUMBER = 8;
    private double unused03_;
    public boolean hasUnused03() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public double getUnused03() {
      return unused03_;
    }
    
    // optional double unused04 = 9;
    public static final int UNUSED04_FIELD_NUMBER = 9;
    private double unused04_;
    public boolean hasUnused04() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public double getUnused04() {
      return unused04_;
    }
    
    // optional double unused05 = 10;
    public static final int UNUSED05_FIELD_NUMBER = 10;
    private double unused05_;
    public boolean hasUnused05() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public double getUnused05() {
      return unused05_;
    }
    
    // optional double unused06 = 11;
    public static final int UNUSED06_FIELD_NUMBER = 11;
    private double unused06_;
    public boolean hasUnused06() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    public double getUnused06() {
      return unused06_;
    }
    
    // optional double unused07 = 12;
    public static final int UNUSED07_FIELD_NUMBER = 12;
    private double unused07_;
    public boolean hasUnused07() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    public double getUnused07() {
      return unused07_;
    }
    
    // optional double unused08 = 13;
    public static final int UNUSED08_FIELD_NUMBER = 13;
    private double unused08_;
    public boolean hasUnused08() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    public double getUnused08() {
      return unused08_;
    }
    
    // optional string unused09 = 14;
    public static final int UNUSED09_FIELD_NUMBER = 14;
    private java.lang.Object unused09_;
    public boolean hasUnused09() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    public String getUnused09() {
      java.lang.Object ref = unused09_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          unused09_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getUnused09Bytes() {
      java.lang.Object ref = unused09_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        unused09_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // repeated .EPICS.FieldValue headers = 15;
    public static final int HEADERS_FIELD_NUMBER = 15;
    private java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> headers_;
    public java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> getHeadersList() {
      return headers_;
    }
    public java.util.List<? extends edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> 
        getHeadersOrBuilderList() {
      return headers_;
    }
    public int getHeadersCount() {
      return headers_.size();
    }
    public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue getHeaders(int index) {
      return headers_.get(index);
    }
    public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder getHeadersOrBuilder(
        int index) {
      return headers_.get(index);
    }
    
    private void initFields() {
      type_ = edu.stanford.slac.archiverappliance.PB.EPICSEvent.PayloadType.SCALAR_STRING;
      pvname_ = "";
      year_ = 0;
      elementCount_ = 0;
      unused00_ = 0D;
      unused01_ = 0D;
      unused02_ = 0D;
      unused03_ = 0D;
      unused04_ = 0D;
      unused05_ = 0D;
      unused06_ = 0D;
      unused07_ = 0D;
      unused08_ = 0D;
      unused09_ = "";
      headers_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPvname()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasYear()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getHeadersCount(); i++) {
        if (!getHeaders(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getPvnameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, year_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, elementCount_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeDouble(5, unused00_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeDouble(6, unused01_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeDouble(7, unused02_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeDouble(8, unused03_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeDouble(9, unused04_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeDouble(10, unused05_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeDouble(11, unused06_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeDouble(12, unused07_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeDouble(13, unused08_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeBytes(14, getUnused09Bytes());
      }
      for (int i = 0; i < headers_.size(); i++) {
        output.writeMessage(15, headers_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getPvnameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, year_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, elementCount_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, unused00_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, unused01_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, unused02_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(8, unused03_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(9, unused04_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(10, unused05_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(11, unused06_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(12, unused07_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(13, unused08_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(14, getUnused09Bytes());
      }
      for (int i = 0; i < headers_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, headers_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.PayloadInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.PayloadInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.PayloadInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.PayloadInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.PayloadInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.PayloadInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.PayloadInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.PayloadInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.PayloadInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.stanford.slac.archiverappliance.PB.EPICSEvent.PayloadInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.stanford.slac.archiverappliance.PB.EPICSEvent.PayloadInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements edu.stanford.slac.archiverappliance.PB.EPICSEvent.PayloadInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_PayloadInfo_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.internal_static_EPICS_PayloadInfo_fieldAccessorTable;
      }
      
      // Construct using edu.stanford.slac.archiverappliance.PB.EPICSEvent.PayloadInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getHeadersFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        type_ = edu.stanford.slac.archiverappliance.PB.EPICSEvent.PayloadType.SCALAR_STRING;
        bitField0_ = (bitField0_ & ~0x00000001);
        pvname_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        year_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        elementCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        unused00_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000010);
        unused01_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000020);
        unused02_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000040);
        unused03_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000080);
        unused04_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000100);
        unused05_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000200);
        unused06_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000400);
        unused07_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000800);
        unused08_ = 0D;
        bitField0_ = (bitField0_ & ~0x00001000);
        unused09_ = "";
        bitField0_ = (bitField0_ & ~0x00002000);
        if (headersBuilder_ == null) {
          headers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00004000);
        } else {
          headersBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.PayloadInfo.getDescriptor();
      }
      
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.PayloadInfo getDefaultInstanceForType() {
        return edu.stanford.slac.archiverappliance.PB.EPICSEvent.PayloadInfo.getDefaultInstance();
      }
      
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.PayloadInfo build() {
        edu.stanford.slac.archiverappliance.PB.EPICSEvent.PayloadInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private edu.stanford.slac.archiverappliance.PB.EPICSEvent.PayloadInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        edu.stanford.slac.archiverappliance.PB.EPICSEvent.PayloadInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.PayloadInfo buildPartial() {
        edu.stanford.slac.archiverappliance.PB.EPICSEvent.PayloadInfo result = new edu.stanford.slac.archiverappliance.PB.EPICSEvent.PayloadInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.pvname_ = pvname_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.year_ = year_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.elementCount_ = elementCount_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.unused00_ = unused00_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.unused01_ = unused01_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.unused02_ = unused02_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.unused03_ = unused03_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.unused04_ = unused04_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.unused05_ = unused05_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.unused06_ = unused06_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.unused07_ = unused07_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.unused08_ = unused08_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.unused09_ = unused09_;
        if (headersBuilder_ == null) {
          if (((bitField0_ & 0x00004000) == 0x00004000)) {
            headers_ = java.util.Collections.unmodifiableList(headers_);
            bitField0_ = (bitField0_ & ~0x00004000);
          }
          result.headers_ = headers_;
        } else {
          result.headers_ = headersBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.stanford.slac.archiverappliance.PB.EPICSEvent.PayloadInfo) {
          return mergeFrom((edu.stanford.slac.archiverappliance.PB.EPICSEvent.PayloadInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(edu.stanford.slac.archiverappliance.PB.EPICSEvent.PayloadInfo other) {
        if (other == edu.stanford.slac.archiverappliance.PB.EPICSEvent.PayloadInfo.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasPvname()) {
          setPvname(other.getPvname());
        }
        if (other.hasYear()) {
          setYear(other.getYear());
        }
        if (other.hasElementCount()) {
          setElementCount(other.getElementCount());
        }
        if (other.hasUnused00()) {
          setUnused00(other.getUnused00());
        }
        if (other.hasUnused01()) {
          setUnused01(other.getUnused01());
        }
        if (other.hasUnused02()) {
          setUnused02(other.getUnused02());
        }
        if (other.hasUnused03()) {
          setUnused03(other.getUnused03());
        }
        if (other.hasUnused04()) {
          setUnused04(other.getUnused04());
        }
        if (other.hasUnused05()) {
          setUnused05(other.getUnused05());
        }
        if (other.hasUnused06()) {
          setUnused06(other.getUnused06());
        }
        if (other.hasUnused07()) {
          setUnused07(other.getUnused07());
        }
        if (other.hasUnused08()) {
          setUnused08(other.getUnused08());
        }
        if (other.hasUnused09()) {
          setUnused09(other.getUnused09());
        }
        if (headersBuilder_ == null) {
          if (!other.headers_.isEmpty()) {
            if (headers_.isEmpty()) {
              headers_ = other.headers_;
              bitField0_ = (bitField0_ & ~0x00004000);
            } else {
              ensureHeadersIsMutable();
              headers_.addAll(other.headers_);
            }
            onChanged();
          }
        } else {
          if (!other.headers_.isEmpty()) {
            if (headersBuilder_.isEmpty()) {
              headersBuilder_.dispose();
              headersBuilder_ = null;
              headers_ = other.headers_;
              bitField0_ = (bitField0_ & ~0x00004000);
              headersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getHeadersFieldBuilder() : null;
            } else {
              headersBuilder_.addAllMessages(other.headers_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        if (!hasPvname()) {
          
          return false;
        }
        if (!hasYear()) {
          
          return false;
        }
        for (int i = 0; i < getHeadersCount(); i++) {
          if (!getHeaders(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.PayloadType value = edu.stanford.slac.archiverappliance.PB.EPICSEvent.PayloadType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              pvname_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              year_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              elementCount_ = input.readInt32();
              break;
            }
            case 41: {
              bitField0_ |= 0x00000010;
              unused00_ = input.readDouble();
              break;
            }
            case 49: {
              bitField0_ |= 0x00000020;
              unused01_ = input.readDouble();
              break;
            }
            case 57: {
              bitField0_ |= 0x00000040;
              unused02_ = input.readDouble();
              break;
            }
            case 65: {
              bitField0_ |= 0x00000080;
              unused03_ = input.readDouble();
              break;
            }
            case 73: {
              bitField0_ |= 0x00000100;
              unused04_ = input.readDouble();
              break;
            }
            case 81: {
              bitField0_ |= 0x00000200;
              unused05_ = input.readDouble();
              break;
            }
            case 89: {
              bitField0_ |= 0x00000400;
              unused06_ = input.readDouble();
              break;
            }
            case 97: {
              bitField0_ |= 0x00000800;
              unused07_ = input.readDouble();
              break;
            }
            case 105: {
              bitField0_ |= 0x00001000;
              unused08_ = input.readDouble();
              break;
            }
            case 114: {
              bitField0_ |= 0x00002000;
              unused09_ = input.readBytes();
              break;
            }
            case 122: {
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder subBuilder = edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addHeaders(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .EPICS.PayloadType type = 1;
      private edu.stanford.slac.archiverappliance.PB.EPICSEvent.PayloadType type_ = edu.stanford.slac.archiverappliance.PB.EPICSEvent.PayloadType.SCALAR_STRING;
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.PayloadType getType() {
        return type_;
      }
      public Builder setType(edu.stanford.slac.archiverappliance.PB.EPICSEvent.PayloadType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = edu.stanford.slac.archiverappliance.PB.EPICSEvent.PayloadType.SCALAR_STRING;
        onChanged();
        return this;
      }
      
      // required string pvname = 2;
      private java.lang.Object pvname_ = "";
      public boolean hasPvname() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getPvname() {
        java.lang.Object ref = pvname_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          pvname_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setPvname(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        pvname_ = value;
        onChanged();
        return this;
      }
      public Builder clearPvname() {
        bitField0_ = (bitField0_ & ~0x00000002);
        pvname_ = getDefaultInstance().getPvname();
        onChanged();
        return this;
      }
      void setPvname(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        pvname_ = value;
        onChanged();
      }
      
      // required int32 year = 3;
      private int year_ ;
      public boolean hasYear() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getYear() {
        return year_;
      }
      public Builder setYear(int value) {
        bitField0_ |= 0x00000004;
        year_ = value;
        onChanged();
        return this;
      }
      public Builder clearYear() {
        bitField0_ = (bitField0_ & ~0x00000004);
        year_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 elementCount = 4;
      private int elementCount_ ;
      public boolean hasElementCount() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getElementCount() {
        return elementCount_;
      }
      public Builder setElementCount(int value) {
        bitField0_ |= 0x00000008;
        elementCount_ = value;
        onChanged();
        return this;
      }
      public Builder clearElementCount() {
        bitField0_ = (bitField0_ & ~0x00000008);
        elementCount_ = 0;
        onChanged();
        return this;
      }
      
      // optional double unused00 = 5;
      private double unused00_ ;
      public boolean hasUnused00() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public double getUnused00() {
        return unused00_;
      }
      public Builder setUnused00(double value) {
        bitField0_ |= 0x00000010;
        unused00_ = value;
        onChanged();
        return this;
      }
      public Builder clearUnused00() {
        bitField0_ = (bitField0_ & ~0x00000010);
        unused00_ = 0D;
        onChanged();
        return this;
      }
      
      // optional double unused01 = 6;
      private double unused01_ ;
      public boolean hasUnused01() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public double getUnused01() {
        return unused01_;
      }
      public Builder setUnused01(double value) {
        bitField0_ |= 0x00000020;
        unused01_ = value;
        onChanged();
        return this;
      }
      public Builder clearUnused01() {
        bitField0_ = (bitField0_ & ~0x00000020);
        unused01_ = 0D;
        onChanged();
        return this;
      }
      
      // optional double unused02 = 7;
      private double unused02_ ;
      public boolean hasUnused02() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public double getUnused02() {
        return unused02_;
      }
      public Builder setUnused02(double value) {
        bitField0_ |= 0x00000040;
        unused02_ = value;
        onChanged();
        return this;
      }
      public Builder clearUnused02() {
        bitField0_ = (bitField0_ & ~0x00000040);
        unused02_ = 0D;
        onChanged();
        return this;
      }
      
      // optional double unused03 = 8;
      private double unused03_ ;
      public boolean hasUnused03() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public double getUnused03() {
        return unused03_;
      }
      public Builder setUnused03(double value) {
        bitField0_ |= 0x00000080;
        unused03_ = value;
        onChanged();
        return this;
      }
      public Builder clearUnused03() {
        bitField0_ = (bitField0_ & ~0x00000080);
        unused03_ = 0D;
        onChanged();
        return this;
      }
      
      // optional double unused04 = 9;
      private double unused04_ ;
      public boolean hasUnused04() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public double getUnused04() {
        return unused04_;
      }
      public Builder setUnused04(double value) {
        bitField0_ |= 0x00000100;
        unused04_ = value;
        onChanged();
        return this;
      }
      public Builder clearUnused04() {
        bitField0_ = (bitField0_ & ~0x00000100);
        unused04_ = 0D;
        onChanged();
        return this;
      }
      
      // optional double unused05 = 10;
      private double unused05_ ;
      public boolean hasUnused05() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public double getUnused05() {
        return unused05_;
      }
      public Builder setUnused05(double value) {
        bitField0_ |= 0x00000200;
        unused05_ = value;
        onChanged();
        return this;
      }
      public Builder clearUnused05() {
        bitField0_ = (bitField0_ & ~0x00000200);
        unused05_ = 0D;
        onChanged();
        return this;
      }
      
      // optional double unused06 = 11;
      private double unused06_ ;
      public boolean hasUnused06() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public double getUnused06() {
        return unused06_;
      }
      public Builder setUnused06(double value) {
        bitField0_ |= 0x00000400;
        unused06_ = value;
        onChanged();
        return this;
      }
      public Builder clearUnused06() {
        bitField0_ = (bitField0_ & ~0x00000400);
        unused06_ = 0D;
        onChanged();
        return this;
      }
      
      // optional double unused07 = 12;
      private double unused07_ ;
      public boolean hasUnused07() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      public double getUnused07() {
        return unused07_;
      }
      public Builder setUnused07(double value) {
        bitField0_ |= 0x00000800;
        unused07_ = value;
        onChanged();
        return this;
      }
      public Builder clearUnused07() {
        bitField0_ = (bitField0_ & ~0x00000800);
        unused07_ = 0D;
        onChanged();
        return this;
      }
      
      // optional double unused08 = 13;
      private double unused08_ ;
      public boolean hasUnused08() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      public double getUnused08() {
        return unused08_;
      }
      public Builder setUnused08(double value) {
        bitField0_ |= 0x00001000;
        unused08_ = value;
        onChanged();
        return this;
      }
      public Builder clearUnused08() {
        bitField0_ = (bitField0_ & ~0x00001000);
        unused08_ = 0D;
        onChanged();
        return this;
      }
      
      // optional string unused09 = 14;
      private java.lang.Object unused09_ = "";
      public boolean hasUnused09() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      public String getUnused09() {
        java.lang.Object ref = unused09_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          unused09_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setUnused09(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
        unused09_ = value;
        onChanged();
        return this;
      }
      public Builder clearUnused09() {
        bitField0_ = (bitField0_ & ~0x00002000);
        unused09_ = getDefaultInstance().getUnused09();
        onChanged();
        return this;
      }
      void setUnused09(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00002000;
        unused09_ = value;
        onChanged();
      }
      
      // repeated .EPICS.FieldValue headers = 15;
      private java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> headers_ =
        java.util.Collections.emptyList();
      private void ensureHeadersIsMutable() {
        if (!((bitField0_ & 0x00004000) == 0x00004000)) {
          headers_ = new java.util.ArrayList<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue>(headers_);
          bitField0_ |= 0x00004000;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> headersBuilder_;
      
      public java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> getHeadersList() {
        if (headersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(headers_);
        } else {
          return headersBuilder_.getMessageList();
        }
      }
      public int getHeadersCount() {
        if (headersBuilder_ == null) {
          return headers_.size();
        } else {
          return headersBuilder_.getCount();
        }
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue getHeaders(int index) {
        if (headersBuilder_ == null) {
          return headers_.get(index);
        } else {
          return headersBuilder_.getMessage(index);
        }
      }
      public Builder setHeaders(
          int index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue value) {
        if (headersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHeadersIsMutable();
          headers_.set(index, value);
          onChanged();
        } else {
          headersBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setHeaders(
          int index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder builderForValue) {
        if (headersBuilder_ == null) {
          ensureHeadersIsMutable();
          headers_.set(index, builderForValue.build());
          onChanged();
        } else {
          headersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addHeaders(edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue value) {
        if (headersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHeadersIsMutable();
          headers_.add(value);
          onChanged();
        } else {
          headersBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addHeaders(
          int index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue value) {
        if (headersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHeadersIsMutable();
          headers_.add(index, value);
          onChanged();
        } else {
          headersBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addHeaders(
          edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder builderForValue) {
        if (headersBuilder_ == null) {
          ensureHeadersIsMutable();
          headers_.add(builderForValue.build());
          onChanged();
        } else {
          headersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addHeaders(
          int index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder builderForValue) {
        if (headersBuilder_ == null) {
          ensureHeadersIsMutable();
          headers_.add(index, builderForValue.build());
          onChanged();
        } else {
          headersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllHeaders(
          java.lang.Iterable<? extends edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue> values) {
        if (headersBuilder_ == null) {
          ensureHeadersIsMutable();
          super.addAll(values, headers_);
          onChanged();
        } else {
          headersBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearHeaders() {
        if (headersBuilder_ == null) {
          headers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00004000);
          onChanged();
        } else {
          headersBuilder_.clear();
        }
        return this;
      }
      public Builder removeHeaders(int index) {
        if (headersBuilder_ == null) {
          ensureHeadersIsMutable();
          headers_.remove(index);
          onChanged();
        } else {
          headersBuilder_.remove(index);
        }
        return this;
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder getHeadersBuilder(
          int index) {
        return getHeadersFieldBuilder().getBuilder(index);
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder getHeadersOrBuilder(
          int index) {
        if (headersBuilder_ == null) {
          return headers_.get(index);  } else {
          return headersBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> 
           getHeadersOrBuilderList() {
        if (headersBuilder_ != null) {
          return headersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(headers_);
        }
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder addHeadersBuilder() {
        return getHeadersFieldBuilder().addBuilder(
            edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.getDefaultInstance());
      }
      public edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder addHeadersBuilder(
          int index) {
        return getHeadersFieldBuilder().addBuilder(
            index, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.getDefaultInstance());
      }
      public java.util.List<edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder> 
           getHeadersBuilderList() {
        return getHeadersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder> 
          getHeadersFieldBuilder() {
        if (headersBuilder_ == null) {
          headersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder, edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValueOrBuilder>(
                  headers_,
                  ((bitField0_ & 0x00004000) == 0x00004000),
                  getParentForChildren(),
                  isClean());
          headers_ = null;
        }
        return headersBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:EPICS.PayloadInfo)
    }
    
    static {
      defaultInstance = new PayloadInfo(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:EPICS.PayloadInfo)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_EPICS_FieldValue_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_EPICS_FieldValue_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_EPICS_ScalarString_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_EPICS_ScalarString_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_EPICS_ScalarByte_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_EPICS_ScalarByte_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_EPICS_ScalarShort_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_EPICS_ScalarShort_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_EPICS_ScalarInt_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_EPICS_ScalarInt_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_EPICS_ScalarEnum_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_EPICS_ScalarEnum_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_EPICS_ScalarFloat_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_EPICS_ScalarFloat_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_EPICS_ScalarDouble_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_EPICS_ScalarDouble_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_EPICS_VectorString_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_EPICS_VectorString_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_EPICS_VectorChar_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_EPICS_VectorChar_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_EPICS_VectorShort_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_EPICS_VectorShort_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_EPICS_VectorInt_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_EPICS_VectorInt_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_EPICS_VectorEnum_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_EPICS_VectorEnum_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_EPICS_VectorFloat_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_EPICS_VectorFloat_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_EPICS_VectorDouble_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_EPICS_VectorDouble_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_EPICS_V4GenericBytes_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_EPICS_V4GenericBytes_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_EPICS_PayloadInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_EPICS_PayloadInfo_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\020EPICSEvent.proto\022\005EPICS\"\'\n\nFieldValue\022" +
      "\014\n\004name\030\001 \002(\t\022\013\n\003val\030\002 \002(\t\"\302\001\n\014ScalarStr" +
      "ing\022\027\n\017secondsintoyear\030\001 \002(\r\022\014\n\004nano\030\002 \002" +
      "(\r\022\013\n\003val\030\003 \002(\t\022\023\n\010severity\030\004 \001(\005:\0010\022\021\n\006" +
      "status\030\005 \001(\005:\0010\022\023\n\013repeatcount\030\006 \001(\r\022&\n\013" +
      "fieldvalues\030\007 \003(\0132\021.EPICS.FieldValue\022\031\n\021" +
      "fieldactualchange\030\010 \001(\010\"\300\001\n\nScalarByte\022\027" +
      "\n\017secondsintoyear\030\001 \002(\r\022\014\n\004nano\030\002 \002(\r\022\013\n" +
      "\003val\030\003 \002(\014\022\023\n\010severity\030\004 \001(\005:\0010\022\021\n\006statu" +
      "s\030\005 \001(\005:\0010\022\023\n\013repeatcount\030\006 \001(\r\022&\n\013field",
      "values\030\007 \003(\0132\021.EPICS.FieldValue\022\031\n\021field" +
      "actualchange\030\010 \001(\010\"\301\001\n\013ScalarShort\022\027\n\017se" +
      "condsintoyear\030\001 \002(\r\022\014\n\004nano\030\002 \002(\r\022\013\n\003val" +
      "\030\003 \002(\021\022\023\n\010severity\030\004 \001(\005:\0010\022\021\n\006status\030\005 " +
      "\001(\005:\0010\022\023\n\013repeatcount\030\006 \001(\r\022&\n\013fieldvalu" +
      "es\030\007 \003(\0132\021.EPICS.FieldValue\022\031\n\021fieldactu" +
      "alchange\030\010 \001(\010\"\277\001\n\tScalarInt\022\027\n\017secondsi" +
      "ntoyear\030\001 \002(\r\022\014\n\004nano\030\002 \002(\r\022\013\n\003val\030\003 \002(\017" +
      "\022\023\n\010severity\030\004 \001(\005:\0010\022\021\n\006status\030\005 \001(\005:\0010" +
      "\022\023\n\013repeatcount\030\006 \001(\r\022&\n\013fieldvalues\030\007 \003",
      "(\0132\021.EPICS.FieldValue\022\031\n\021fieldactualchan" +
      "ge\030\010 \001(\010\"\300\001\n\nScalarEnum\022\027\n\017secondsintoye" +
      "ar\030\001 \002(\r\022\014\n\004nano\030\002 \002(\r\022\013\n\003val\030\003 \002(\021\022\023\n\010s" +
      "everity\030\004 \001(\005:\0010\022\021\n\006status\030\005 \001(\005:\0010\022\023\n\013r" +
      "epeatcount\030\006 \001(\r\022&\n\013fieldvalues\030\007 \003(\0132\021." +
      "EPICS.FieldValue\022\031\n\021fieldactualchange\030\010 " +
      "\001(\010\"\301\001\n\013ScalarFloat\022\027\n\017secondsintoyear\030\001" +
      " \002(\r\022\014\n\004nano\030\002 \002(\r\022\013\n\003val\030\003 \002(\002\022\023\n\010sever" +
      "ity\030\004 \001(\005:\0010\022\021\n\006status\030\005 \001(\005:\0010\022\023\n\013repea" +
      "tcount\030\006 \001(\r\022&\n\013fieldvalues\030\007 \003(\0132\021.EPIC",
      "S.FieldValue\022\031\n\021fieldactualchange\030\010 \001(\010\"" +
      "\302\001\n\014ScalarDouble\022\027\n\017secondsintoyear\030\001 \002(" +
      "\r\022\014\n\004nano\030\002 \002(\r\022\013\n\003val\030\003 \002(\001\022\023\n\010severity" +
      "\030\004 \001(\005:\0010\022\021\n\006status\030\005 \001(\005:\0010\022\023\n\013repeatco" +
      "unt\030\006 \001(\r\022&\n\013fieldvalues\030\007 \003(\0132\021.EPICS.F" +
      "ieldValue\022\031\n\021fieldactualchange\030\010 \001(\010\"\302\001\n" +
      "\014VectorString\022\027\n\017secondsintoyear\030\001 \002(\r\022\014" +
      "\n\004nano\030\002 \002(\r\022\013\n\003val\030\003 \003(\t\022\023\n\010severity\030\004 " +
      "\001(\005:\0010\022\021\n\006status\030\005 \001(\005:\0010\022\023\n\013repeatcount" +
      "\030\006 \001(\r\022&\n\013fieldvalues\030\007 \003(\0132\021.EPICS.Fiel",
      "dValue\022\031\n\021fieldactualchange\030\010 \001(\010\"\300\001\n\nVe" +
      "ctorChar\022\027\n\017secondsintoyear\030\001 \002(\r\022\014\n\004nan" +
      "o\030\002 \002(\r\022\013\n\003val\030\003 \002(\014\022\023\n\010severity\030\004 \001(\005:\001" +
      "0\022\021\n\006status\030\005 \001(\005:\0010\022\023\n\013repeatcount\030\006 \001(" +
      "\r\022&\n\013fieldvalues\030\007 \003(\0132\021.EPICS.FieldValu" +
      "e\022\031\n\021fieldactualchange\030\010 \001(\010\"\305\001\n\013VectorS" +
      "hort\022\027\n\017secondsintoyear\030\001 \002(\r\022\014\n\004nano\030\002 " +
      "\002(\r\022\017\n\003val\030\003 \003(\021B\002\020\001\022\023\n\010severity\030\004 \001(\005:\001" +
      "0\022\021\n\006status\030\005 \001(\005:\0010\022\023\n\013repeatcount\030\006 \001(" +
      "\r\022&\n\013fieldvalues\030\007 \003(\0132\021.EPICS.FieldValu",
      "e\022\031\n\021fieldactualchange\030\010 \001(\010\"\303\001\n\tVectorI" +
      "nt\022\027\n\017secondsintoyear\030\001 \002(\r\022\014\n\004nano\030\002 \002(" +
      "\r\022\017\n\003val\030\003 \003(\017B\002\020\001\022\023\n\010severity\030\004 \001(\005:\0010\022" +
      "\021\n\006status\030\005 \001(\005:\0010\022\023\n\013repeatcount\030\006 \001(\r\022" +
      "&\n\013fieldvalues\030\007 \003(\0132\021.EPICS.FieldValue\022" +
      "\031\n\021fieldactualchange\030\010 \001(\010\"\304\001\n\nVectorEnu" +
      "m\022\027\n\017secondsintoyear\030\001 \002(\r\022\014\n\004nano\030\002 \002(\r" +
      "\022\017\n\003val\030\003 \003(\021B\002\020\001\022\023\n\010severity\030\004 \001(\005:\0010\022\021" +
      "\n\006status\030\005 \001(\005:\0010\022\023\n\013repeatcount\030\006 \001(\r\022&" +
      "\n\013fieldvalues\030\007 \003(\0132\021.EPICS.FieldValue\022\031",
      "\n\021fieldactualchange\030\010 \001(\010\"\305\001\n\013VectorFloa" +
      "t\022\027\n\017secondsintoyear\030\001 \002(\r\022\014\n\004nano\030\002 \002(\r" +
      "\022\017\n\003val\030\003 \003(\002B\002\020\001\022\023\n\010severity\030\004 \001(\005:\0010\022\021" +
      "\n\006status\030\005 \001(\005:\0010\022\023\n\013repeatcount\030\006 \001(\r\022&" +
      "\n\013fieldvalues\030\007 \003(\0132\021.EPICS.FieldValue\022\031" +
      "\n\021fieldactualchange\030\010 \001(\010\"\306\001\n\014VectorDoub" +
      "le\022\027\n\017secondsintoyear\030\001 \002(\r\022\014\n\004nano\030\002 \002(" +
      "\r\022\017\n\003val\030\003 \003(\001B\002\020\001\022\023\n\010severity\030\004 \001(\005:\0010\022" +
      "\021\n\006status\030\005 \001(\005:\0010\022\023\n\013repeatcount\030\006 \001(\r\022" +
      "&\n\013fieldvalues\030\007 \003(\0132\021.EPICS.FieldValue\022",
      "\031\n\021fieldactualchange\030\010 \001(\010\"\325\001\n\016V4Generic" +
      "Bytes\022\027\n\017secondsintoyear\030\001 \002(\r\022\014\n\004nano\030\002" +
      " \002(\r\022\013\n\003val\030\003 \002(\014\022\023\n\010severity\030\004 \001(\005:\0010\022\021" +
      "\n\006status\030\005 \001(\005:\0010\022\023\n\013repeatcount\030\006 \001(\r\022&" +
      "\n\013fieldvalues\030\007 \003(\0132\021.EPICS.FieldValue\022\031" +
      "\n\021fieldactualchange\030\010 \001(\010\022\017\n\007userTag\030\t \001" +
      "(\r\"\273\002\n\013PayloadInfo\022 \n\004type\030\001 \002(\0162\022.EPICS" +
      ".PayloadType\022\016\n\006pvname\030\002 \002(\t\022\014\n\004year\030\003 \002" +
      "(\005\022\024\n\014elementCount\030\004 \001(\005\022\020\n\010unused00\030\005 \001" +
      "(\001\022\020\n\010unused01\030\006 \001(\001\022\020\n\010unused02\030\007 \001(\001\022\020",
      "\n\010unused03\030\010 \001(\001\022\020\n\010unused04\030\t \001(\001\022\020\n\010un" +
      "used05\030\n \001(\001\022\020\n\010unused06\030\013 \001(\001\022\020\n\010unused" +
      "07\030\014 \001(\001\022\020\n\010unused08\030\r \001(\001\022\020\n\010unused09\030\016" +
      " \001(\t\022\"\n\007headers\030\017 \003(\0132\021.EPICS.FieldValue" +
      "*\251\002\n\013PayloadType\022\021\n\rSCALAR_STRING\020\000\022\020\n\014S" +
      "CALAR_SHORT\020\001\022\020\n\014SCALAR_FLOAT\020\002\022\017\n\013SCALA" +
      "R_ENUM\020\003\022\017\n\013SCALAR_BYTE\020\004\022\016\n\nSCALAR_INT\020" +
      "\005\022\021\n\rSCALAR_DOUBLE\020\006\022\023\n\017WAVEFORM_STRING\020" +
      "\007\022\022\n\016WAVEFORM_SHORT\020\010\022\022\n\016WAVEFORM_FLOAT\020" +
      "\t\022\021\n\rWAVEFORM_ENUM\020\n\022\021\n\rWAVEFORM_BYTE\020\013\022",
      "\020\n\014WAVEFORM_INT\020\014\022\023\n\017WAVEFORM_DOUBLE\020\r\022\024" +
      "\n\020V4_GENERIC_BYTES\020\016B4\n&edu.stanford.sla" +
      "c.archiverappliance.PBB\nEPICSEvent"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_EPICS_FieldValue_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_EPICS_FieldValue_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_EPICS_FieldValue_descriptor,
              new java.lang.String[] { "Name", "Val", },
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.class,
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.FieldValue.Builder.class);
          internal_static_EPICS_ScalarString_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_EPICS_ScalarString_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_EPICS_ScalarString_descriptor,
              new java.lang.String[] { "Secondsintoyear", "Nano", "Val", "Severity", "Status", "Repeatcount", "Fieldvalues", "Fieldactualchange", },
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarString.class,
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarString.Builder.class);
          internal_static_EPICS_ScalarByte_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_EPICS_ScalarByte_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_EPICS_ScalarByte_descriptor,
              new java.lang.String[] { "Secondsintoyear", "Nano", "Val", "Severity", "Status", "Repeatcount", "Fieldvalues", "Fieldactualchange", },
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarByte.class,
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarByte.Builder.class);
          internal_static_EPICS_ScalarShort_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_EPICS_ScalarShort_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_EPICS_ScalarShort_descriptor,
              new java.lang.String[] { "Secondsintoyear", "Nano", "Val", "Severity", "Status", "Repeatcount", "Fieldvalues", "Fieldactualchange", },
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarShort.class,
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarShort.Builder.class);
          internal_static_EPICS_ScalarInt_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_EPICS_ScalarInt_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_EPICS_ScalarInt_descriptor,
              new java.lang.String[] { "Secondsintoyear", "Nano", "Val", "Severity", "Status", "Repeatcount", "Fieldvalues", "Fieldactualchange", },
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarInt.class,
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarInt.Builder.class);
          internal_static_EPICS_ScalarEnum_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_EPICS_ScalarEnum_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_EPICS_ScalarEnum_descriptor,
              new java.lang.String[] { "Secondsintoyear", "Nano", "Val", "Severity", "Status", "Repeatcount", "Fieldvalues", "Fieldactualchange", },
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarEnum.class,
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarEnum.Builder.class);
          internal_static_EPICS_ScalarFloat_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_EPICS_ScalarFloat_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_EPICS_ScalarFloat_descriptor,
              new java.lang.String[] { "Secondsintoyear", "Nano", "Val", "Severity", "Status", "Repeatcount", "Fieldvalues", "Fieldactualchange", },
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarFloat.class,
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarFloat.Builder.class);
          internal_static_EPICS_ScalarDouble_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_EPICS_ScalarDouble_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_EPICS_ScalarDouble_descriptor,
              new java.lang.String[] { "Secondsintoyear", "Nano", "Val", "Severity", "Status", "Repeatcount", "Fieldvalues", "Fieldactualchange", },
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarDouble.class,
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.ScalarDouble.Builder.class);
          internal_static_EPICS_VectorString_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_EPICS_VectorString_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_EPICS_VectorString_descriptor,
              new java.lang.String[] { "Secondsintoyear", "Nano", "Val", "Severity", "Status", "Repeatcount", "Fieldvalues", "Fieldactualchange", },
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorString.class,
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorString.Builder.class);
          internal_static_EPICS_VectorChar_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_EPICS_VectorChar_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_EPICS_VectorChar_descriptor,
              new java.lang.String[] { "Secondsintoyear", "Nano", "Val", "Severity", "Status", "Repeatcount", "Fieldvalues", "Fieldactualchange", },
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorChar.class,
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorChar.Builder.class);
          internal_static_EPICS_VectorShort_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_EPICS_VectorShort_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_EPICS_VectorShort_descriptor,
              new java.lang.String[] { "Secondsintoyear", "Nano", "Val", "Severity", "Status", "Repeatcount", "Fieldvalues", "Fieldactualchange", },
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorShort.class,
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorShort.Builder.class);
          internal_static_EPICS_VectorInt_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_EPICS_VectorInt_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_EPICS_VectorInt_descriptor,
              new java.lang.String[] { "Secondsintoyear", "Nano", "Val", "Severity", "Status", "Repeatcount", "Fieldvalues", "Fieldactualchange", },
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorInt.class,
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorInt.Builder.class);
          internal_static_EPICS_VectorEnum_descriptor =
            getDescriptor().getMessageTypes().get(12);
          internal_static_EPICS_VectorEnum_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_EPICS_VectorEnum_descriptor,
              new java.lang.String[] { "Secondsintoyear", "Nano", "Val", "Severity", "Status", "Repeatcount", "Fieldvalues", "Fieldactualchange", },
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorEnum.class,
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorEnum.Builder.class);
          internal_static_EPICS_VectorFloat_descriptor =
            getDescriptor().getMessageTypes().get(13);
          internal_static_EPICS_VectorFloat_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_EPICS_VectorFloat_descriptor,
              new java.lang.String[] { "Secondsintoyear", "Nano", "Val", "Severity", "Status", "Repeatcount", "Fieldvalues", "Fieldactualchange", },
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorFloat.class,
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorFloat.Builder.class);
          internal_static_EPICS_VectorDouble_descriptor =
            getDescriptor().getMessageTypes().get(14);
          internal_static_EPICS_VectorDouble_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_EPICS_VectorDouble_descriptor,
              new java.lang.String[] { "Secondsintoyear", "Nano", "Val", "Severity", "Status", "Repeatcount", "Fieldvalues", "Fieldactualchange", },
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorDouble.class,
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.VectorDouble.Builder.class);
          internal_static_EPICS_V4GenericBytes_descriptor =
            getDescriptor().getMessageTypes().get(15);
          internal_static_EPICS_V4GenericBytes_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_EPICS_V4GenericBytes_descriptor,
              new java.lang.String[] { "Secondsintoyear", "Nano", "Val", "Severity", "Status", "Repeatcount", "Fieldvalues", "Fieldactualchange", "UserTag", },
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.V4GenericBytes.class,
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.V4GenericBytes.Builder.class);
          internal_static_EPICS_PayloadInfo_descriptor =
            getDescriptor().getMessageTypes().get(16);
          internal_static_EPICS_PayloadInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_EPICS_PayloadInfo_descriptor,
              new java.lang.String[] { "Type", "Pvname", "Year", "ElementCount", "Unused00", "Unused01", "Unused02", "Unused03", "Unused04", "Unused05", "Unused06", "Unused07", "Unused08", "Unused09", "Headers", },
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.PayloadInfo.class,
              edu.stanford.slac.archiverappliance.PB.EPICSEvent.PayloadInfo.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
